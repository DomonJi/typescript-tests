{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "verify",
            "start": 244,
            "end": 250
          },
          "property": {
            "type": "Identifier",
            "name": "codeFix",
            "start": 251,
            "end": 258
          },
          "computed": false,
          "optional": false,
          "start": 244,
          "end": 258
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "description",
                  "start": 266,
                  "end": 277
                },
                "value": {
                  "type": "Literal",
                  "value": "Implement interface 'A'",
                  "start": 279,
                  "end": 304
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 266,
                "end": 304
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newFileContent",
                  "start": 311,
                  "end": 325
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "class A {\r\n    method(a: number, b: string): boolean;\r\n    method(a: string | number, b?: string | number): boolean | Function { return a + b as any; }\r\n}\r\nclass C implements A {\r\n    method(a: number, b: string): boolean;\r\n    method(a: string | number, b?: string | number): boolean | Function {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n}",
                        "cooked": "class A {\n    method(a: number, b: string): boolean;\n    method(a: string | number, b?: string | number): boolean | Function { return a + b as any; }\n}\nclass C implements A {\n    method(a: number, b: string): boolean;\n    method(a: string | number, b?: string | number): boolean | Function {\n        throw new Error(\"Method not implemented.\");\n    }\n}"
                      },
                      "tail": true,
                      "start": 328,
                      "end": 690
                    }
                  ],
                  "expressions": [],
                  "start": 328,
                  "end": 690
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 311,
                "end": 690
              }
            ],
            "start": 259,
            "end": 694
          }
        ],
        "optional": false,
        "start": 244,
        "end": 695
      },
      "start": 244,
      "end": 696
    }
  ],
  "sourceType": "script",
  "start": 244,
  "end": 698
}