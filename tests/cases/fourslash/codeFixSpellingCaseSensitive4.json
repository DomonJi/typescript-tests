{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "verify",
            "start": 274,
            "end": 280
          },
          "property": {
            "type": "Identifier",
            "name": "codeFixAll",
            "start": 281,
            "end": 291
          },
          "computed": false,
          "optional": false,
          "start": 274,
          "end": 291
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "fixId",
                  "start": 298,
                  "end": 303
                },
                "value": {
                  "type": "Literal",
                  "value": "fixSpelling",
                  "start": 305,
                  "end": 318
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 298,
                "end": 318
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "fixAllDescription",
                  "start": 324,
                  "end": 341
                },
                "value": {
                  "type": "Literal",
                  "value": "Fix all detected spelling errors",
                  "start": 343,
                  "end": 377
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 324,
                "end": 377
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newFileContent",
                  "start": 383,
                  "end": 397
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "declare let a: number;\ndeclare let b: Number;\ndeclare let c: object;\ndeclare let d: Object;\ndeclare let e: RegExp;\nnamespace yadda {\n  export type Thing = string;\n}\nlet f: yadda.Thing;",
                        "cooked": "declare let a: number;\ndeclare let b: Number;\ndeclare let c: object;\ndeclare let d: Object;\ndeclare let e: RegExp;\nnamespace yadda {\n  export type Thing = string;\n}\nlet f: yadda.Thing;"
                      },
                      "tail": true,
                      "start": 399,
                      "end": 585
                    }
                  ],
                  "expressions": [],
                  "start": 399,
                  "end": 585
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 383,
                "end": 585
              }
            ],
            "start": 292,
            "end": 588
          }
        ],
        "optional": false,
        "start": 274,
        "end": 589
      },
      "start": 274,
      "end": 590
    }
  ],
  "sourceType": "module",
  "start": 274,
  "end": 591
}