{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 113,
            "end": 117
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 118,
            "end": 124
          },
          "computed": false,
          "optional": false,
          "start": 113,
          "end": 124
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a",
            "start": 125,
            "end": 128
          },
          {
            "type": "Literal",
            "value": "b",
            "start": 130,
            "end": 133
          }
        ],
        "optional": false,
        "start": 113,
        "end": 134
      },
      "start": 113,
      "end": 135
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 137,
            "end": 141
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 142,
            "end": 155
          },
          "computed": false,
          "optional": false,
          "start": 137,
          "end": 155
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 163,
                  "end": 175
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to optional chain expression",
                  "start": 177,
                  "end": 215
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 163,
                "end": 215
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 222,
                  "end": 232
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to optional chain expression",
                  "start": 234,
                  "end": 272
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 222,
                "end": 272
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 279,
                  "end": 296
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to optional chain expression",
                  "start": 298,
                  "end": 336
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 279,
                "end": 336
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 343,
                  "end": 353
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "let a = { b: { c: 0 } };\r\na?.b?.c === 1;",
                        "cooked": "let a = { b: { c: 0 } };\na?.b?.c === 1;"
                      },
                      "tail": true,
                      "start": 356,
                      "end": 398
                    }
                  ],
                  "expressions": [],
                  "start": 356,
                  "end": 398
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 343,
                "end": 398
              }
            ],
            "start": 156,
            "end": 401
          }
        ],
        "optional": false,
        "start": 137,
        "end": 402
      },
      "start": 137,
      "end": 403
    }
  ],
  "sourceType": "script",
  "start": 113,
  "end": 403
}