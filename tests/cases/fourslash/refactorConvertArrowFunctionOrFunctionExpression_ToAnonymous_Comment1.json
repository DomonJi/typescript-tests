{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 112,
            "end": 116
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 117,
            "end": 123
          },
          "computed": false,
          "optional": false,
          "start": 112,
          "end": 123
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a",
            "start": 124,
            "end": 127
          },
          {
            "type": "Literal",
            "value": "b",
            "start": 129,
            "end": 132
          }
        ],
        "optional": false,
        "start": 112,
        "end": 133
      },
      "start": 112,
      "end": 134
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 136,
            "end": 140
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 141,
            "end": 154
          },
          "computed": false,
          "optional": false,
          "start": 136,
          "end": 154
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 162,
                  "end": 174
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert arrow function or function expression",
                  "start": 176,
                  "end": 223
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 162,
                "end": 223
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 230,
                  "end": 240
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to anonymous function",
                  "start": 242,
                  "end": 273
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 230,
                "end": 273
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 280,
                  "end": 297
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to anonymous function",
                  "start": 299,
                  "end": 330
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 280,
                "end": 330
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 337,
                  "end": 347
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "const foo = function() {\r\n    /**\r\n     * comment\r\n     */\r\n    return 1;\r\n}",
                        "cooked": "const foo = function() {\n    /**\n     * comment\n     */\n    return 1;\n}"
                      },
                      "tail": true,
                      "start": 349,
                      "end": 427
                    }
                  ],
                  "expressions": [],
                  "start": 349,
                  "end": 427
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 337,
                "end": 427
              }
            ],
            "start": 155,
            "end": 430
          }
        ],
        "optional": false,
        "start": 136,
        "end": 431
      },
      "start": 136,
      "end": 432
    }
  ],
  "sourceType": "script",
  "start": 112,
  "end": 434
}