{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 144,
            "end": 148
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 149,
            "end": 155
          },
          "computed": false,
          "optional": false,
          "start": 144,
          "end": 155
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a",
            "start": 156,
            "end": 159
          },
          {
            "type": "Literal",
            "value": "b",
            "start": 161,
            "end": 164
          }
        ],
        "optional": false,
        "start": 144,
        "end": 165
      },
      "start": 144,
      "end": 166
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 168,
            "end": 172
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 173,
            "end": 186
          },
          "computed": false,
          "optional": false,
          "start": 168,
          "end": 186
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 194,
                  "end": 206
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to optional chain expression",
                  "start": 208,
                  "end": 246
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 194,
                "end": 246
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 253,
                  "end": 263
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to optional chain expression",
                  "start": 265,
                  "end": 303
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 253,
                "end": 303
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 310,
                  "end": 327
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to optional chain expression",
                  "start": 329,
                  "end": 367
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 310,
                "end": 367
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 374,
                  "end": 384
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "let a = { b: { c: 0 } };\r\nfunction f(){\r\n    return a?.b?.c;\r\n}",
                        "cooked": "let a = { b: { c: 0 } };\nfunction f(){\n    return a?.b?.c;\n}"
                      },
                      "tail": true,
                      "start": 387,
                      "end": 452
                    }
                  ],
                  "expressions": [],
                  "start": 387,
                  "end": 452
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 374,
                "end": 452
              }
            ],
            "start": 187,
            "end": 455
          }
        ],
        "optional": false,
        "start": 168,
        "end": 456
      },
      "start": 168,
      "end": 457
    }
  ],
  "sourceType": "script",
  "start": 144,
  "end": 457
}