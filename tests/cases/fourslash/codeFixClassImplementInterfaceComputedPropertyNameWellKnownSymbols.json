{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "verify",
            "start": 724,
            "end": 730
          },
          "property": {
            "type": "Identifier",
            "name": "codeFix",
            "start": 731,
            "end": 738
          },
          "computed": false,
          "optional": false,
          "start": 724,
          "end": 738
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "index",
                  "start": 746,
                  "end": 751
                },
                "value": {
                  "type": "Literal",
                  "value": 0,
                  "start": 753,
                  "end": 754
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 746,
                "end": 754
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "description",
                  "start": 761,
                  "end": 772
                },
                "value": {
                  "type": "Literal",
                  "value": "Implement interface 'I<number>'",
                  "start": 774,
                  "end": 807
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 761,
                "end": 807
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newFileContent",
                  "start": 814,
                  "end": 828
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "interface I<Species> {\r\n    [Symbol.hasInstance](o: any): boolean;\r\n    [Symbol.isConcatSpreadable]: boolean;\r\n    [Symbol.iterator](): any;\r\n    [Symbol.match]: boolean;\r\n    [Symbol.replace](...args);\r\n    [Symbol.search](str: string): number;\r\n    [Symbol.species](): Species;\r\n    [Symbol.split](str: string, limit?: number): string[];\r\n    [Symbol.toPrimitive](hint: \"number\"): number;\r\n    [Symbol.toPrimitive](hint: \"default\"): number;\r\n    [Symbol.toPrimitive](hint: \"string\"): string;\r\n    [Symbol.toStringTag]: string;\r\n    [Symbol.unscopables]: any;\r\n}\r\nclass C implements I<number> {\r\n    [Symbol.hasInstance](o: any): boolean {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    [Symbol.isConcatSpreadable]: boolean;\r\n    [Symbol.iterator]() {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    [Symbol.match]: boolean;\r\n    [Symbol.replace](...args: any[]) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    [Symbol.search](str: string): number {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    [Symbol.species](): number {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    [Symbol.split](str: string, limit?: number): string[] {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    [Symbol.toPrimitive](hint: \"number\"): number;\r\n    [Symbol.toPrimitive](hint: \"default\"): number;\r\n    [Symbol.toPrimitive](hint: \"string\"): string;\r\n    [Symbol.toPrimitive](hint: unknown): string | number {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    [Symbol.toStringTag]: string;\r\n    [Symbol.unscopables]: any;\r\n}",
                        "cooked": "interface I<Species> {\n    [Symbol.hasInstance](o: any): boolean;\n    [Symbol.isConcatSpreadable]: boolean;\n    [Symbol.iterator](): any;\n    [Symbol.match]: boolean;\n    [Symbol.replace](...args);\n    [Symbol.search](str: string): number;\n    [Symbol.species](): Species;\n    [Symbol.split](str: string, limit?: number): string[];\n    [Symbol.toPrimitive](hint: \"number\"): number;\n    [Symbol.toPrimitive](hint: \"default\"): number;\n    [Symbol.toPrimitive](hint: \"string\"): string;\n    [Symbol.toStringTag]: string;\n    [Symbol.unscopables]: any;\n}\nclass C implements I<number> {\n    [Symbol.hasInstance](o: any): boolean {\n        throw new Error(\"Method not implemented.\");\n    }\n    [Symbol.isConcatSpreadable]: boolean;\n    [Symbol.iterator]() {\n        throw new Error(\"Method not implemented.\");\n    }\n    [Symbol.match]: boolean;\n    [Symbol.replace](...args: any[]) {\n        throw new Error(\"Method not implemented.\");\n    }\n    [Symbol.search](str: string): number {\n        throw new Error(\"Method not implemented.\");\n    }\n    [Symbol.species](): number {\n        throw new Error(\"Method not implemented.\");\n    }\n    [Symbol.split](str: string, limit?: number): string[] {\n        throw new Error(\"Method not implemented.\");\n    }\n    [Symbol.toPrimitive](hint: \"number\"): number;\n    [Symbol.toPrimitive](hint: \"default\"): number;\n    [Symbol.toPrimitive](hint: \"string\"): string;\n    [Symbol.toPrimitive](hint: unknown): string | number {\n        throw new Error(\"Method not implemented.\");\n    }\n    [Symbol.toStringTag]: string;\n    [Symbol.unscopables]: any;\n}"
                      },
                      "tail": true,
                      "start": 831,
                      "end": 2456
                    }
                  ],
                  "expressions": [],
                  "start": 831,
                  "end": 2456
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 814,
                "end": 2456
              }
            ],
            "start": 739,
            "end": 2460
          }
        ],
        "optional": false,
        "start": 724,
        "end": 2461
      },
      "start": 724,
      "end": 2462
    }
  ],
  "sourceType": "script",
  "start": 724,
  "end": 2464
}