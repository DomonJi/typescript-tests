{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 170,
            "end": 174
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 175,
            "end": 181
          },
          "computed": false,
          "optional": false,
          "start": 170,
          "end": 181
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "x",
            "start": 182,
            "end": 185
          },
          {
            "type": "Literal",
            "value": "y",
            "start": 187,
            "end": 190
          }
        ],
        "optional": false,
        "start": 170,
        "end": 191
      },
      "start": 170,
      "end": 192
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 194,
            "end": 198
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 199,
            "end": 212
          },
          "computed": false,
          "optional": false,
          "start": 194,
          "end": 212
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 220,
                  "end": 232
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert arrow function or function expression",
                  "start": 234,
                  "end": 281
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 220,
                "end": 281
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 288,
                  "end": 298
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to named function",
                  "start": 300,
                  "end": 327
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 288,
                "end": 327
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 334,
                  "end": 351
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to named function",
                  "start": 353,
                  "end": 380
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 334,
                "end": 380
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 387,
                  "end": 397
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "// Do not add me second time\r\nexport function foo(a) {\r\n    let b = 1;\r\n    return a + b;\r\n}",
                        "cooked": "// Do not add me second time\nexport function foo(a) {\n    let b = 1;\n    return a + b;\n}"
                      },
                      "tail": true,
                      "start": 399,
                      "end": 493
                    }
                  ],
                  "expressions": [],
                  "start": 399,
                  "end": 493
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 387,
                "end": 493
              }
            ],
            "start": 213,
            "end": 497
          }
        ],
        "optional": false,
        "start": 194,
        "end": 498
      },
      "start": 194,
      "end": 499
    }
  ],
  "sourceType": "module",
  "start": 170,
  "end": 501
}