{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 194,
            "end": 198
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 199,
            "end": 205
          },
          "computed": false,
          "optional": false,
          "start": 194,
          "end": 205
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a",
            "start": 206,
            "end": 209
          },
          {
            "type": "Literal",
            "value": "b",
            "start": 211,
            "end": 214
          }
        ],
        "optional": false,
        "start": 194,
        "end": 215
      },
      "start": 194,
      "end": 216
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 218,
            "end": 222
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 223,
            "end": 236
          },
          "computed": false,
          "optional": false,
          "start": 218,
          "end": 236
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 244,
                  "end": 256
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 258,
                  "end": 301
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 244,
                "end": 301
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 308,
                  "end": 318
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 320,
                  "end": 363
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 308,
                "end": 363
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 370,
                  "end": 387
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 389,
                  "end": 432
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 370,
                "end": 432
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 439,
                  "end": 449
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "const f = function foo({ a, b }: { a: number; b: number; }) {\r\n    foo({ a: 1, b: 2 });\r\n}\r\nfunction foo(a: number, b: number) { }\r\nfoo(3, 4);",
                        "cooked": "const f = function foo({ a, b }: { a: number; b: number; }) {\n    foo({ a: 1, b: 2 });\n}\nfunction foo(a: number, b: number) { }\nfoo(3, 4);"
                      },
                      "tail": true,
                      "start": 451,
                      "end": 595
                    }
                  ],
                  "expressions": [],
                  "start": 451,
                  "end": 595
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 439,
                "end": 595
              }
            ],
            "start": 237,
            "end": 598
          }
        ],
        "optional": false,
        "start": 218,
        "end": 599
      },
      "start": 218,
      "end": 600
    }
  ],
  "sourceType": "module",
  "start": 194,
  "end": 600
}