{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "verify",
            "start": 297,
            "end": 303
          },
          "property": {
            "type": "Identifier",
            "name": "codeFix",
            "start": 304,
            "end": 311
          },
          "computed": false,
          "optional": false,
          "start": 297,
          "end": 311
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "description",
                  "start": 318,
                  "end": 329
                },
                "value": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "ts",
                        "start": 331,
                        "end": 333
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "Diagnostics",
                        "start": 334,
                        "end": 345
                      },
                      "computed": false,
                      "optional": false,
                      "start": 331,
                      "end": 345
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "Annotate_with_type_from_JSDoc",
                      "start": 346,
                      "end": 375
                    },
                    "computed": false,
                    "optional": false,
                    "start": 331,
                    "end": 375
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "message",
                    "start": 376,
                    "end": 383
                  },
                  "computed": false,
                  "optional": false,
                  "start": 331,
                  "end": 383
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 318,
                "end": 383
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "index",
                  "start": 389,
                  "end": 394
                },
                "value": {
                  "type": "Literal",
                  "value": 2,
                  "start": 396,
                  "end": 397
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 389,
                "end": 397
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newFileContent",
                  "start": 403,
                  "end": 417
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "/**\n * @typedef Foo\n * @template L, R\n */\n/**\n * @param {function(R): boolean} a\n * @param {function(R): L} b\n * @returns {function(R): Foo.<L, R>}\n * @template L, R\n */\nfunction foo<L, R>(a: (arg0: R) => boolean, b: (arg0: R) => L): (arg0: R) => Foo<L, R> {\n}",
                        "cooked": "/**\n * @typedef Foo\n * @template L, R\n */\n/**\n * @param {function(R): boolean} a\n * @param {function(R): L} b\n * @returns {function(R): Foo.<L, R>}\n * @template L, R\n */\nfunction foo<L, R>(a: (arg0: R) => boolean, b: (arg0: R) => L): (arg0: R) => Foo<L, R> {\n}"
                      },
                      "tail": true,
                      "start": 419,
                      "end": 681
                    }
                  ],
                  "expressions": [],
                  "start": 419,
                  "end": 681
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 403,
                "end": 681
              }
            ],
            "start": 312,
            "end": 684
          }
        ],
        "optional": false,
        "start": 297,
        "end": 685
      },
      "start": 297,
      "end": 686
    }
  ],
  "sourceType": "script",
  "start": 297,
  "end": 687
}