{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 104,
            "end": 108
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 109,
            "end": 115
          },
          "computed": false,
          "optional": false,
          "start": 104,
          "end": 115
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a",
            "start": 116,
            "end": 119
          },
          {
            "type": "Literal",
            "value": "b",
            "start": 121,
            "end": 124
          }
        ],
        "optional": false,
        "start": 104,
        "end": 125
      },
      "start": 104,
      "end": 126
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 128,
            "end": 132
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 133,
            "end": 146
          },
          "computed": false,
          "optional": false,
          "start": 128,
          "end": 146
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 154,
                  "end": 166
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to optional chain expression",
                  "start": 168,
                  "end": 206
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 154,
                "end": 206
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 213,
                  "end": 223
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to optional chain expression",
                  "start": 225,
                  "end": 263
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 213,
                "end": 263
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 270,
                  "end": 287
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to optional chain expression",
                  "start": 289,
                  "end": 327
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 270,
                "end": 327
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 334,
                  "end": 344
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "let a = { b: 0 };\r\na?.b ?? \"whenFalse\";",
                        "cooked": "let a = { b: 0 };\na?.b ?? \"whenFalse\";"
                      },
                      "tail": true,
                      "start": 347,
                      "end": 388
                    }
                  ],
                  "expressions": [],
                  "start": 347,
                  "end": 388
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 334,
                "end": 388
              }
            ],
            "start": 147,
            "end": 391
          }
        ],
        "optional": false,
        "start": 128,
        "end": 392
      },
      "start": 128,
      "end": 393
    }
  ],
  "sourceType": "script",
  "start": 104,
  "end": 393
}