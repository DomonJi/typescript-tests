{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 214,
            "end": 218
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 219,
            "end": 225
          },
          "computed": false,
          "optional": false,
          "start": 214,
          "end": 225
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a",
            "start": 226,
            "end": 229
          },
          {
            "type": "Literal",
            "value": "b",
            "start": 231,
            "end": 234
          }
        ],
        "optional": false,
        "start": 214,
        "end": 235
      },
      "start": 214,
      "end": 236
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 238,
            "end": 242
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 243,
            "end": 256
          },
          "computed": false,
          "optional": false,
          "start": 238,
          "end": 256
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 263,
                  "end": 275
                },
                "value": {
                  "type": "Literal",
                  "value": "Add or remove braces in an arrow function",
                  "start": 277,
                  "end": 320
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 263,
                "end": 320
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 326,
                  "end": 336
                },
                "value": {
                  "type": "Literal",
                  "value": "Add braces to arrow function",
                  "start": 338,
                  "end": 368
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 326,
                "end": 368
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 374,
                  "end": 391
                },
                "value": {
                  "type": "Literal",
                  "value": "Add braces to arrow function",
                  "start": 393,
                  "end": 423
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 374,
                "end": 423
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 429,
                  "end": 439
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "const x = () =>\n           {\n        return <div>:</div>;\n    }",
                        "cooked": "const x = () =>\n           {\n        return <div>:</div>;\n    }"
                      },
                      "tail": true,
                      "start": 441,
                      "end": 506
                    }
                  ],
                  "expressions": [],
                  "start": 441,
                  "end": 506
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 429,
                "end": 506
              }
            ],
            "start": 257,
            "end": 509
          }
        ],
        "optional": false,
        "start": 238,
        "end": 510
      },
      "start": 238,
      "end": 511
    }
  ],
  "sourceType": "script",
  "start": 214,
  "end": 512
}