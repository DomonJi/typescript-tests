{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "defaultFormatOption",
            "start": 1172,
            "end": 1191
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "format",
                "start": 1194,
                "end": 1200
              },
              "property": {
                "type": "Identifier",
                "name": "copyFormatOptions",
                "start": 1201,
                "end": 1218
              },
              "computed": false,
              "optional": false,
              "start": 1194,
              "end": 1218
            },
            "arguments": [],
            "optional": false,
            "start": 1194,
            "end": 1220
          },
          "start": 1172,
          "end": 1220
        }
      ],
      "kind": "const",
      "start": 1166,
      "end": 1221
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "runTest",
          "start": 1225,
          "end": 1232
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "insertSpaceAfterCommaDelimiter",
            "start": 1233,
            "end": 1265
          },
          {
            "type": "Literal",
            "value": "[1, 2, 3];[72,];",
            "start": 1267,
            "end": 1285
          },
          {
            "type": "Literal",
            "value": "[1,2,3];[72,];",
            "start": 1287,
            "end": 1303
          }
        ],
        "optional": false,
        "start": 1225,
        "end": 1304
      },
      "start": 1225,
      "end": 1305
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "runTest",
          "start": 1307,
          "end": 1314
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "insertSpaceAfterSemicolonInForStatements",
            "start": 1315,
            "end": 1357
          },
          {
            "type": "Literal",
            "value": "for (i = 0; i; i++);",
            "start": 1359,
            "end": 1381
          },
          {
            "type": "Literal",
            "value": "for (i = 0;i;i++);",
            "start": 1383,
            "end": 1403
          }
        ],
        "optional": false,
        "start": 1307,
        "end": 1404
      },
      "start": 1307,
      "end": 1405
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "runTest",
          "start": 1407,
          "end": 1414
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "insertSpaceBeforeAndAfterBinaryOperators",
            "start": 1415,
            "end": 1457
          },
          {
            "type": "Literal",
            "value": "1 + 2 - 3",
            "start": 1459,
            "end": 1470
          },
          {
            "type": "Literal",
            "value": "1+2-3",
            "start": 1472,
            "end": 1479
          }
        ],
        "optional": false,
        "start": 1407,
        "end": 1480
      },
      "start": 1407,
      "end": 1481
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "runTest",
          "start": 1483,
          "end": 1490
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "insertSpaceAfterKeywordsInControlFlowStatements",
            "start": 1491,
            "end": 1540
          },
          {
            "type": "Literal",
            "value": "if (true) { }",
            "start": 1542,
            "end": 1557
          },
          {
            "type": "Literal",
            "value": "if(true) { }",
            "start": 1559,
            "end": 1573
          }
        ],
        "optional": false,
        "start": 1483,
        "end": 1574
      },
      "start": 1483,
      "end": 1575
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "runTest",
          "start": 1577,
          "end": 1584
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "insertSpaceAfterFunctionKeywordForAnonymousFunctions",
            "start": 1585,
            "end": 1639
          },
          {
            "type": "Literal",
            "value": "(function () { })",
            "start": 1641,
            "end": 1660
          },
          {
            "type": "Literal",
            "value": "(function() { })",
            "start": 1662,
            "end": 1680
          }
        ],
        "optional": false,
        "start": 1577,
        "end": 1681
      },
      "start": 1577,
      "end": 1682
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "runTest",
          "start": 1684,
          "end": 1691
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis",
            "start": 1692,
            "end": 1752
          },
          {
            "type": "Literal",
            "value": "    ( 1 )",
            "start": 1754,
            "end": 1765
          },
          {
            "type": "Literal",
            "value": "    (1)",
            "start": 1767,
            "end": 1776
          }
        ],
        "optional": false,
        "start": 1684,
        "end": 1777
      },
      "start": 1684,
      "end": 1778
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "runTest",
          "start": 1780,
          "end": 1787
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets",
            "start": 1788,
            "end": 1845
          },
          {
            "type": "Literal",
            "value": "[ 1 ];[];[];[ , ];",
            "start": 1847,
            "end": 1867
          },
          {
            "type": "Literal",
            "value": "[1];[];[];[,];",
            "start": 1869,
            "end": 1885
          }
        ],
        "optional": false,
        "start": 1780,
        "end": 1886
      },
      "start": 1780,
      "end": 1887
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "runTest",
          "start": 1889,
          "end": 1896
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces",
            "start": 1897,
            "end": 1958
          },
          {
            "type": "Literal",
            "value": "`${ 1 }`; `${ 1 }`",
            "start": 1960,
            "end": 1980
          },
          {
            "type": "Literal",
            "value": "`${1}`; `${1}`",
            "start": 1982,
            "end": 1998
          }
        ],
        "optional": false,
        "start": 1889,
        "end": 1999
      },
      "start": 1889,
      "end": 2000
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "runTest",
          "start": 2002,
          "end": 2009
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "insertSpaceAfterTypeAssertion",
            "start": 2010,
            "end": 2041
          },
          {
            "type": "Literal",
            "value": "const bar = <Bar> Thing.getFoo();",
            "start": 2043,
            "end": 2078
          },
          {
            "type": "Literal",
            "value": "const bar = <Bar>Thing.getFoo();",
            "start": 2080,
            "end": 2114
          }
        ],
        "optional": false,
        "start": 2002,
        "end": 2115
      },
      "start": 2002,
      "end": 2116
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "runTest",
          "start": 2118,
          "end": 2125
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "insertSpaceBeforeTypeAnnotation",
            "start": 2126,
            "end": 2159
          },
          {
            "type": "Literal",
            "value": "const bar : number = 1;",
            "start": 2161,
            "end": 2186
          },
          {
            "type": "Literal",
            "value": "const bar: number = 1;",
            "start": 2188,
            "end": 2212
          }
        ],
        "optional": false,
        "start": 2118,
        "end": 2213
      },
      "start": 2118,
      "end": 2214
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "runTest",
          "start": 2216,
          "end": 2223
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "placeOpenBraceOnNewLineForFunctions",
            "start": 2224,
            "end": 2261
          },
          {
            "type": "Literal",
            "value": "class foo",
            "start": 2263,
            "end": 2274
          },
          {
            "type": "Literal",
            "value": "class foo {",
            "start": 2276,
            "end": 2289
          }
        ],
        "optional": false,
        "start": 2216,
        "end": 2290
      },
      "start": 2216,
      "end": 2291
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "runTest",
          "start": 2293,
          "end": 2300
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "placeOpenBraceOnNewLineForControlBlocks",
            "start": 2301,
            "end": 2342
          },
          {
            "type": "Literal",
            "value": "if (true)",
            "start": 2344,
            "end": 2355
          },
          {
            "type": "Literal",
            "value": "if (true) {",
            "start": 2357,
            "end": 2370
          }
        ],
        "optional": false,
        "start": 2293,
        "end": 2371
      },
      "start": 2293,
      "end": 2372
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "runTest",
          "start": 2374,
          "end": 2381
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces",
            "start": 2382,
            "end": 2437
          },
          {
            "type": "Literal",
            "value": "{ var t = 1 }; var { a, b } = { a: 'sw', b: 'r' }; function f({ a, b }) { }",
            "start": 2439,
            "end": 2516
          },
          {
            "type": "Literal",
            "value": "{var t = 1}; var {a, b} = {a: 'sw', b: 'r'}; function f({a, b}) {}",
            "start": 2518,
            "end": 2586
          }
        ],
        "optional": false,
        "start": 2374,
        "end": 2587
      },
      "start": 2374,
      "end": 2588
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "runTest",
          "start": 2590,
          "end": 2597
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "insertSpaceAfterOpeningAndBeforeClosingEmptyBraces",
            "start": 2598,
            "end": 2650
          },
          {
            "type": "Literal",
            "value": "constructor() { }",
            "start": 2652,
            "end": 2671
          },
          {
            "type": "Literal",
            "value": "constructor() {}",
            "start": 2673,
            "end": 2691
          }
        ],
        "optional": false,
        "start": 2590,
        "end": 2692
      },
      "start": 2590,
      "end": 2693
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "runTest",
        "start": 2706,
        "end": 2713
      },
      "generator": false,
      "expression": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "name": "propertyName",
          "typeAnnotation": {
            "type": "TSTypeAnnotation",
            "typeAnnotation": {
              "type": "TSStringKeyword",
              "start": 2728,
              "end": 2734
            },
            "start": 2726,
            "end": 2734
          },
          "start": 2714,
          "end": 2734
        },
        {
          "type": "Identifier",
          "name": "expectedStringWhenTrue",
          "typeAnnotation": {
            "type": "TSTypeAnnotation",
            "typeAnnotation": {
              "type": "TSStringKeyword",
              "start": 2760,
              "end": 2766
            },
            "start": 2758,
            "end": 2766
          },
          "start": 2736,
          "end": 2766
        },
        {
          "type": "Identifier",
          "name": "expectedStringWhenFalse",
          "typeAnnotation": {
            "type": "TSTypeAnnotation",
            "typeAnnotation": {
              "type": "TSStringKeyword",
              "start": 2793,
              "end": 2799
            },
            "start": 2791,
            "end": 2799
          },
          "start": 2768,
          "end": 2799
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "goTo",
                  "start": 2839,
                  "end": 2843
                },
                "property": {
                  "type": "Identifier",
                  "name": "marker",
                  "start": 2844,
                  "end": 2850
                },
                "computed": false,
                "optional": false,
                "start": 2839,
                "end": 2850
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "propertyName",
                  "start": 2851,
                  "end": 2863
                }
              ],
              "optional": false,
              "start": 2839,
              "end": 2864
            },
            "start": 2839,
            "end": 2865
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "format",
                  "start": 2911,
                  "end": 2917
                },
                "property": {
                  "type": "Identifier",
                  "name": "setOption",
                  "start": 2918,
                  "end": 2927
                },
                "computed": false,
                "optional": false,
                "start": 2911,
                "end": 2927
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "propertyName",
                  "start": 2928,
                  "end": 2940
                },
                {
                  "type": "Literal",
                  "value": false,
                  "start": 2942,
                  "end": 2947
                }
              ],
              "optional": false,
              "start": 2911,
              "end": 2948
            },
            "start": 2911,
            "end": 2949
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "format",
                  "start": 2972,
                  "end": 2978
                },
                "property": {
                  "type": "Identifier",
                  "name": "document",
                  "start": 2979,
                  "end": 2987
                },
                "computed": false,
                "optional": false,
                "start": 2972,
                "end": 2987
              },
              "arguments": [],
              "optional": false,
              "start": 2972,
              "end": 2989
            },
            "start": 2972,
            "end": 2990
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "goTo",
                  "start": 3013,
                  "end": 3017
                },
                "property": {
                  "type": "Identifier",
                  "name": "marker",
                  "start": 3018,
                  "end": 3024
                },
                "computed": false,
                "optional": false,
                "start": 3013,
                "end": 3024
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "propertyName",
                  "start": 3025,
                  "end": 3037
                }
              ],
              "optional": false,
              "start": 3013,
              "end": 3038
            },
            "start": 3013,
            "end": 3039
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "verify",
                  "start": 3045,
                  "end": 3051
                },
                "property": {
                  "type": "Identifier",
                  "name": "currentLineContentIs",
                  "start": 3052,
                  "end": 3072
                },
                "computed": false,
                "optional": false,
                "start": 3045,
                "end": 3072
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "expectedStringWhenFalse",
                  "start": 3073,
                  "end": 3096
                }
              ],
              "optional": false,
              "start": 3045,
              "end": 3097
            },
            "start": 3045,
            "end": 3098
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "format",
                  "start": 3137,
                  "end": 3143
                },
                "property": {
                  "type": "Identifier",
                  "name": "setOption",
                  "start": 3144,
                  "end": 3153
                },
                "computed": false,
                "optional": false,
                "start": 3137,
                "end": 3153
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "propertyName",
                  "start": 3154,
                  "end": 3166
                },
                {
                  "type": "Literal",
                  "value": true,
                  "start": 3168,
                  "end": 3172
                }
              ],
              "optional": false,
              "start": 3137,
              "end": 3173
            },
            "start": 3137,
            "end": 3174
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "format",
                  "start": 3197,
                  "end": 3203
                },
                "property": {
                  "type": "Identifier",
                  "name": "document",
                  "start": 3204,
                  "end": 3212
                },
                "computed": false,
                "optional": false,
                "start": 3197,
                "end": 3212
              },
              "arguments": [],
              "optional": false,
              "start": 3197,
              "end": 3214
            },
            "start": 3197,
            "end": 3215
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "goTo",
                  "start": 3238,
                  "end": 3242
                },
                "property": {
                  "type": "Identifier",
                  "name": "marker",
                  "start": 3243,
                  "end": 3249
                },
                "computed": false,
                "optional": false,
                "start": 3238,
                "end": 3249
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "propertyName",
                  "start": 3250,
                  "end": 3262
                }
              ],
              "optional": false,
              "start": 3238,
              "end": 3263
            },
            "start": 3238,
            "end": 3264
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "verify",
                  "start": 3270,
                  "end": 3276
                },
                "property": {
                  "type": "Identifier",
                  "name": "currentLineContentIs",
                  "start": 3277,
                  "end": 3297
                },
                "computed": false,
                "optional": false,
                "start": 3270,
                "end": 3297
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "expectedStringWhenTrue",
                  "start": 3298,
                  "end": 3320
                }
              ],
              "optional": false,
              "start": 3270,
              "end": 3321
            },
            "start": 3270,
            "end": 3322
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "format",
                  "start": 3330,
                  "end": 3336
                },
                "property": {
                  "type": "Identifier",
                  "name": "setOption",
                  "start": 3337,
                  "end": 3346
                },
                "computed": false,
                "optional": false,
                "start": 3330,
                "end": 3346
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "propertyName",
                  "start": 3347,
                  "end": 3359
                },
                {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "defaultFormatOption",
                    "start": 3361,
                    "end": 3380
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "propertyName",
                    "start": 3381,
                    "end": 3393
                  },
                  "computed": true,
                  "optional": false,
                  "start": 3361,
                  "end": 3394
                }
              ],
              "optional": false,
              "start": 3330,
              "end": 3395
            },
            "start": 3330,
            "end": 3395
          }
        ],
        "start": 2801,
        "end": 3398
      },
      "start": 2697,
      "end": 3398
    }
  ],
  "sourceType": "script",
  "start": 1166,
  "end": 3398
}