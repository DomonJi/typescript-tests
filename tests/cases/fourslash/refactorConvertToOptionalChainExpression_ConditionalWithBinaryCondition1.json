{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 120,
            "end": 124
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 125,
            "end": 131
          },
          "computed": false,
          "optional": false,
          "start": 120,
          "end": 131
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a",
            "start": 132,
            "end": 135
          },
          {
            "type": "Literal",
            "value": "b",
            "start": 137,
            "end": 140
          }
        ],
        "optional": false,
        "start": 120,
        "end": 141
      },
      "start": 120,
      "end": 142
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 144,
            "end": 148
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 149,
            "end": 162
          },
          "computed": false,
          "optional": false,
          "start": 144,
          "end": 162
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 170,
                  "end": 182
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to optional chain expression",
                  "start": 184,
                  "end": 222
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 170,
                "end": 222
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 229,
                  "end": 239
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to optional chain expression",
                  "start": 241,
                  "end": 279
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 229,
                "end": 279
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 286,
                  "end": 303
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to optional chain expression",
                  "start": 305,
                  "end": 343
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 286,
                "end": 343
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 350,
                  "end": 360
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "let a = { b: { c: 0 } };\r\na?.b ? a.b.c : \"whenFalse\";",
                        "cooked": "let a = { b: { c: 0 } };\na?.b ? a.b.c : \"whenFalse\";"
                      },
                      "tail": true,
                      "start": 363,
                      "end": 418
                    }
                  ],
                  "expressions": [],
                  "start": 363,
                  "end": 418
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 350,
                "end": 418
              }
            ],
            "start": 163,
            "end": 421
          }
        ],
        "optional": false,
        "start": 144,
        "end": 422
      },
      "start": 144,
      "end": 423
    }
  ],
  "sourceType": "module",
  "start": 120,
  "end": 423
}