{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 123,
            "end": 127
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 128,
            "end": 134
          },
          "computed": false,
          "optional": false,
          "start": 123,
          "end": 134
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a",
            "start": 135,
            "end": 138
          },
          {
            "type": "Literal",
            "value": "b",
            "start": 140,
            "end": 143
          }
        ],
        "optional": false,
        "start": 123,
        "end": 144
      },
      "start": 123,
      "end": 145
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 147,
            "end": 151
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 152,
            "end": 165
          },
          "computed": false,
          "optional": false,
          "start": 147,
          "end": 165
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 173,
                  "end": 185
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to optional chain expression",
                  "start": 187,
                  "end": 225
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 173,
                "end": 225
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 232,
                  "end": 242
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to optional chain expression",
                  "start": 244,
                  "end": 282
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 232,
                "end": 282
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 289,
                  "end": 306
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to optional chain expression",
                  "start": 308,
                  "end": 346
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 289,
                "end": 346
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 353,
                  "end": 363
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "let a = { b: { c: () => { } } };\r\na?.b?.c() === 1;",
                        "cooked": "let a = { b: { c: () => { } } };\na?.b?.c() === 1;"
                      },
                      "tail": true,
                      "start": 366,
                      "end": 418
                    }
                  ],
                  "expressions": [],
                  "start": 366,
                  "end": 418
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 353,
                "end": 418
              }
            ],
            "start": 166,
            "end": 421
          }
        ],
        "optional": false,
        "start": 147,
        "end": 422
      },
      "start": 147,
      "end": 423
    }
  ],
  "sourceType": "module",
  "start": 123,
  "end": 423
}