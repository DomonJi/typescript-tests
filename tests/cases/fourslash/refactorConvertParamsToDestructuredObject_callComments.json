{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 222,
            "end": 226
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 227,
            "end": 233
          },
          "computed": false,
          "optional": false,
          "start": 222,
          "end": 233
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a",
            "start": 234,
            "end": 237
          },
          {
            "type": "Literal",
            "value": "b",
            "start": 239,
            "end": 242
          }
        ],
        "optional": false,
        "start": 222,
        "end": 243
      },
      "start": 222,
      "end": 244
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 246,
            "end": 250
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 251,
            "end": 264
          },
          "computed": false,
          "optional": false,
          "start": 246,
          "end": 264
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 272,
                  "end": 284
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 286,
                  "end": 329
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 272,
                "end": 329
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 336,
                  "end": 346
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 348,
                  "end": 391
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 336,
                "end": 391
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 398,
                  "end": 415
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 417,
                  "end": 460
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 398,
                "end": 460
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 467,
                  "end": 477
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "function foo({ a, b, rest = [] }: { a: number; b: number; rest?: number[]; }) {\r\n    return a + b;\r\n}\r\nfoo({ /**a*/ a: 1 /**b*/, /**c*/ b: 2 /**d*/, rest: [/**e*/ 3 /**f*/, /**g*/ 4 /**h*/] });",
                        "cooked": "function foo({ a, b, rest = [] }: { a: number; b: number; rest?: number[]; }) {\n    return a + b;\n}\nfoo({ /**a*/ a: 1 /**b*/, /**c*/ b: 2 /**d*/, rest: [/**e*/ 3 /**f*/, /**g*/ 4 /**h*/] });"
                      },
                      "tail": true,
                      "start": 479,
                      "end": 674
                    }
                  ],
                  "expressions": [],
                  "start": 479,
                  "end": 674
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 467,
                "end": 674
              }
            ],
            "start": 265,
            "end": 677
          }
        ],
        "optional": false,
        "start": 246,
        "end": 678
      },
      "start": 246,
      "end": 679
    }
  ],
  "sourceType": "script",
  "start": 222,
  "end": 679
}