{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "format",
            "start": 478,
            "end": 484
          },
          "property": {
            "type": "Identifier",
            "name": "selection",
            "start": 485,
            "end": 494
          },
          "computed": false,
          "optional": false,
          "start": 478,
          "end": 494
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "1",
            "start": 495,
            "end": 498
          },
          {
            "type": "Literal",
            "value": "2",
            "start": 500,
            "end": 503
          }
        ],
        "optional": false,
        "start": 478,
        "end": 504
      },
      "start": 478,
      "end": 505
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "verify",
            "start": 506,
            "end": 512
          },
          "property": {
            "type": "Identifier",
            "name": "currentFileContentIs",
            "start": 513,
            "end": 533
          },
          "computed": false,
          "optional": false,
          "start": 506,
          "end": 533
        },
        "arguments": [
          {
            "type": "TemplateLiteral",
            "quasis": [
              {
                "type": "TemplateElement",
                "value": {
                  "raw": "function TestWidget() {\n    const test = true;\n    return (\n        <div>\n            {test &&\n                <div>\n                    <div>some text</div>\n                    <div>some text</div>\n                    <div>some text</div>\n                </div>\n            }\n            <div>some text</div>\n        </div>\n    );\n}",
                  "cooked": "function TestWidget() {\n    const test = true;\n    return (\n        <div>\n            {test &&\n                <div>\n                    <div>some text</div>\n                    <div>some text</div>\n                    <div>some text</div>\n                </div>\n            }\n            <div>some text</div>\n        </div>\n    );\n}"
                },
                "tail": true,
                "start": 539,
                "end": 874
              }
            ],
            "expressions": [],
            "start": 539,
            "end": 874
          }
        ],
        "optional": false,
        "start": 506,
        "end": 875
      },
      "start": 506,
      "end": 875
    }
  ],
  "sourceType": "script",
  "start": 478,
  "end": 876
}