{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 130,
            "end": 134
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 135,
            "end": 141
          },
          "computed": false,
          "optional": false,
          "start": 130,
          "end": 141
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "x",
            "start": 142,
            "end": 145
          },
          {
            "type": "Literal",
            "value": "y",
            "start": 147,
            "end": 150
          }
        ],
        "optional": false,
        "start": 130,
        "end": 151
      },
      "start": 130,
      "end": 152
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 154,
            "end": 158
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 159,
            "end": 172
          },
          "computed": false,
          "optional": false,
          "start": 154,
          "end": 172
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 180,
                  "end": 192
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert arrow function or function expression",
                  "start": 194,
                  "end": 241
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 180,
                "end": 241
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 248,
                  "end": 258
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to anonymous function",
                  "start": 260,
                  "end": 291
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 248,
                "end": 291
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 298,
                  "end": 315
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to anonymous function",
                  "start": 317,
                  "end": 348
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 298,
                "end": 348
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 355,
                  "end": 365
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "const foo = function(a) {\r\n    let b = 1;\r\n    return a + b;\r\n};",
                        "cooked": "const foo = function(a) {\n    let b = 1;\n    return a + b;\n};"
                      },
                      "tail": true,
                      "start": 367,
                      "end": 433
                    }
                  ],
                  "expressions": [],
                  "start": 367,
                  "end": 433
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 355,
                "end": 433
              }
            ],
            "start": 173,
            "end": 437
          }
        ],
        "optional": false,
        "start": 154,
        "end": 438
      },
      "start": 154,
      "end": 439
    }
  ],
  "sourceType": "module",
  "start": 130,
  "end": 441
}