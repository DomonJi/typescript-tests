{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 122,
            "end": 126
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 127,
            "end": 133
          },
          "computed": false,
          "optional": false,
          "start": 122,
          "end": 133
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a",
            "start": 134,
            "end": 137
          },
          {
            "type": "Literal",
            "value": "b",
            "start": 139,
            "end": 142
          }
        ],
        "optional": false,
        "start": 122,
        "end": 143
      },
      "start": 122,
      "end": 144
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 146,
            "end": 150
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 151,
            "end": 164
          },
          "computed": false,
          "optional": false,
          "start": 146,
          "end": 164
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 172,
                  "end": 184
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 186,
                  "end": 229
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 172,
                "end": 229
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 236,
                  "end": 246
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 248,
                  "end": 291
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 236,
                "end": 291
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 298,
                  "end": 315
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 317,
                  "end": 360
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 298,
                "end": 360
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 367,
                  "end": 377
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "const foo = function({ a, b }: { a: number; b: number; }) { };\r\nfoo({ a: 1, b: 2 });",
                        "cooked": "const foo = function({ a, b }: { a: number; b: number; }) { };\nfoo({ a: 1, b: 2 });"
                      },
                      "tail": true,
                      "start": 379,
                      "end": 465
                    }
                  ],
                  "expressions": [],
                  "start": 379,
                  "end": 465
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 367,
                "end": 465
              }
            ],
            "start": 165,
            "end": 468
          }
        ],
        "optional": false,
        "start": 146,
        "end": 469
      },
      "start": 146,
      "end": 470
    }
  ],
  "sourceType": "module",
  "start": 122,
  "end": 470
}