{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "verify",
            "start": 444,
            "end": 450
          },
          "property": {
            "type": "Identifier",
            "name": "codeFixAll",
            "start": 451,
            "end": 461
          },
          "computed": false,
          "optional": false,
          "start": 444,
          "end": 461
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "fixId",
                  "start": 468,
                  "end": 473
                },
                "value": {
                  "type": "Literal",
                  "value": "inferFromUsage",
                  "start": 475,
                  "end": 491
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 468,
                "end": 491
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "fixAllDescription",
                  "start": 497,
                  "end": 514
                },
                "value": {
                  "type": "Literal",
                  "value": "Infer all types from usage",
                  "start": 516,
                  "end": 544
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 497,
                "end": 544
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newFileContent",
                  "start": 550,
                  "end": 564
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "interface Options {\n    run(a: number, b: string, c: { x: number; y: number; }, d: number[], e: I, f: E): void;\n}\n\ninterface I {\n    x: number;\n}\n\nenum E {\n    X\n}\n\nfunction foo(options: Options) {\n    const a = 1;\n    const b = \"\";\n    const c = { x: 1, y: 1 };\n    const d = [1, 2, 3];\n    const e: I = { x: 1 };\n    const f: E = E.X;\n\n    options.run(a, b, c, d, e, f);\n}",
                        "cooked": "interface Options {\n    run(a: number, b: string, c: { x: number; y: number; }, d: number[], e: I, f: E): void;\n}\n\ninterface I {\n    x: number;\n}\n\nenum E {\n    X\n}\n\nfunction foo(options: Options) {\n    const a = 1;\n    const b = \"\";\n    const c = { x: 1, y: 1 };\n    const d = [1, 2, 3];\n    const e: I = { x: 1 };\n    const f: E = E.X;\n\n    options.run(a, b, c, d, e, f);\n}"
                      },
                      "tail": true,
                      "start": 566,
                      "end": 942
                    }
                  ],
                  "expressions": [],
                  "start": 566,
                  "end": 942
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 550,
                "end": 942
              }
            ],
            "start": 462,
            "end": 945
          }
        ],
        "optional": false,
        "start": 444,
        "end": 946
      },
      "start": 444,
      "end": 947
    }
  ],
  "sourceType": "script",
  "start": 444,
  "end": 948
}