{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "verify",
            "start": 173,
            "end": 179
          },
          "property": {
            "type": "Identifier",
            "name": "codeFix",
            "start": 180,
            "end": 187
          },
          "computed": false,
          "optional": false,
          "start": 173,
          "end": 187
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "description",
                  "start": 195,
                  "end": 206
                },
                "value": {
                  "type": "Literal",
                  "value": "Add missing 'typeof'",
                  "start": 208,
                  "end": 230
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 195,
                "end": 230
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newFileContent",
                  "start": 237,
                  "end": 251
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "declare module \"foo\" {\r\n    const a = \"foo\"\r\n    export = a\r\n}\r\nconst x: typeof import(\"foo\") = import(\"foo\");",
                        "cooked": "declare module \"foo\" {\n    const a = \"foo\"\n    export = a\n}\nconst x: typeof import(\"foo\") = import(\"foo\");"
                      },
                      "tail": true,
                      "start": 253,
                      "end": 365
                    }
                  ],
                  "expressions": [],
                  "start": 253,
                  "end": 365
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 237,
                "end": 365
              }
            ],
            "start": 188,
            "end": 368
          }
        ],
        "optional": false,
        "start": 173,
        "end": 369
      },
      "start": 173,
      "end": 370
    }
  ],
  "sourceType": "module",
  "start": 173,
  "end": 372
}