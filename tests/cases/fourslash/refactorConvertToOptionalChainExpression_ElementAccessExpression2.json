{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 124,
            "end": 128
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 129,
            "end": 135
          },
          "computed": false,
          "optional": false,
          "start": 124,
          "end": 135
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a",
            "start": 136,
            "end": 139
          },
          {
            "type": "Literal",
            "value": "b",
            "start": 141,
            "end": 144
          }
        ],
        "optional": false,
        "start": 124,
        "end": 145
      },
      "start": 124,
      "end": 146
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 148,
            "end": 152
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 153,
            "end": 166
          },
          "computed": false,
          "optional": false,
          "start": 148,
          "end": 166
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 174,
                  "end": 186
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to optional chain expression",
                  "start": 188,
                  "end": 226
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 174,
                "end": 226
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 233,
                  "end": 243
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to optional chain expression",
                  "start": 245,
                  "end": 283
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 233,
                "end": 283
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 290,
                  "end": 307
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to optional chain expression",
                  "start": 309,
                  "end": 347
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 290,
                "end": 347
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 354,
                  "end": 364
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "const a = {\r\n    b: { c: 1 }\r\n}\r\na?.b?.['c']",
                        "cooked": "const a = {\n    b: { c: 1 }\n}\na?.b?.['c']"
                      },
                      "tail": true,
                      "start": 367,
                      "end": 413
                    }
                  ],
                  "expressions": [],
                  "start": 367,
                  "end": 413
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 354,
                "end": 413
              }
            ],
            "start": 167,
            "end": 416
          }
        ],
        "optional": false,
        "start": 148,
        "end": 417
      },
      "start": 148,
      "end": 418
    }
  ],
  "sourceType": "script",
  "start": 124,
  "end": 420
}