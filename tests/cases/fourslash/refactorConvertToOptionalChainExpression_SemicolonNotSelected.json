{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 115,
            "end": 119
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 120,
            "end": 126
          },
          "computed": false,
          "optional": false,
          "start": 115,
          "end": 126
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a",
            "start": 127,
            "end": 130
          },
          {
            "type": "Literal",
            "value": "b",
            "start": 132,
            "end": 135
          }
        ],
        "optional": false,
        "start": 115,
        "end": 136
      },
      "start": 115,
      "end": 137
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 139,
            "end": 143
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 144,
            "end": 157
          },
          "computed": false,
          "optional": false,
          "start": 139,
          "end": 157
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 165,
                  "end": 177
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to optional chain expression",
                  "start": 179,
                  "end": 217
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 165,
                "end": 217
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 224,
                  "end": 234
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to optional chain expression",
                  "start": 236,
                  "end": 274
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 224,
                "end": 274
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 281,
                  "end": 298
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to optional chain expression",
                  "start": 300,
                  "end": 338
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 281,
                "end": 338
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 345,
                  "end": 355
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "let a = { b: { c: 0 } };\r\nlet x = a?.b?.c;",
                        "cooked": "let a = { b: { c: 0 } };\nlet x = a?.b?.c;"
                      },
                      "tail": true,
                      "start": 358,
                      "end": 402
                    }
                  ],
                  "expressions": [],
                  "start": 358,
                  "end": 402
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 345,
                "end": 402
              }
            ],
            "start": 158,
            "end": 405
          }
        ],
        "optional": false,
        "start": 139,
        "end": 406
      },
      "start": 139,
      "end": 407
    }
  ],
  "sourceType": "script",
  "start": 115,
  "end": 407
}