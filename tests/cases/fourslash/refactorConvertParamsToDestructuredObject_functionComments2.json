{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 204,
            "end": 208
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 209,
            "end": 215
          },
          "computed": false,
          "optional": false,
          "start": 204,
          "end": 215
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a",
            "start": 216,
            "end": 219
          },
          {
            "type": "Literal",
            "value": "b",
            "start": 221,
            "end": 224
          }
        ],
        "optional": false,
        "start": 204,
        "end": 225
      },
      "start": 204,
      "end": 226
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 228,
            "end": 232
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 233,
            "end": 246
          },
          "computed": false,
          "optional": false,
          "start": 228,
          "end": 246
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 254,
                  "end": 266
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 268,
                  "end": 311
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 254,
                "end": 311
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 318,
                  "end": 328
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 330,
                  "end": 373
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 318,
                "end": 373
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 380,
                  "end": 397
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 399,
                  "end": 442
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 380,
                "end": 442
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 449,
                  "end": 459
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "function foo(// comment\r\n{ a, b }: {\r\n    // a comment\r\n    a: number;\r\n    // b comment\r\n    b: number;\r\n}) {\r\n    return a + b;\r\n}",
                        "cooked": "function foo(// comment\n{ a, b }: {\n    // a comment\n    a: number;\n    // b comment\n    b: number;\n}) {\n    return a + b;\n}"
                      },
                      "tail": true,
                      "start": 461,
                      "end": 595
                    }
                  ],
                  "expressions": [],
                  "start": 461,
                  "end": 595
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 449,
                "end": 595
              }
            ],
            "start": 247,
            "end": 598
          }
        ],
        "optional": false,
        "start": 228,
        "end": 599
      },
      "start": 228,
      "end": 600
    }
  ],
  "sourceType": "script",
  "start": 204,
  "end": 600
}