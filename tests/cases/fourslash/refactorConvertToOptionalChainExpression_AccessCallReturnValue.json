{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 125,
            "end": 129
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 130,
            "end": 136
          },
          "computed": false,
          "optional": false,
          "start": 125,
          "end": 136
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a",
            "start": 137,
            "end": 140
          },
          {
            "type": "Literal",
            "value": "b",
            "start": 142,
            "end": 145
          }
        ],
        "optional": false,
        "start": 125,
        "end": 146
      },
      "start": 125,
      "end": 147
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 149,
            "end": 153
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 154,
            "end": 167
          },
          "computed": false,
          "optional": false,
          "start": 149,
          "end": 167
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 175,
                  "end": 187
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to optional chain expression",
                  "start": 189,
                  "end": 227
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 175,
                "end": 227
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 234,
                  "end": 244
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to optional chain expression",
                  "start": 246,
                  "end": 284
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 234,
                "end": 284
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 291,
                  "end": 308
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to optional chain expression",
                  "start": 310,
                  "end": 348
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 291,
                "end": 348
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 355,
                  "end": 365
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "let a = { b: () => { return { c: 0 } } }\r\na?.b?.().c;",
                        "cooked": "let a = { b: () => { return { c: 0 } } }\na?.b?.().c;"
                      },
                      "tail": true,
                      "start": 368,
                      "end": 423
                    }
                  ],
                  "expressions": [],
                  "start": 368,
                  "end": 423
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 355,
                "end": 423
              }
            ],
            "start": 168,
            "end": 426
          }
        ],
        "optional": false,
        "start": 149,
        "end": 427
      },
      "start": 149,
      "end": 428
    }
  ],
  "sourceType": "module",
  "start": 125,
  "end": 428
}