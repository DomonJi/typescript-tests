{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 249,
            "end": 253
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 254,
            "end": 260
          },
          "computed": false,
          "optional": false,
          "start": 249,
          "end": 260
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a",
            "start": 261,
            "end": 264
          },
          {
            "type": "Literal",
            "value": "b",
            "start": 266,
            "end": 269
          }
        ],
        "optional": false,
        "start": 249,
        "end": 270
      },
      "start": 249,
      "end": 271
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 273,
            "end": 277
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 278,
            "end": 291
          },
          "computed": false,
          "optional": false,
          "start": 273,
          "end": 291
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 299,
                  "end": 311
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 313,
                  "end": 356
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 299,
                "end": 356
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 363,
                  "end": 373
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 375,
                  "end": 418
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 363,
                "end": 418
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 425,
                  "end": 442
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 444,
                  "end": 487
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 425,
                "end": 487
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 494,
                  "end": 504
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "class A { \r\n    constructor({ a, b }: { a: string; b: string; }) { }\r\n}\r\nclass B extends A { \r\n    constructor(a: string, b: string, c: string) {\r\n        super({ a, b });\r\n    }\r\n}",
                        "cooked": "class A { \n    constructor({ a, b }: { a: string; b: string; }) { }\n}\nclass B extends A { \n    constructor(a: string, b: string, c: string) {\n        super({ a, b });\n    }\n}"
                      },
                      "tail": true,
                      "start": 506,
                      "end": 689
                    }
                  ],
                  "expressions": [],
                  "start": 506,
                  "end": 689
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 494,
                "end": 689
              }
            ],
            "start": 292,
            "end": 692
          }
        ],
        "optional": false,
        "start": 273,
        "end": 693
      },
      "start": 273,
      "end": 694
    }
  ],
  "sourceType": "script",
  "start": 249,
  "end": 694
}