{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 157,
            "end": 161
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 162,
            "end": 168
          },
          "computed": false,
          "optional": false,
          "start": 157,
          "end": 168
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a",
            "start": 169,
            "end": 172
          },
          {
            "type": "Literal",
            "value": "b",
            "start": 174,
            "end": 177
          }
        ],
        "optional": false,
        "start": 157,
        "end": 178
      },
      "start": 157,
      "end": 179
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 181,
            "end": 185
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 186,
            "end": 199
          },
          "computed": false,
          "optional": false,
          "start": 181,
          "end": 199
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 207,
                  "end": 219
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to optional chain expression",
                  "start": 221,
                  "end": 259
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 207,
                "end": 259
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 266,
                  "end": 276
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to optional chain expression",
                  "start": 278,
                  "end": 316
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 266,
                "end": 316
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 323,
                  "end": 340
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to optional chain expression",
                  "start": 342,
                  "end": 380
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 323,
                "end": 380
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 387,
                  "end": 397
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "let foo = { bar: { baz: 0 } };\r\nf(foo?.bar?.baz);",
                        "cooked": "let foo = { bar: { baz: 0 } };\nf(foo?.bar?.baz);"
                      },
                      "tail": true,
                      "start": 400,
                      "end": 451
                    }
                  ],
                  "expressions": [],
                  "start": 400,
                  "end": 451
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 387,
                "end": 451
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "triggerReason",
                  "start": 458,
                  "end": 471
                },
                "value": {
                  "type": "Literal",
                  "value": "invoked",
                  "start": 473,
                  "end": 482
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 458,
                "end": 482
              }
            ],
            "start": 200,
            "end": 485
          }
        ],
        "optional": false,
        "start": 181,
        "end": 486
      },
      "start": 181,
      "end": 487
    }
  ],
  "sourceType": "script",
  "start": 157,
  "end": 487
}