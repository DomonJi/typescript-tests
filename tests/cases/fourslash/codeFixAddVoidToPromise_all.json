{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "verify",
            "start": 360,
            "end": 366
          },
          "property": {
            "type": "Identifier",
            "name": "codeFixAll",
            "start": 367,
            "end": 377
          },
          "computed": false,
          "optional": false,
          "start": 360,
          "end": 377
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "fixId",
                  "start": 385,
                  "end": 390
                },
                "value": {
                  "type": "Literal",
                  "value": "addVoidToPromise",
                  "start": 392,
                  "end": 410
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 385,
                "end": 410
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "fixAllDescription",
                  "start": 417,
                  "end": 434
                },
                "value": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "ts",
                        "start": 436,
                        "end": 438
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "Diagnostics",
                        "start": 439,
                        "end": 450
                      },
                      "computed": false,
                      "optional": false,
                      "start": 436,
                      "end": 450
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "Add_void_to_all_Promises_resolved_without_a_value",
                      "start": 451,
                      "end": 500
                    },
                    "computed": false,
                    "optional": false,
                    "start": 436,
                    "end": 500
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "message",
                    "start": 501,
                    "end": 508
                  },
                  "computed": false,
                  "optional": false,
                  "start": 436,
                  "end": 508
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 417,
                "end": 508
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newFileContent",
                  "start": 515,
                  "end": 529
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "const p1 = new Promise<void>(resolve => resolve());\r\nconst p2 = new Promise<number | void>(resolve => resolve());\r\nconst p3 = new Promise<number | string | void>(resolve => resolve());\r\nconst p4 = new Promise<({ x: number } & { y: string }) | void>(resolve => resolve());",
                        "cooked": "const p1 = new Promise<void>(resolve => resolve());\nconst p2 = new Promise<number | void>(resolve => resolve());\nconst p3 = new Promise<number | string | void>(resolve => resolve());\nconst p4 = new Promise<({ x: number } & { y: string }) | void>(resolve => resolve());"
                      },
                      "tail": true,
                      "start": 531,
                      "end": 804
                    }
                  ],
                  "expressions": [],
                  "start": 531,
                  "end": 804
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 515,
                "end": 804
              }
            ],
            "start": 378,
            "end": 807
          }
        ],
        "optional": false,
        "start": 360,
        "end": 808
      },
      "start": 360,
      "end": 809
    }
  ],
  "sourceType": "module",
  "start": 360,
  "end": 811
}