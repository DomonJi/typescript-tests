{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 122,
            "end": 126
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 127,
            "end": 133
          },
          "computed": false,
          "optional": false,
          "start": 122,
          "end": 133
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a",
            "start": 134,
            "end": 137
          },
          {
            "type": "Literal",
            "value": "b",
            "start": 139,
            "end": 142
          }
        ],
        "optional": false,
        "start": 122,
        "end": 143
      },
      "start": 122,
      "end": 144
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 145,
            "end": 149
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 150,
            "end": 163
          },
          "computed": false,
          "optional": false,
          "start": 145,
          "end": 163
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 170,
                  "end": 182
                },
                "value": {
                  "type": "Literal",
                  "value": "Add or remove braces in an arrow function",
                  "start": 184,
                  "end": 227
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 170,
                "end": 227
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 233,
                  "end": 243
                },
                "value": {
                  "type": "Literal",
                  "value": "Remove braces from arrow function",
                  "start": 245,
                  "end": 280
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 233,
                "end": 280
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 286,
                  "end": 303
                },
                "value": {
                  "type": "Literal",
                  "value": "Remove braces from arrow function",
                  "start": 305,
                  "end": 340
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 286,
                "end": 340
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 346,
                  "end": 356
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "const a = (a: number) => /* leading */ a /* trailing */;",
                        "cooked": "const a = (a: number) => /* leading */ a /* trailing */;"
                      },
                      "tail": true,
                      "start": 358,
                      "end": 416
                    }
                  ],
                  "expressions": [],
                  "start": 358,
                  "end": 416
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 346,
                "end": 416
              }
            ],
            "start": 164,
            "end": 419
          }
        ],
        "optional": false,
        "start": 145,
        "end": 420
      },
      "start": 145,
      "end": 421
    }
  ],
  "sourceType": "script",
  "start": 122,
  "end": 422
}