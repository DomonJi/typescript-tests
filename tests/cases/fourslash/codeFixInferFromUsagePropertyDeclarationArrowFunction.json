{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "verify",
            "start": 473,
            "end": 479
          },
          "property": {
            "type": "Identifier",
            "name": "codeFixAll",
            "start": 480,
            "end": 490
          },
          "computed": false,
          "optional": false,
          "start": 473,
          "end": 490
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "fixId",
                  "start": 495,
                  "end": 500
                },
                "value": {
                  "type": "Literal",
                  "value": "inferFromUsage",
                  "start": 502,
                  "end": 518
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 495,
                "end": 518
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "fixAllDescription",
                  "start": 522,
                  "end": 539
                },
                "value": {
                  "type": "Literal",
                  "value": "Infer all types from usage",
                  "start": 541,
                  "end": 569
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 522,
                "end": 569
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newFileContent",
                  "start": 573,
                  "end": 587
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "class MyClass {\n    bar = (a: number, b: string, c: { x: number; y: number; }, d: number[], e: I, f: E) => {};\n};\n\ninterface I {\n    x: number;\n}\n\nenum E {\n    X\n}\n\nfunction foo(x: MyClass) {\n    const a = 1;\n    const b = \"\";\n    const c = { x: 1, y: 1 };\n    const d = [1, 2, 3];\n    const e: I = { x: 1 };\n    const f: E = E.X;\n    x.bar(a, b, c, d, e, f);\n}",
                        "cooked": "class MyClass {\n    bar = (a: number, b: string, c: { x: number; y: number; }, d: number[], e: I, f: E) => {};\n};\n\ninterface I {\n    x: number;\n}\n\nenum E {\n    X\n}\n\nfunction foo(x: MyClass) {\n    const a = 1;\n    const b = \"\";\n    const c = { x: 1, y: 1 };\n    const d = [1, 2, 3];\n    const e: I = { x: 1 };\n    const f: E = E.X;\n    x.bar(a, b, c, d, e, f);\n}"
                      },
                      "tail": true,
                      "start": 589,
                      "end": 952
                    }
                  ],
                  "expressions": [],
                  "start": 589,
                  "end": 952
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 573,
                "end": 952
              }
            ],
            "start": 491,
            "end": 955
          }
        ],
        "optional": false,
        "start": 473,
        "end": 956
      },
      "start": 473,
      "end": 957
    }
  ],
  "sourceType": "module",
  "start": 473,
  "end": 958
}