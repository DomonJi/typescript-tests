{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 200,
            "end": 204
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 205,
            "end": 211
          },
          "computed": false,
          "optional": false,
          "start": 200,
          "end": 211
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a",
            "start": 212,
            "end": 215
          },
          {
            "type": "Literal",
            "value": "b",
            "start": 217,
            "end": 220
          }
        ],
        "optional": false,
        "start": 200,
        "end": 221
      },
      "start": 200,
      "end": 222
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 224,
            "end": 228
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 229,
            "end": 242
          },
          "computed": false,
          "optional": false,
          "start": 224,
          "end": 242
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 250,
                  "end": 262
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to optional chain expression",
                  "start": 264,
                  "end": 302
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 250,
                "end": 302
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 309,
                  "end": 319
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to optional chain expression",
                  "start": 321,
                  "end": 359
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 309,
                "end": 359
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 366,
                  "end": 383
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to optional chain expression",
                  "start": 385,
                  "end": 423
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 366,
                "end": 423
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 430,
                  "end": 440
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "let a = { b: { c: { d: { e: {f: 0} } } } };\r\na.b?.c.d?.e.f;",
                        "cooked": "let a = { b: { c: { d: { e: {f: 0} } } } };\na.b?.c.d?.e.f;"
                      },
                      "tail": true,
                      "start": 443,
                      "end": 504
                    }
                  ],
                  "expressions": [],
                  "start": 443,
                  "end": 504
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 430,
                "end": 504
              }
            ],
            "start": 243,
            "end": 507
          }
        ],
        "optional": false,
        "start": 224,
        "end": 508
      },
      "start": 224,
      "end": 509
    }
  ],
  "sourceType": "script",
  "start": 200,
  "end": 509
}