{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 296,
            "end": 300
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 301,
            "end": 307
          },
          "computed": false,
          "optional": false,
          "start": 296,
          "end": 307
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a",
            "start": 308,
            "end": 311
          },
          {
            "type": "Literal",
            "value": "b",
            "start": 313,
            "end": 316
          }
        ],
        "optional": false,
        "start": 296,
        "end": 317
      },
      "start": 296,
      "end": 318
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 320,
            "end": 324
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 325,
            "end": 338
          },
          "computed": false,
          "optional": false,
          "start": 320,
          "end": 338
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 346,
                  "end": 358
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 360,
                  "end": 403
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 346,
                "end": 403
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 410,
                  "end": 420
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 422,
                  "end": 465
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 410,
                "end": 465
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 472,
                  "end": 489
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 491,
                  "end": 534
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 472,
                "end": 534
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 541,
                  "end": 551
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "function f({ a, b, rest = [] }: { a: number; b: number; rest?: string[]; }) { }\r\nconst a = 4;\r\nconst b = 5;\r\nf({ a, b });\r\nconst rest = [\"a\", \"b\", \"c\"];\r\nf({ a, b, rest: [...rest] });\r\nf({ /** a */ a /** aa */, /** b */ b /** bb */ });",
                        "cooked": "function f({ a, b, rest = [] }: { a: number; b: number; rest?: string[]; }) { }\nconst a = 4;\nconst b = 5;\nf({ a, b });\nconst rest = [\"a\", \"b\", \"c\"];\nf({ a, b, rest: [...rest] });\nf({ /** a */ a /** aa */, /** b */ b /** bb */ });"
                      },
                      "tail": true,
                      "start": 553,
                      "end": 790
                    }
                  ],
                  "expressions": [],
                  "start": 553,
                  "end": 790
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 541,
                "end": 790
              }
            ],
            "start": 339,
            "end": 793
          }
        ],
        "optional": false,
        "start": 320,
        "end": 794
      },
      "start": 320,
      "end": 795
    }
  ],
  "sourceType": "module",
  "start": 296,
  "end": 795
}