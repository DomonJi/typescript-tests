{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 252,
            "end": 256
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 257,
            "end": 263
          },
          "computed": false,
          "optional": false,
          "start": 252,
          "end": 263
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a",
            "start": 264,
            "end": 267
          },
          {
            "type": "Literal",
            "value": "b",
            "start": 269,
            "end": 272
          }
        ],
        "optional": false,
        "start": 252,
        "end": 273
      },
      "start": 252,
      "end": 274
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 313,
            "end": 317
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 318,
            "end": 331
          },
          "computed": false,
          "optional": false,
          "start": 313,
          "end": 331
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 339,
                  "end": 351
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 353,
                  "end": 396
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 339,
                "end": 396
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 403,
                  "end": 413
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 415,
                  "end": 458
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 403,
                "end": 458
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 465,
                  "end": 482
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 484,
                  "end": 527
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 465,
                "end": 527
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 534,
                  "end": 544
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "class A {\r\n    foo(a: number, b: number) { return a + b; }\r\n}\r\nclass B {\r\n    foo(c: number, d: number) { return c + d; }\r\n}\r\ndeclare var ab: A | B;\r\nab.foo(1, 2);",
                        "cooked": "class A {\n    foo(a: number, b: number) { return a + b; }\n}\nclass B {\n    foo(c: number, d: number) { return c + d; }\n}\ndeclare var ab: A | B;\nab.foo(1, 2);"
                      },
                      "tail": true,
                      "start": 546,
                      "end": 711
                    }
                  ],
                  "expressions": [],
                  "start": 546,
                  "end": 711
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 534,
                "end": 711
              }
            ],
            "start": 332,
            "end": 714
          }
        ],
        "optional": false,
        "start": 313,
        "end": 715
      },
      "start": 313,
      "end": 716
    }
  ],
  "sourceType": "script",
  "start": 252,
  "end": 716
}