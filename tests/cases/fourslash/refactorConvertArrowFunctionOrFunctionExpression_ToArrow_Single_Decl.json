{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 111,
            "end": 115
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 116,
            "end": 122
          },
          "computed": false,
          "optional": false,
          "start": 111,
          "end": 122
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "x",
            "start": 123,
            "end": 126
          },
          {
            "type": "Literal",
            "value": "y",
            "start": 128,
            "end": 131
          }
        ],
        "optional": false,
        "start": 111,
        "end": 132
      },
      "start": 111,
      "end": 133
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 135,
            "end": 139
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 140,
            "end": 153
          },
          "computed": false,
          "optional": false,
          "start": 135,
          "end": 153
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 161,
                  "end": 173
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert arrow function or function expression",
                  "start": 175,
                  "end": 222
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 161,
                "end": 222
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 229,
                  "end": 239
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to arrow function",
                  "start": 241,
                  "end": 268
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 229,
                "end": 268
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 275,
                  "end": 292
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to arrow function",
                  "start": 294,
                  "end": 321
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 275,
                "end": 321
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 328,
                  "end": 338
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "const foo = () => {\r\n    let bar;\r\n};",
                        "cooked": "const foo = () => {\n    let bar;\n};"
                      },
                      "tail": true,
                      "start": 340,
                      "end": 379
                    }
                  ],
                  "expressions": [],
                  "start": 340,
                  "end": 379
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 328,
                "end": 379
              }
            ],
            "start": 154,
            "end": 383
          }
        ],
        "optional": false,
        "start": 135,
        "end": 384
      },
      "start": 135,
      "end": 385
    }
  ],
  "sourceType": "script",
  "start": 111,
  "end": 387
}