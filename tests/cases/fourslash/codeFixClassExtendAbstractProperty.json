{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "verify",
            "start": 186,
            "end": 192
          },
          "property": {
            "type": "Identifier",
            "name": "codeFix",
            "start": 193,
            "end": 200
          },
          "computed": false,
          "optional": false,
          "start": 186,
          "end": 200
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "description",
                  "start": 208,
                  "end": 219
                },
                "value": {
                  "type": "Literal",
                  "value": "Implement inherited abstract class",
                  "start": 221,
                  "end": 257
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 208,
                "end": 257
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newFileContent",
                  "start": 264,
                  "end": 278
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "abstract class A {\r\n    abstract x: number;\r\n    abstract y: this;\r\n    abstract z: A;\r\n}\r\n\r\nclass C extends A {\r\n    x: number;\r\n    y: this;\r\n    z: A;\r\n}",
                        "cooked": "abstract class A {\n    abstract x: number;\n    abstract y: this;\n    abstract z: A;\n}\n\nclass C extends A {\n    x: number;\n    y: this;\n    z: A;\n}"
                      },
                      "tail": true,
                      "start": 281,
                      "end": 439
                    }
                  ],
                  "expressions": [],
                  "start": 281,
                  "end": 439
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 264,
                "end": 439
              }
            ],
            "start": 201,
            "end": 442
          }
        ],
        "optional": false,
        "start": 186,
        "end": 443
      },
      "start": 186,
      "end": 444
    }
  ],
  "sourceType": "script",
  "start": 186,
  "end": 446
}