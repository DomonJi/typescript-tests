{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 94,
            "end": 98
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 99,
            "end": 105
          },
          "computed": false,
          "optional": false,
          "start": 94,
          "end": 105
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a",
            "start": 106,
            "end": 109
          },
          {
            "type": "Literal",
            "value": "b",
            "start": 111,
            "end": 114
          }
        ],
        "optional": false,
        "start": 94,
        "end": 115
      },
      "start": 94,
      "end": 116
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 118,
            "end": 122
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 123,
            "end": 136
          },
          "computed": false,
          "optional": false,
          "start": 118,
          "end": 136
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 144,
                  "end": 156
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert arrow function or function expression",
                  "start": 158,
                  "end": 205
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 144,
                "end": 205
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 212,
                  "end": 222
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to anonymous function",
                  "start": 224,
                  "end": 255
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 212,
                "end": 255
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 262,
                  "end": 279
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to anonymous function",
                  "start": 281,
                  "end": 312
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 262,
                "end": 312
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 319,
                  "end": 329
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "const foo = function() {\r\n    // comment\r\n    return 1;\r\n}",
                        "cooked": "const foo = function() {\n    // comment\n    return 1;\n}"
                      },
                      "tail": true,
                      "start": 331,
                      "end": 391
                    }
                  ],
                  "expressions": [],
                  "start": 331,
                  "end": 391
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 319,
                "end": 391
              }
            ],
            "start": 137,
            "end": 394
          }
        ],
        "optional": false,
        "start": 118,
        "end": 395
      },
      "start": 118,
      "end": 396
    }
  ],
  "sourceType": "script",
  "start": 94,
  "end": 398
}