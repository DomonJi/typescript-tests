{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 223,
            "end": 227
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 228,
            "end": 234
          },
          "computed": false,
          "optional": false,
          "start": 223,
          "end": 234
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a",
            "start": 235,
            "end": 238
          },
          {
            "type": "Literal",
            "value": "b",
            "start": 240,
            "end": 243
          }
        ],
        "optional": false,
        "start": 223,
        "end": 244
      },
      "start": 223,
      "end": 245
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 247,
            "end": 251
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 252,
            "end": 265
          },
          "computed": false,
          "optional": false,
          "start": 247,
          "end": 265
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 273,
                  "end": 285
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 287,
                  "end": 330
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 273,
                "end": 330
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 337,
                  "end": 347
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 349,
                  "end": 392
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 337,
                "end": 392
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 399,
                  "end": 416
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 418,
                  "end": 461
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 399,
                "end": 461
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 468,
                  "end": 478
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "class Foo {\r\n    constructor({ t, s }: { t: string; s: string; }) { }\r\n}\r\nclass Bar extends Foo { }\r\nvar bar = new Bar({ t: \"a\", s: \"b\" });\r\nvar foo = new Foo({ t: \"c\", s: \"d\" });",
                        "cooked": "class Foo {\n    constructor({ t, s }: { t: string; s: string; }) { }\n}\nclass Bar extends Foo { }\nvar bar = new Bar({ t: \"a\", s: \"b\" });\nvar foo = new Foo({ t: \"c\", s: \"d\" });"
                      },
                      "tail": true,
                      "start": 480,
                      "end": 661
                    }
                  ],
                  "expressions": [],
                  "start": 480,
                  "end": 661
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 468,
                "end": 661
              }
            ],
            "start": 266,
            "end": 664
          }
        ],
        "optional": false,
        "start": 247,
        "end": 665
      },
      "start": 247,
      "end": 666
    }
  ],
  "sourceType": "module",
  "start": 223,
  "end": 666
}