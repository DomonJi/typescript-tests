{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 165,
            "end": 169
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 170,
            "end": 176
          },
          "computed": false,
          "optional": false,
          "start": 165,
          "end": 176
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a",
            "start": 177,
            "end": 180
          },
          {
            "type": "Literal",
            "value": "b",
            "start": 182,
            "end": 185
          }
        ],
        "optional": false,
        "start": 165,
        "end": 186
      },
      "start": 165,
      "end": 187
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 189,
            "end": 193
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 194,
            "end": 207
          },
          "computed": false,
          "optional": false,
          "start": 189,
          "end": 207
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 215,
                  "end": 227
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 229,
                  "end": 272
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 215,
                "end": 272
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 279,
                  "end": 289
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 291,
                  "end": 334
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 279,
                "end": 334
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 341,
                  "end": 358
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 360,
                  "end": 403
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 341,
                "end": 403
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 410,
                  "end": 420
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "function log({ a, b, args = [] }: { a: number; b: number; args?: any[]; }) { }\r\nlet l = log({ a: -1, b: -2, args: [3, 4, 5] });\r\nlet k = log({ a: 1, b: 2 });",
                        "cooked": "function log({ a, b, args = [] }: { a: number; b: number; args?: any[]; }) { }\nlet l = log({ a: -1, b: -2, args: [3, 4, 5] });\nlet k = log({ a: 1, b: 2 });"
                      },
                      "tail": true,
                      "start": 422,
                      "end": 581
                    }
                  ],
                  "expressions": [],
                  "start": 422,
                  "end": 581
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 410,
                "end": 581
              }
            ],
            "start": 208,
            "end": 584
          }
        ],
        "optional": false,
        "start": 189,
        "end": 585
      },
      "start": 189,
      "end": 586
    }
  ],
  "sourceType": "script",
  "start": 165,
  "end": 586
}