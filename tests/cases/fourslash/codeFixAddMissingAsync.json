{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "verify",
            "start": 215,
            "end": 221
          },
          "property": {
            "type": "Identifier",
            "name": "codeFix",
            "start": 222,
            "end": 229
          },
          "computed": false,
          "optional": false,
          "start": 215,
          "end": 229
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "description",
                  "start": 237,
                  "end": 248
                },
                "value": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "ts",
                        "start": 250,
                        "end": 252
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "Diagnostics",
                        "start": 253,
                        "end": 264
                      },
                      "computed": false,
                      "optional": false,
                      "start": 250,
                      "end": 264
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "Add_async_modifier_to_containing_function",
                      "start": 265,
                      "end": 306
                    },
                    "computed": false,
                    "optional": false,
                    "start": 250,
                    "end": 306
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "message",
                    "start": 307,
                    "end": 314
                  },
                  "computed": false,
                  "optional": false,
                  "start": 250,
                  "end": 314
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 237,
                "end": 314
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "index",
                  "start": 321,
                  "end": 326
                },
                "value": {
                  "type": "Literal",
                  "value": 0,
                  "start": 328,
                  "end": 329
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 321,
                "end": 329
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newFileContent",
                  "start": 336,
                  "end": 350
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "interface Stuff {\r\n    b: () => Promise<string>;\r\n}\r\n\r\nfunction foo(): Stuff | Date {\r\n    return {\r\n        b: async () => \"hello\",\r\n    }\r\n}",
                        "cooked": "interface Stuff {\n    b: () => Promise<string>;\n}\n\nfunction foo(): Stuff | Date {\n    return {\n        b: async () => \"hello\",\n    }\n}"
                      },
                      "tail": true,
                      "start": 353,
                      "end": 497
                    }
                  ],
                  "expressions": [],
                  "start": 353,
                  "end": 497
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 336,
                "end": 497
              }
            ],
            "start": 230,
            "end": 502
          }
        ],
        "optional": false,
        "start": 215,
        "end": 503
      },
      "start": 215,
      "end": 504
    }
  ],
  "sourceType": "module",
  "start": 215,
  "end": 508
}