{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 237,
            "end": 241
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 242,
            "end": 248
          },
          "computed": false,
          "optional": false,
          "start": 237,
          "end": 248
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a",
            "start": 249,
            "end": 252
          },
          {
            "type": "Literal",
            "value": "b",
            "start": 254,
            "end": 257
          }
        ],
        "optional": false,
        "start": 237,
        "end": 258
      },
      "start": 237,
      "end": 259
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 261,
            "end": 265
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 266,
            "end": 279
          },
          "computed": false,
          "optional": false,
          "start": 261,
          "end": 279
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 287,
                  "end": 299
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 301,
                  "end": 344
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 287,
                "end": 344
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 351,
                  "end": 361
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 363,
                  "end": 406
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 351,
                "end": 406
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 413,
                  "end": 430
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 432,
                  "end": 475
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 413,
                "end": 475
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 482,
                  "end": 492
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "export default class {\r\n    constructor({ a, b }: { a: string; b: string; }) { }\r\n}",
                        "cooked": "export default class {\n    constructor({ a, b }: { a: string; b: string; }) { }\n}"
                      },
                      "tail": true,
                      "start": 494,
                      "end": 579
                    }
                  ],
                  "expressions": [],
                  "start": 494,
                  "end": 579
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 482,
                "end": 579
              }
            ],
            "start": 280,
            "end": 582
          }
        ],
        "optional": false,
        "start": 261,
        "end": 583
      },
      "start": 261,
      "end": 584
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 588,
            "end": 592
          },
          "property": {
            "type": "Identifier",
            "name": "file",
            "start": 593,
            "end": 597
          },
          "computed": false,
          "optional": false,
          "start": 588,
          "end": 597
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a.ts",
            "start": 598,
            "end": 604
          }
        ],
        "optional": false,
        "start": 588,
        "end": 605
      },
      "start": 588,
      "end": 606
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "verify",
            "start": 608,
            "end": 614
          },
          "property": {
            "type": "Identifier",
            "name": "currentFileContentIs",
            "start": 615,
            "end": 635
          },
          "computed": false,
          "optional": false,
          "start": 608,
          "end": 635
        },
        "arguments": [
          {
            "type": "TemplateLiteral",
            "quasis": [
              {
                "type": "TemplateElement",
                "value": {
                  "raw": "import C from \"./f\";\r\nconst c = new C({ a: \"a\", b: \"b\" });",
                  "cooked": "import C from \"./f\";\nconst c = new C({ a: \"a\", b: \"b\" });"
                },
                "tail": true,
                "start": 636,
                "end": 696
              }
            ],
            "expressions": [],
            "start": 636,
            "end": 696
          }
        ],
        "optional": false,
        "start": 608,
        "end": 697
      },
      "start": 608,
      "end": 697
    }
  ],
  "sourceType": "script",
  "start": 237,
  "end": 697
}