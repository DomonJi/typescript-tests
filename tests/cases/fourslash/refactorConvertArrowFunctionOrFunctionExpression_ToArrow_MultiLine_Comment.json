{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 193,
            "end": 197
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 198,
            "end": 204
          },
          "computed": false,
          "optional": false,
          "start": 193,
          "end": 204
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "x",
            "start": 205,
            "end": 208
          },
          {
            "type": "Literal",
            "value": "y",
            "start": 210,
            "end": 213
          }
        ],
        "optional": false,
        "start": 193,
        "end": 214
      },
      "start": 193,
      "end": 215
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 217,
            "end": 221
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 222,
            "end": 235
          },
          "computed": false,
          "optional": false,
          "start": 217,
          "end": 235
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 243,
                  "end": 255
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert arrow function or function expression",
                  "start": 257,
                  "end": 304
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 243,
                "end": 304
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 311,
                  "end": 321
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to arrow function",
                  "start": 323,
                  "end": 350
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 311,
                "end": 350
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 357,
                  "end": 374
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to arrow function",
                  "start": 376,
                  "end": 403
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 357,
                "end": 403
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 410,
                  "end": 420
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "const foo = () => {\r\n    // secret\r\n    let a = 41;\r\n    /*\r\n    msg\r\n    */\r\n    return a + 1;\r\n};",
                        "cooked": "const foo = () => {\n    // secret\n    let a = 41;\n    /*\n    msg\n    */\n    return a + 1;\n};"
                      },
                      "tail": true,
                      "start": 422,
                      "end": 523
                    }
                  ],
                  "expressions": [],
                  "start": 422,
                  "end": 523
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 410,
                "end": 523
              }
            ],
            "start": 236,
            "end": 527
          }
        ],
        "optional": false,
        "start": 217,
        "end": 528
      },
      "start": 217,
      "end": 529
    }
  ],
  "sourceType": "module",
  "start": 193,
  "end": 531
}