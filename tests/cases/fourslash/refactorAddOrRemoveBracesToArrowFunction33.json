{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 115,
            "end": 119
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 120,
            "end": 126
          },
          "computed": false,
          "optional": false,
          "start": 115,
          "end": 126
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a",
            "start": 127,
            "end": 130
          },
          {
            "type": "Literal",
            "value": "b",
            "start": 132,
            "end": 135
          }
        ],
        "optional": false,
        "start": 115,
        "end": 136
      },
      "start": 115,
      "end": 137
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 139,
            "end": 143
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 144,
            "end": 157
          },
          "computed": false,
          "optional": false,
          "start": 139,
          "end": 157
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 165,
                  "end": 177
                },
                "value": {
                  "type": "Literal",
                  "value": "Add or remove braces in an arrow function",
                  "start": 179,
                  "end": 222
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 165,
                "end": 222
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 229,
                  "end": 239
                },
                "value": {
                  "type": "Literal",
                  "value": "Add braces to arrow function",
                  "start": 241,
                  "end": 271
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 229,
                "end": 271
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 278,
                  "end": 295
                },
                "value": {
                  "type": "Literal",
                  "value": "Add braces to arrow function",
                  "start": 297,
                  "end": 327
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 278,
                "end": 327
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 334,
                  "end": 344
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "const a = () => {\r\n    return (\r\n        // comment\r\n        1\r\n    );\r\n};",
                        "cooked": "const a = () => {\n    return (\n        // comment\n        1\n    );\n};"
                      },
                      "tail": true,
                      "start": 346,
                      "end": 422
                    }
                  ],
                  "expressions": [],
                  "start": 346,
                  "end": 422
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 334,
                "end": 422
              }
            ],
            "start": 158,
            "end": 426
          }
        ],
        "optional": false,
        "start": 139,
        "end": 427
      },
      "start": 139,
      "end": 428
    }
  ],
  "sourceType": "script",
  "start": 115,
  "end": 430
}