{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 137,
            "end": 141
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 142,
            "end": 148
          },
          "computed": false,
          "optional": false,
          "start": 137,
          "end": 148
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a",
            "start": 149,
            "end": 152
          },
          {
            "type": "Literal",
            "value": "b",
            "start": 154,
            "end": 157
          }
        ],
        "optional": false,
        "start": 137,
        "end": 158
      },
      "start": 137,
      "end": 159
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 161,
            "end": 165
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 166,
            "end": 179
          },
          "computed": false,
          "optional": false,
          "start": 161,
          "end": 179
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 187,
                  "end": 199
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 201,
                  "end": 244
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 187,
                "end": 244
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 251,
                  "end": 261
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 263,
                  "end": 306
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 251,
                "end": 306
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 313,
                  "end": 330
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 332,
                  "end": 375
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 313,
                "end": 375
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 382,
                  "end": 392
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "function foo<T, S>({ t, s }: { t: T; s: S; }) {\r\n    return s;\r\n}\r\nfoo({ t: \"a\", s: \"b\" });",
                        "cooked": "function foo<T, S>({ t, s }: { t: T; s: S; }) {\n    return s;\n}\nfoo({ t: \"a\", s: \"b\" });"
                      },
                      "tail": true,
                      "start": 394,
                      "end": 487
                    }
                  ],
                  "expressions": [],
                  "start": 394,
                  "end": 487
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 382,
                "end": 487
              }
            ],
            "start": 180,
            "end": 490
          }
        ],
        "optional": false,
        "start": 161,
        "end": 491
      },
      "start": 161,
      "end": 492
    }
  ],
  "sourceType": "script",
  "start": 137,
  "end": 492
}