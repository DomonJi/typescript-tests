{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 234,
            "end": 238
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 239,
            "end": 245
          },
          "computed": false,
          "optional": false,
          "start": 234,
          "end": 245
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a",
            "start": 246,
            "end": 249
          },
          {
            "type": "Literal",
            "value": "b",
            "start": 251,
            "end": 254
          }
        ],
        "optional": false,
        "start": 234,
        "end": 255
      },
      "start": 234,
      "end": 256
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 295,
            "end": 299
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 300,
            "end": 313
          },
          "computed": false,
          "optional": false,
          "start": 295,
          "end": 313
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 321,
                  "end": 333
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 335,
                  "end": 378
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 321,
                "end": 378
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 385,
                  "end": 395
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 397,
                  "end": 440
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 385,
                "end": 440
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 447,
                  "end": 464
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 466,
                  "end": 509
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 447,
                "end": 509
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 516,
                  "end": 526
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "const foo = class Foo {\r\n    constructor(a: number, b: number) { }\r\n}\r\nclass Bar extends foo {\r\n    constructor() {\r\n        super(1, 2);\r\n    }\r\n}",
                        "cooked": "const foo = class Foo {\n    constructor(a: number, b: number) { }\n}\nclass Bar extends foo {\n    constructor() {\n        super(1, 2);\n    }\n}"
                      },
                      "tail": true,
                      "start": 528,
                      "end": 677
                    }
                  ],
                  "expressions": [],
                  "start": 528,
                  "end": 677
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 516,
                "end": 677
              }
            ],
            "start": 314,
            "end": 680
          }
        ],
        "optional": false,
        "start": 295,
        "end": 681
      },
      "start": 295,
      "end": 682
    }
  ],
  "sourceType": "module",
  "start": 234,
  "end": 682
}