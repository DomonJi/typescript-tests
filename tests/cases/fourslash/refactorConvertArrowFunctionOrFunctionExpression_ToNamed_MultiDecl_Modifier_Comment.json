{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 129,
            "end": 133
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 134,
            "end": 140
          },
          "computed": false,
          "optional": false,
          "start": 129,
          "end": 140
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "x",
            "start": 141,
            "end": 144
          },
          {
            "type": "Literal",
            "value": "y",
            "start": 146,
            "end": 149
          }
        ],
        "optional": false,
        "start": 129,
        "end": 150
      },
      "start": 129,
      "end": 151
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 153,
            "end": 157
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 158,
            "end": 171
          },
          "computed": false,
          "optional": false,
          "start": 153,
          "end": 171
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 179,
                  "end": 191
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert arrow function or function expression",
                  "start": 193,
                  "end": 240
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 179,
                "end": 240
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 247,
                  "end": 257
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to named function",
                  "start": 259,
                  "end": 286
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 247,
                "end": 286
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 293,
                  "end": 310
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to named function",
                  "start": 312,
                  "end": 339
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 293,
                "end": 339
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 346,
                  "end": 356
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "// Do not add me second time\r\nexport let foo;\r\nexport function bar() {\r\n    return 1 + 1;\r\n}\r\n",
                        "cooked": "// Do not add me second time\nexport let foo;\nexport function bar() {\n    return 1 + 1;\n}\n"
                      },
                      "tail": true,
                      "start": 358,
                      "end": 454
                    }
                  ],
                  "expressions": [],
                  "start": 358,
                  "end": 454
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 346,
                "end": 454
              }
            ],
            "start": 172,
            "end": 458
          }
        ],
        "optional": false,
        "start": 153,
        "end": 459
      },
      "start": 153,
      "end": 460
    }
  ],
  "sourceType": "script",
  "start": 129,
  "end": 462
}