{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 137,
            "end": 141
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 142,
            "end": 148
          },
          "computed": false,
          "optional": false,
          "start": 137,
          "end": 148
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "x",
            "start": 149,
            "end": 152
          },
          {
            "type": "Literal",
            "value": "y",
            "start": 154,
            "end": 157
          }
        ],
        "optional": false,
        "start": 137,
        "end": 158
      },
      "start": 137,
      "end": 159
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 161,
            "end": 165
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 166,
            "end": 179
          },
          "computed": false,
          "optional": false,
          "start": 161,
          "end": 179
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 187,
                  "end": 199
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert arrow function or function expression",
                  "start": 201,
                  "end": 248
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 187,
                "end": 248
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 255,
                  "end": 265
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to arrow function",
                  "start": 267,
                  "end": 294
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 255,
                "end": 294
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 301,
                  "end": 318
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to arrow function",
                  "start": 320,
                  "end": 347
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 301,
                "end": 347
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 354,
                  "end": 364
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "const foo = () => {\r\n    let a = 41;\r\n    return a + 1;\r\n};",
                        "cooked": "const foo = () => {\n    let a = 41;\n    return a + 1;\n};"
                      },
                      "tail": true,
                      "start": 366,
                      "end": 427
                    }
                  ],
                  "expressions": [],
                  "start": 366,
                  "end": 427
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 354,
                "end": 427
              }
            ],
            "start": 180,
            "end": 431
          }
        ],
        "optional": false,
        "start": 161,
        "end": 432
      },
      "start": 161,
      "end": 433
    }
  ],
  "sourceType": "script",
  "start": 137,
  "end": 435
}