{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "verify",
            "start": 455,
            "end": 461
          },
          "property": {
            "type": "Identifier",
            "name": "codeFix",
            "start": 462,
            "end": 469
          },
          "computed": false,
          "optional": false,
          "start": 455,
          "end": 469
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "description",
                  "start": 477,
                  "end": 488
                },
                "value": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "ts",
                        "start": 490,
                        "end": 492
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "Diagnostics",
                        "start": 493,
                        "end": 504
                      },
                      "computed": false,
                      "optional": false,
                      "start": 490,
                      "end": 504
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "Implement_inherited_abstract_class",
                      "start": 505,
                      "end": 539
                    },
                    "computed": false,
                    "optional": false,
                    "start": 490,
                    "end": 539
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "message",
                    "start": 540,
                    "end": 547
                  },
                  "computed": false,
                  "optional": false,
                  "start": 490,
                  "end": 547
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 477,
                "end": 547
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newFileContent",
                  "start": 554,
                  "end": 568
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "abstract class A {\r\n    abstract f(a: number, b: string): boolean;\r\n    abstract f(a: number, b: string): this;\r\n    abstract f(a: string, b: number): Function;\r\n    abstract f(a: string): Function;\r\n\r\n    abstract f1(this: A): number;\r\n    abstract f2(this: A, a: number, b: string): number;\r\n\r\n    abstract foo(): number;\r\n}\r\n\r\ndeclare class C extends A {\r\n    f(a: number, b: string): boolean;\r\n    f(a: number, b: string): this;\r\n    f(a: string, b: number): Function;\r\n    f(a: string): Function;\r\n    f1(this: A): number;\r\n    f2(this: A, a: number, b: string): number;\r\n    foo(): number;\r\n}",
                        "cooked": "abstract class A {\n    abstract f(a: number, b: string): boolean;\n    abstract f(a: number, b: string): this;\n    abstract f(a: string, b: number): Function;\n    abstract f(a: string): Function;\n\n    abstract f1(this: A): number;\n    abstract f2(this: A, a: number, b: string): number;\n\n    abstract foo(): number;\n}\n\ndeclare class C extends A {\n    f(a: number, b: string): boolean;\n    f(a: number, b: string): this;\n    f(a: string, b: number): Function;\n    f(a: string): Function;\n    f1(this: A): number;\n    f2(this: A, a: number, b: string): number;\n    foo(): number;\n}"
                      },
                      "tail": true,
                      "start": 571,
                      "end": 1171
                    }
                  ],
                  "expressions": [],
                  "start": 571,
                  "end": 1171
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 554,
                "end": 1171
              }
            ],
            "start": 470,
            "end": 1174
          }
        ],
        "optional": false,
        "start": 455,
        "end": 1175
      },
      "start": 455,
      "end": 1176
    }
  ],
  "sourceType": "module",
  "start": 455,
  "end": 1178
}