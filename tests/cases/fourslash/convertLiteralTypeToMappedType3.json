{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "verify",
            "start": 190,
            "end": 196
          },
          "property": {
            "type": "Identifier",
            "name": "codeFixAll",
            "start": 197,
            "end": 207
          },
          "computed": false,
          "optional": false,
          "start": 190,
          "end": 207
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "fixAllDescription",
                  "start": 214,
                  "end": 231
                },
                "value": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "ts",
                        "start": 233,
                        "end": 235
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "Diagnostics",
                        "start": 236,
                        "end": 247
                      },
                      "computed": false,
                      "optional": false,
                      "start": 233,
                      "end": 247
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "Convert_all_type_literals_to_mapped_type",
                      "start": 248,
                      "end": 288
                    },
                    "computed": false,
                    "optional": false,
                    "start": 233,
                    "end": 288
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "message",
                    "start": 289,
                    "end": 296
                  },
                  "computed": false,
                  "optional": false,
                  "start": 233,
                  "end": 296
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 214,
                "end": 296
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "fixId",
                  "start": 302,
                  "end": 307
                },
                "value": {
                  "type": "Literal",
                  "value": "convertLiteralTypeToMappedType",
                  "start": 309,
                  "end": 341
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 302,
                "end": 341
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newFileContent",
                  "start": 347,
                  "end": 361
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "type K1 = number | string;\ntype T1 = {\n    [K in K1]: number;\n}\ntype K2 = number | string;\ntype T2 = {\n    [K in K2]: number;\n}",
                        "cooked": "type K1 = number | string;\ntype T1 = {\n    [K in K1]: number;\n}\ntype K2 = number | string;\ntype T2 = {\n    [K in K2]: number;\n}"
                      },
                      "tail": true,
                      "start": 363,
                      "end": 492
                    }
                  ],
                  "expressions": [],
                  "start": 363,
                  "end": 492
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 347,
                "end": 492
              }
            ],
            "start": 208,
            "end": 494
          }
        ],
        "optional": false,
        "start": 190,
        "end": 495
      },
      "start": 190,
      "end": 496
    }
  ],
  "sourceType": "script",
  "start": 190,
  "end": 497
}