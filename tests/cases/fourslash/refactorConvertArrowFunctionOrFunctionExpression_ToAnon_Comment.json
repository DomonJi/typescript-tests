{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 178,
            "end": 182
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 183,
            "end": 189
          },
          "computed": false,
          "optional": false,
          "start": 178,
          "end": 189
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "x",
            "start": 190,
            "end": 193
          },
          {
            "type": "Literal",
            "value": "y",
            "start": 195,
            "end": 198
          }
        ],
        "optional": false,
        "start": 178,
        "end": 199
      },
      "start": 178,
      "end": 200
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 202,
            "end": 206
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 207,
            "end": 220
          },
          "computed": false,
          "optional": false,
          "start": 202,
          "end": 220
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 228,
                  "end": 240
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert arrow function or function expression",
                  "start": 242,
                  "end": 289
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 228,
                "end": 289
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 296,
                  "end": 306
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to anonymous function",
                  "start": 308,
                  "end": 339
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 296,
                "end": 339
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 346,
                  "end": 363
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to anonymous function",
                  "start": 365,
                  "end": 396
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 346,
                "end": 396
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 403,
                  "end": 413
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "const foo = function(a) {\r\n    // secret word\r\n    return a + 1;\r\n    /*\r\n    hidden msg\r\n    */\r\n};",
                        "cooked": "const foo = function(a) {\n    // secret word\n    return a + 1;\n    /*\n    hidden msg\n    */\n};"
                      },
                      "tail": true,
                      "start": 415,
                      "end": 517
                    }
                  ],
                  "expressions": [],
                  "start": 415,
                  "end": 517
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 403,
                "end": 517
              }
            ],
            "start": 221,
            "end": 521
          }
        ],
        "optional": false,
        "start": 202,
        "end": 522
      },
      "start": 202,
      "end": 523
    }
  ],
  "sourceType": "module",
  "start": 178,
  "end": 525
}