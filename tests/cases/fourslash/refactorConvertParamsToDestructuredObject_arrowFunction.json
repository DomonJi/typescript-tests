{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 117,
            "end": 121
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 122,
            "end": 128
          },
          "computed": false,
          "optional": false,
          "start": 117,
          "end": 128
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a",
            "start": 129,
            "end": 132
          },
          {
            "type": "Literal",
            "value": "b",
            "start": 134,
            "end": 137
          }
        ],
        "optional": false,
        "start": 117,
        "end": 138
      },
      "start": 117,
      "end": 139
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 141,
            "end": 145
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 146,
            "end": 159
          },
          "computed": false,
          "optional": false,
          "start": 141,
          "end": 159
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 167,
                  "end": 179
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 181,
                  "end": 224
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 167,
                "end": 224
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 231,
                  "end": 241
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 243,
                  "end": 286
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 231,
                "end": 286
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 293,
                  "end": 310
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 312,
                  "end": 355
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 293,
                "end": 355
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 362,
                  "end": 372
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "const foo = ({ a, b }: { a: number; b: number; }) => { };\r\nfoo({ a: 1, b: 2 });",
                        "cooked": "const foo = ({ a, b }: { a: number; b: number; }) => { };\nfoo({ a: 1, b: 2 });"
                      },
                      "tail": true,
                      "start": 374,
                      "end": 455
                    }
                  ],
                  "expressions": [],
                  "start": 374,
                  "end": 455
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 362,
                "end": 455
              }
            ],
            "start": 160,
            "end": 458
          }
        ],
        "optional": false,
        "start": 141,
        "end": 459
      },
      "start": 141,
      "end": 460
    }
  ],
  "sourceType": "script",
  "start": 117,
  "end": 460
}