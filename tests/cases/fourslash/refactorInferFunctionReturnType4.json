{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 117,
            "end": 121
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 122,
            "end": 128
          },
          "computed": false,
          "optional": false,
          "start": 117,
          "end": 128
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a",
            "start": 129,
            "end": 132
          },
          {
            "type": "Literal",
            "value": "b",
            "start": 134,
            "end": 137
          }
        ],
        "optional": false,
        "start": 117,
        "end": 138
      },
      "start": 117,
      "end": 139
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 141,
            "end": 145
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 146,
            "end": 159
          },
          "computed": false,
          "optional": false,
          "start": 141,
          "end": 159
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 167,
                  "end": 179
                },
                "value": {
                  "type": "Literal",
                  "value": "Infer function return type",
                  "start": 181,
                  "end": 209
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 167,
                "end": 209
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 216,
                  "end": 226
                },
                "value": {
                  "type": "Literal",
                  "value": "Infer function return type",
                  "start": 228,
                  "end": 256
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 216,
                "end": 256
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 263,
                  "end": 280
                },
                "value": {
                  "type": "Literal",
                  "value": "Infer function return type",
                  "start": 282,
                  "end": 310
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 263,
                "end": 310
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 317,
                  "end": 327
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "const foo = (): { x: number; y: number; } => {\r\n    return { x: 1, y: 1 };\r\n}",
                        "cooked": "const foo = (): { x: number; y: number; } => {\n    return { x: 1, y: 1 };\n}"
                      },
                      "tail": true,
                      "start": 330,
                      "end": 409
                    }
                  ],
                  "expressions": [],
                  "start": 330,
                  "end": 409
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 317,
                "end": 409
              }
            ],
            "start": 160,
            "end": 412
          }
        ],
        "optional": false,
        "start": 141,
        "end": 413
      },
      "start": 141,
      "end": 414
    }
  ],
  "sourceType": "module",
  "start": 117,
  "end": 416
}