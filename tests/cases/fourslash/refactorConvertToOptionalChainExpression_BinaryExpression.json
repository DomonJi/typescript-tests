{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 107,
            "end": 111
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 112,
            "end": 118
          },
          "computed": false,
          "optional": false,
          "start": 107,
          "end": 118
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a",
            "start": 119,
            "end": 122
          },
          {
            "type": "Literal",
            "value": "b",
            "start": 124,
            "end": 127
          }
        ],
        "optional": false,
        "start": 107,
        "end": 128
      },
      "start": 107,
      "end": 129
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 131,
            "end": 135
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 136,
            "end": 149
          },
          "computed": false,
          "optional": false,
          "start": 131,
          "end": 149
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 157,
                  "end": 169
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to optional chain expression",
                  "start": 171,
                  "end": 209
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 157,
                "end": 209
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 216,
                  "end": 226
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to optional chain expression",
                  "start": 228,
                  "end": 266
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 216,
                "end": 266
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 273,
                  "end": 290
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to optional chain expression",
                  "start": 292,
                  "end": 330
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 273,
                "end": 330
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 337,
                  "end": 347
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "let a = { b: { c: 0 } };\r\na?.b?.c;",
                        "cooked": "let a = { b: { c: 0 } };\na?.b?.c;"
                      },
                      "tail": true,
                      "start": 350,
                      "end": 386
                    }
                  ],
                  "expressions": [],
                  "start": 350,
                  "end": 386
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 337,
                "end": 386
              }
            ],
            "start": 150,
            "end": 389
          }
        ],
        "optional": false,
        "start": 131,
        "end": 390
      },
      "start": 131,
      "end": 391
    }
  ],
  "sourceType": "module",
  "start": 107,
  "end": 391
}