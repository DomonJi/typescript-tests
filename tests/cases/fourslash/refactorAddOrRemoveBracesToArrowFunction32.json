{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 193,
            "end": 197
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 198,
            "end": 204
          },
          "computed": false,
          "optional": false,
          "start": 193,
          "end": 204
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a",
            "start": 205,
            "end": 208
          },
          {
            "type": "Literal",
            "value": "b",
            "start": 210,
            "end": 213
          }
        ],
        "optional": false,
        "start": 193,
        "end": 214
      },
      "start": 193,
      "end": 215
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 217,
            "end": 221
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 222,
            "end": 235
          },
          "computed": false,
          "optional": false,
          "start": 217,
          "end": 235
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 243,
                  "end": 255
                },
                "value": {
                  "type": "Literal",
                  "value": "Add or remove braces in an arrow function",
                  "start": 257,
                  "end": 300
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 243,
                "end": 300
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 307,
                  "end": 317
                },
                "value": {
                  "type": "Literal",
                  "value": "Remove braces from arrow function",
                  "start": 319,
                  "end": 354
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 307,
                "end": 354
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 361,
                  "end": 378
                },
                "value": {
                  "type": "Literal",
                  "value": "Remove braces from arrow function",
                  "start": 380,
                  "end": 415
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 361,
                "end": 415
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 422,
                  "end": 432
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "const a = () => (\r\n    /*\r\n    multi-line comment\r\n    */\r\n    1\r\n);",
                        "cooked": "const a = () => (\n    /*\n    multi-line comment\n    */\n    1\n);"
                      },
                      "tail": true,
                      "start": 434,
                      "end": 504
                    }
                  ],
                  "expressions": [],
                  "start": 434,
                  "end": 504
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 422,
                "end": 504
              }
            ],
            "start": 236,
            "end": 508
          }
        ],
        "optional": false,
        "start": 217,
        "end": 509
      },
      "start": 217,
      "end": 510
    }
  ],
  "sourceType": "script",
  "start": 193,
  "end": 512
}