{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 75,
            "end": 79
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 80,
            "end": 86
          },
          "computed": false,
          "optional": false,
          "start": 75,
          "end": 86
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a",
            "start": 87,
            "end": 90
          },
          {
            "type": "Literal",
            "value": "b",
            "start": 92,
            "end": 95
          }
        ],
        "optional": false,
        "start": 75,
        "end": 96
      },
      "start": 75,
      "end": 97
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 98,
            "end": 102
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 103,
            "end": 116
          },
          "computed": false,
          "optional": false,
          "start": 98,
          "end": 116
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 123,
                  "end": 135
                },
                "value": {
                  "type": "Literal",
                  "value": "Add or remove braces in an arrow function",
                  "start": 137,
                  "end": 180
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 123,
                "end": 180
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 186,
                  "end": 196
                },
                "value": {
                  "type": "Literal",
                  "value": "Add braces to arrow function",
                  "start": 198,
                  "end": 228
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 186,
                "end": 228
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 234,
                  "end": 251
                },
                "value": {
                  "type": "Literal",
                  "value": "Add braces to arrow function",
                  "start": 253,
                  "end": 283
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 234,
                "end": 283
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 289,
                  "end": 299
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "const foo = a => {\n    return 1;\n};",
                        "cooked": "const foo = a => {\n    return 1;\n};"
                      },
                      "tail": true,
                      "start": 301,
                      "end": 338
                    }
                  ],
                  "expressions": [],
                  "start": 301,
                  "end": 338
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 289,
                "end": 338
              }
            ],
            "start": 117,
            "end": 341
          }
        ],
        "optional": false,
        "start": 98,
        "end": 342
      },
      "start": 98,
      "end": 343
    }
  ],
  "sourceType": "module",
  "start": 75,
  "end": 344
}