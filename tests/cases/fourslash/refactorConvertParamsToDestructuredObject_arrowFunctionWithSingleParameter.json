{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 103,
            "end": 107
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 108,
            "end": 114
          },
          "computed": false,
          "optional": false,
          "start": 103,
          "end": 114
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a",
            "start": 115,
            "end": 118
          },
          {
            "type": "Literal",
            "value": "b",
            "start": 120,
            "end": 123
          }
        ],
        "optional": false,
        "start": 103,
        "end": 124
      },
      "start": 103,
      "end": 125
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 127,
            "end": 131
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 132,
            "end": 145
          },
          "computed": false,
          "optional": false,
          "start": 127,
          "end": 145
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 153,
                  "end": 165
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 167,
                  "end": 210
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 153,
                "end": 210
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 217,
                  "end": 227
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 229,
                  "end": 272
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 217,
                "end": 272
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 279,
                  "end": 296
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 298,
                  "end": 341
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 279,
                "end": 341
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 348,
                  "end": 358
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "const foo = ({ a }: { a: number; }) => { };\r\nfoo({ a: 1 });",
                        "cooked": "const foo = ({ a }: { a: number; }) => { };\nfoo({ a: 1 });"
                      },
                      "tail": true,
                      "start": 360,
                      "end": 421
                    }
                  ],
                  "expressions": [],
                  "start": 360,
                  "end": 421
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 348,
                "end": 421
              }
            ],
            "start": 146,
            "end": 425
          }
        ],
        "optional": false,
        "start": 127,
        "end": 426
      },
      "start": 127,
      "end": 427
    }
  ],
  "sourceType": "module",
  "start": 103,
  "end": 429
}