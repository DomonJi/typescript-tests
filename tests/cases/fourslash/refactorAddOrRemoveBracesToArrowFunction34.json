{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 147,
            "end": 151
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 152,
            "end": 158
          },
          "computed": false,
          "optional": false,
          "start": 147,
          "end": 158
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a",
            "start": 159,
            "end": 162
          },
          {
            "type": "Literal",
            "value": "b",
            "start": 164,
            "end": 167
          }
        ],
        "optional": false,
        "start": 147,
        "end": 168
      },
      "start": 147,
      "end": 169
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 171,
            "end": 175
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 176,
            "end": 189
          },
          "computed": false,
          "optional": false,
          "start": 171,
          "end": 189
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 197,
                  "end": 209
                },
                "value": {
                  "type": "Literal",
                  "value": "Add or remove braces in an arrow function",
                  "start": 211,
                  "end": 254
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 197,
                "end": 254
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 261,
                  "end": 271
                },
                "value": {
                  "type": "Literal",
                  "value": "Add braces to arrow function",
                  "start": 273,
                  "end": 303
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 261,
                "end": 303
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 310,
                  "end": 327
                },
                "value": {
                  "type": "Literal",
                  "value": "Add braces to arrow function",
                  "start": 329,
                  "end": 359
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 310,
                "end": 359
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 366,
                  "end": 376
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "const a = () => {\r\n    return (\r\n        /*\r\n        multi-line comment\r\n        */\r\n        1\r\n    );\r\n};",
                        "cooked": "const a = () => {\n    return (\n        /*\n        multi-line comment\n        */\n        1\n    );\n};"
                      },
                      "tail": true,
                      "start": 378,
                      "end": 486
                    }
                  ],
                  "expressions": [],
                  "start": 378,
                  "end": 486
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 366,
                "end": 486
              }
            ],
            "start": 190,
            "end": 490
          }
        ],
        "optional": false,
        "start": 171,
        "end": 491
      },
      "start": 171,
      "end": 492
    }
  ],
  "sourceType": "module",
  "start": 147,
  "end": 494
}