{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 170,
            "end": 174
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 175,
            "end": 181
          },
          "computed": false,
          "optional": false,
          "start": 170,
          "end": 181
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a",
            "start": 182,
            "end": 185
          },
          {
            "type": "Literal",
            "value": "b",
            "start": 187,
            "end": 190
          }
        ],
        "optional": false,
        "start": 170,
        "end": 191
      },
      "start": 170,
      "end": 192
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 194,
            "end": 198
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 199,
            "end": 212
          },
          "computed": false,
          "optional": false,
          "start": 194,
          "end": 212
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 220,
                  "end": 232
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 234,
                  "end": 277
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 220,
                "end": 277
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 284,
                  "end": 294
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 296,
                  "end": 339
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 284,
                "end": 339
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 346,
                  "end": 363
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 365,
                  "end": 408
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 346,
                "end": 408
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 415,
                  "end": 425
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "function foo({ a, b }: { a: number; b: number; }) {\r\n    return { bar: () => a + b };\r\n}\r\nvar x = foo({ a: 1, b: 2 }).bar();",
                        "cooked": "function foo({ a, b }: { a: number; b: number; }) {\n    return { bar: () => a + b };\n}\nvar x = foo({ a: 1, b: 2 }).bar();"
                      },
                      "tail": true,
                      "start": 427,
                      "end": 553
                    }
                  ],
                  "expressions": [],
                  "start": 427,
                  "end": 553
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 415,
                "end": 553
              }
            ],
            "start": 213,
            "end": 556
          }
        ],
        "optional": false,
        "start": 194,
        "end": 557
      },
      "start": 194,
      "end": 558
    }
  ],
  "sourceType": "script",
  "start": 170,
  "end": 558
}