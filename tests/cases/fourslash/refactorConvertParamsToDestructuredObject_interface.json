{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 206,
            "end": 210
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 211,
            "end": 217
          },
          "computed": false,
          "optional": false,
          "start": 206,
          "end": 217
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a",
            "start": 218,
            "end": 221
          },
          {
            "type": "Literal",
            "value": "b",
            "start": 223,
            "end": 226
          }
        ],
        "optional": false,
        "start": 206,
        "end": 227
      },
      "start": 206,
      "end": 228
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 230,
            "end": 234
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 235,
            "end": 248
          },
          "computed": false,
          "optional": false,
          "start": 230,
          "end": 248
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 256,
                  "end": 268
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 270,
                  "end": 313
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 256,
                "end": 313
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 320,
                  "end": 330
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 332,
                  "end": 375
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 320,
                "end": 375
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 382,
                  "end": 399
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 401,
                  "end": 444
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 382,
                "end": 444
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 451,
                  "end": 461
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "interface IFoo {\r\n    method({ x, y }: { x: string; y: string; }): void;\r\n}\r\nconst x: IFoo = {\r\n    method({ x, y }: { x: string; y: string; }): void {},\r\n};",
                        "cooked": "interface IFoo {\n    method({ x, y }: { x: string; y: string; }): void;\n}\nconst x: IFoo = {\n    method({ x, y }: { x: string; y: string; }): void {},\n};"
                      },
                      "tail": true,
                      "start": 463,
                      "end": 622
                    }
                  ],
                  "expressions": [],
                  "start": 463,
                  "end": 622
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 451,
                "end": 622
              }
            ],
            "start": 249,
            "end": 625
          }
        ],
        "optional": false,
        "start": 230,
        "end": 626
      },
      "start": 230,
      "end": 627
    }
  ],
  "sourceType": "module",
  "start": 206,
  "end": 629
}