{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "verify",
            "start": 108,
            "end": 114
          },
          "property": {
            "type": "Identifier",
            "name": "codeFix",
            "start": 115,
            "end": 122
          },
          "computed": false,
          "optional": false,
          "start": 108,
          "end": 122
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "index",
                  "start": 129,
                  "end": 134
                },
                "value": {
                  "type": "Literal",
                  "value": 0,
                  "start": 136,
                  "end": 137
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 129,
                "end": 137
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "description",
                  "start": 143,
                  "end": 154
                },
                "value": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "ts",
                        "start": 156,
                        "end": 158
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "Diagnostics",
                        "start": 159,
                        "end": 170
                      },
                      "computed": false,
                      "optional": false,
                      "start": 156,
                      "end": 170
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "Wrap_invalid_character_in_an_expression_container",
                      "start": 171,
                      "end": 220
                    },
                    "computed": false,
                    "optional": false,
                    "start": 156,
                    "end": 220
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "message",
                    "start": 221,
                    "end": 228
                  },
                  "computed": false,
                  "optional": false,
                  "start": 156,
                  "end": 228
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 143,
                "end": 228
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newFileContent",
                  "start": 234,
                  "end": 248
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "let foo = <div>{'>'}</div>;",
                        "cooked": "let foo = <div>{'>'}</div>;"
                      },
                      "tail": true,
                      "start": 250,
                      "end": 279
                    }
                  ],
                  "expressions": [],
                  "start": 250,
                  "end": 279
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 234,
                "end": 279
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "preferences",
                  "start": 285,
                  "end": 296
                },
                "value": {
                  "type": "ObjectExpression",
                  "properties": [
                    {
                      "type": "Property",
                      "key": {
                        "type": "Identifier",
                        "name": "quotePreference",
                        "start": 300,
                        "end": 315
                      },
                      "value": {
                        "type": "Literal",
                        "value": "single",
                        "start": 317,
                        "end": 325
                      },
                      "computed": false,
                      "method": false,
                      "shorthand": false,
                      "kind": "init",
                      "start": 300,
                      "end": 325
                    }
                  ],
                  "start": 298,
                  "end": 327
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 285,
                "end": 327
              }
            ],
            "start": 123,
            "end": 329
          }
        ],
        "optional": false,
        "start": 108,
        "end": 330
      },
      "start": 108,
      "end": 331
    }
  ],
  "sourceType": "script",
  "start": 108,
  "end": 332
}