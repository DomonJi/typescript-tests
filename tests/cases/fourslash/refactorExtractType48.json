{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 158,
            "end": 162
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 163,
            "end": 169
          },
          "computed": false,
          "optional": false,
          "start": 158,
          "end": 169
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a",
            "start": 170,
            "end": 173
          },
          {
            "type": "Literal",
            "value": "b",
            "start": 175,
            "end": 178
          }
        ],
        "optional": false,
        "start": 158,
        "end": 179
      },
      "start": 158,
      "end": 180
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 182,
            "end": 186
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 187,
            "end": 200
          },
          "computed": false,
          "optional": false,
          "start": 182,
          "end": 200
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 208,
                  "end": 220
                },
                "value": {
                  "type": "Literal",
                  "value": "Extract type",
                  "start": 222,
                  "end": 236
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 208,
                "end": 236
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 243,
                  "end": 253
                },
                "value": {
                  "type": "Literal",
                  "value": "Extract to type alias",
                  "start": 255,
                  "end": 278
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 243,
                "end": 278
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 285,
                  "end": 302
                },
                "value": {
                  "type": "Literal",
                  "value": "Extract to type alias",
                  "start": 304,
                  "end": 327
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 285,
                "end": 327
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 334,
                  "end": 344
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "type /*RENAME*/NewType<T> = T extends [infer P, ((infer R) extends string ? string : never)] ? P & R : string;\r\n\r\ntype Crazy<T> = NewType<T>;",
                        "cooked": "type /*RENAME*/NewType<T> = T extends [infer P, ((infer R) extends string ? string : never)] ? P & R : string;\n\ntype Crazy<T> = NewType<T>;"
                      },
                      "tail": true,
                      "start": 346,
                      "end": 489
                    }
                  ],
                  "expressions": [],
                  "start": 346,
                  "end": 489
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 334,
                "end": 489
              }
            ],
            "start": 201,
            "end": 493
          }
        ],
        "optional": false,
        "start": 182,
        "end": 494
      },
      "start": 182,
      "end": 495
    }
  ],
  "sourceType": "module",
  "start": 158,
  "end": 497
}