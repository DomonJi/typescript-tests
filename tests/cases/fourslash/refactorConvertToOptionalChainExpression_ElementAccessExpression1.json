{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 130,
            "end": 134
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 135,
            "end": 141
          },
          "computed": false,
          "optional": false,
          "start": 130,
          "end": 141
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a",
            "start": 142,
            "end": 145
          },
          {
            "type": "Literal",
            "value": "b",
            "start": 147,
            "end": 150
          }
        ],
        "optional": false,
        "start": 130,
        "end": 151
      },
      "start": 130,
      "end": 152
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 154,
            "end": 158
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 159,
            "end": 172
          },
          "computed": false,
          "optional": false,
          "start": 154,
          "end": 172
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 180,
                  "end": 192
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to optional chain expression",
                  "start": 194,
                  "end": 232
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 180,
                "end": 232
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 239,
                  "end": 249
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to optional chain expression",
                  "start": 251,
                  "end": 289
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 239,
                "end": 289
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 296,
                  "end": 313
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to optional chain expression",
                  "start": 315,
                  "end": 353
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 296,
                "end": 353
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 360,
                  "end": 370
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "const a = {\r\n    b: { c: 1 }\r\n}\r\na?.['b']?.['c']",
                        "cooked": "const a = {\n    b: { c: 1 }\n}\na?.['b']?.['c']"
                      },
                      "tail": true,
                      "start": 373,
                      "end": 423
                    }
                  ],
                  "expressions": [],
                  "start": 373,
                  "end": 423
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 360,
                "end": 423
              }
            ],
            "start": 173,
            "end": 426
          }
        ],
        "optional": false,
        "start": 154,
        "end": 427
      },
      "start": 154,
      "end": 428
    }
  ],
  "sourceType": "module",
  "start": 130,
  "end": 430
}