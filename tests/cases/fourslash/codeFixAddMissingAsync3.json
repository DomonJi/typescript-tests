{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "verify",
            "start": 164,
            "end": 170
          },
          "property": {
            "type": "Identifier",
            "name": "codeFix",
            "start": 171,
            "end": 178
          },
          "computed": false,
          "optional": false,
          "start": 164,
          "end": 178
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "description",
                  "start": 186,
                  "end": 197
                },
                "value": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "ts",
                        "start": 199,
                        "end": 201
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "Diagnostics",
                        "start": 202,
                        "end": 213
                      },
                      "computed": false,
                      "optional": false,
                      "start": 199,
                      "end": 213
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "Add_async_modifier_to_containing_function",
                      "start": 214,
                      "end": 255
                    },
                    "computed": false,
                    "optional": false,
                    "start": 199,
                    "end": 255
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "message",
                    "start": 256,
                    "end": 263
                  },
                  "computed": false,
                  "optional": false,
                  "start": 199,
                  "end": 263
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 186,
                "end": 263
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "index",
                  "start": 270,
                  "end": 275
                },
                "value": {
                  "type": "Literal",
                  "value": 0,
                  "start": 277,
                  "end": 278
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 270,
                "end": 278
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newFileContent",
                  "start": 285,
                  "end": 299
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "const foo = async <T>(x: T): Promise<string> => {\r\n    await new Promise(resolve => resolve(true));\r\n    return \"\";\r\n}",
                        "cooked": "const foo = async <T>(x: T): Promise<string> => {\n    await new Promise(resolve => resolve(true));\n    return \"\";\n}"
                      },
                      "tail": true,
                      "start": 302,
                      "end": 422
                    }
                  ],
                  "expressions": [],
                  "start": 302,
                  "end": 422
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 285,
                "end": 422
              }
            ],
            "start": 179,
            "end": 425
          }
        ],
        "optional": false,
        "start": 164,
        "end": 426
      },
      "start": 164,
      "end": 427
    }
  ],
  "sourceType": "script",
  "start": 164,
  "end": 429
}