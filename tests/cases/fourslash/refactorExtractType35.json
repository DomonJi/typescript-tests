{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 85,
            "end": 89
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 90,
            "end": 96
          },
          "computed": false,
          "optional": false,
          "start": 85,
          "end": 96
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a",
            "start": 97,
            "end": 100
          },
          {
            "type": "Literal",
            "value": "b",
            "start": 102,
            "end": 105
          }
        ],
        "optional": false,
        "start": 85,
        "end": 106
      },
      "start": 85,
      "end": 107
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 109,
            "end": 113
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 114,
            "end": 127
          },
          "computed": false,
          "optional": false,
          "start": 109,
          "end": 127
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 135,
                  "end": 147
                },
                "value": {
                  "type": "Literal",
                  "value": "Extract type",
                  "start": 149,
                  "end": 163
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 135,
                "end": 163
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 170,
                  "end": 180
                },
                "value": {
                  "type": "Literal",
                  "value": "Extract to type alias",
                  "start": 182,
                  "end": 205
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 170,
                "end": 205
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 212,
                  "end": 229
                },
                "value": {
                  "type": "Literal",
                  "value": "Extract to type alias",
                  "start": 231,
                  "end": 254
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 212,
                "end": 254
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 261,
                  "end": 271
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "type /*RENAME*/NewType<U, T> = U | T;\r\n\r\ntype Union<T, U> = NewType<U, T>;",
                        "cooked": "type /*RENAME*/NewType<U, T> = U | T;\n\ntype Union<T, U> = NewType<U, T>;"
                      },
                      "tail": true,
                      "start": 273,
                      "end": 349
                    }
                  ],
                  "expressions": [],
                  "start": 273,
                  "end": 349
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 261,
                "end": 349
              }
            ],
            "start": 128,
            "end": 353
          }
        ],
        "optional": false,
        "start": 109,
        "end": 354
      },
      "start": 109,
      "end": 355
    }
  ],
  "sourceType": "module",
  "start": 85,
  "end": 357
}