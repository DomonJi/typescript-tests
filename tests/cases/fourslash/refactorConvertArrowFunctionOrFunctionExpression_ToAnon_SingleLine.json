{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 84,
            "end": 88
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 89,
            "end": 95
          },
          "computed": false,
          "optional": false,
          "start": 84,
          "end": 95
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "x",
            "start": 96,
            "end": 99
          },
          {
            "type": "Literal",
            "value": "y",
            "start": 101,
            "end": 104
          }
        ],
        "optional": false,
        "start": 84,
        "end": 105
      },
      "start": 84,
      "end": 106
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 108,
            "end": 112
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 113,
            "end": 126
          },
          "computed": false,
          "optional": false,
          "start": 108,
          "end": 126
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 134,
                  "end": 146
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert arrow function or function expression",
                  "start": 148,
                  "end": 195
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 134,
                "end": 195
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 202,
                  "end": 212
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to anonymous function",
                  "start": 214,
                  "end": 245
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 202,
                "end": 245
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 252,
                  "end": 269
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to anonymous function",
                  "start": 271,
                  "end": 302
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 252,
                "end": 302
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 309,
                  "end": 319
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "const foo = function() {\r\n    return 1 + 1;\r\n};",
                        "cooked": "const foo = function() {\n    return 1 + 1;\n};"
                      },
                      "tail": true,
                      "start": 321,
                      "end": 370
                    }
                  ],
                  "expressions": [],
                  "start": 321,
                  "end": 370
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 309,
                "end": 370
              }
            ],
            "start": 127,
            "end": 374
          }
        ],
        "optional": false,
        "start": 108,
        "end": 375
      },
      "start": 108,
      "end": 376
    }
  ],
  "sourceType": "module",
  "start": 84,
  "end": 378
}