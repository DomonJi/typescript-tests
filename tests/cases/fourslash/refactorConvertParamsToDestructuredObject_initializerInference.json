{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 149,
            "end": 153
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 154,
            "end": 160
          },
          "computed": false,
          "optional": false,
          "start": 149,
          "end": 160
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a",
            "start": 161,
            "end": 164
          },
          {
            "type": "Literal",
            "value": "b",
            "start": 166,
            "end": 169
          }
        ],
        "optional": false,
        "start": 149,
        "end": 170
      },
      "start": 149,
      "end": 171
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 173,
            "end": 177
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 178,
            "end": 191
          },
          "computed": false,
          "optional": false,
          "start": 173,
          "end": 191
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 199,
                  "end": 211
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 213,
                  "end": 256
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 199,
                "end": 256
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 263,
                  "end": 273
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 275,
                  "end": 318
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 263,
                "end": 318
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 325,
                  "end": 342
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 344,
                  "end": 387
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 325,
                "end": 387
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 394,
                  "end": 404
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "function f({ a, b = { x: 1, z: { s: true } } }: { a: number; b?: { x: number; z: { s: boolean; }; }; }) {\r\n    return b;\r\n}\r\nf({ a: 2 });",
                        "cooked": "function f({ a, b = { x: 1, z: { s: true } } }: { a: number; b?: { x: number; z: { s: boolean; }; }; }) {\n    return b;\n}\nf({ a: 2 });"
                      },
                      "tail": true,
                      "start": 406,
                      "end": 545
                    }
                  ],
                  "expressions": [],
                  "start": 406,
                  "end": 545
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 394,
                "end": 545
              }
            ],
            "start": 192,
            "end": 548
          }
        ],
        "optional": false,
        "start": 173,
        "end": 549
      },
      "start": 173,
      "end": 550
    }
  ],
  "sourceType": "script",
  "start": 149,
  "end": 550
}