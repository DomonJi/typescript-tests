{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "format",
            "start": 1242,
            "end": 1248
          },
          "property": {
            "type": "Identifier",
            "name": "document",
            "start": 1249,
            "end": 1257
          },
          "computed": false,
          "optional": false,
          "start": 1242,
          "end": 1257
        },
        "arguments": [],
        "optional": false,
        "start": 1242,
        "end": 1259
      },
      "start": 1242,
      "end": 1260
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "verify",
            "start": 1264,
            "end": 1270
          },
          "property": {
            "type": "Identifier",
            "name": "currentFileContentIs",
            "start": 1271,
            "end": 1291
          },
          "computed": false,
          "optional": false,
          "start": 1264,
          "end": 1291
        },
        "arguments": [
          {
            "type": "TemplateLiteral",
            "quasis": [
              {
                "type": "TemplateElement",
                "value": {
                  "raw": "<option>\r\n    homu   ;      homu\r\n    homu;homu\r\n    homu   :    homu\r\n    homu:homu\r\n    homu    ?     homu\r\n    homu    .    homu\r\n\r\n    homu    [   homu   ]   homu\r\n\r\n    !     homu\r\n    --    Type\r\n    homu    --\r\n    homu    ++\r\n    ++     homu\r\n\r\n    homu  ,   homu\r\n\r\n    var    homu\r\n    throw    homu\r\n    new    homu\r\n    delete   homu\r\n    return       homu\r\n    typeof     homu\r\n    await     homu\r\n\r\n    abstract  homu\r\n    class     homu\r\n    declare   homu\r\n    default   homu\r\n    enum      homu\r\n    export    homu\r\n    homu    extends   homu\r\n    get       homu\r\n    homu    implements     homu\r\n    interface      homu\r\n    module    homu\r\n    namespace      homu\r\n    private   homu\r\n    public    homu\r\n    protected      homu\r\n    set       homu\r\n    static    homu\r\n    type      homu\r\n\r\n    homu    =>    homu\r\n    homu=>homu\r\n\r\n    ...       homu\r\n\r\n    homu     @     homu\r\n    homu@homu\r\n\r\n    (    homu   )    homu\r\n</option>;",
                  "cooked": "<option>\n    homu   ;      homu\n    homu;homu\n    homu   :    homu\n    homu:homu\n    homu    ?     homu\n    homu    .    homu\n\n    homu    [   homu   ]   homu\n\n    !     homu\n    --    Type\n    homu    --\n    homu    ++\n    ++     homu\n\n    homu  ,   homu\n\n    var    homu\n    throw    homu\n    new    homu\n    delete   homu\n    return       homu\n    typeof     homu\n    await     homu\n\n    abstract  homu\n    class     homu\n    declare   homu\n    default   homu\n    enum      homu\n    export    homu\n    homu    extends   homu\n    get       homu\n    homu    implements     homu\n    interface      homu\n    module    homu\n    namespace      homu\n    private   homu\n    public    homu\n    protected      homu\n    set       homu\n    static    homu\n    type      homu\n\n    homu    =>    homu\n    homu=>homu\n\n    ...       homu\n\n    homu     @     homu\n    homu@homu\n\n    (    homu   )    homu\n</option>;"
                },
                "tail": true,
                "start": 1292,
                "end": 2248
              }
            ],
            "expressions": [],
            "start": 1292,
            "end": 2248
          }
        ],
        "optional": false,
        "start": 1264,
        "end": 2249
      },
      "start": 1264,
      "end": 2250
    }
  ],
  "sourceType": "script",
  "start": 1242,
  "end": 2250
}