{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 81,
            "end": 85
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 86,
            "end": 92
          },
          "computed": false,
          "optional": false,
          "start": 81,
          "end": 92
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a",
            "start": 93,
            "end": 96
          },
          {
            "type": "Literal",
            "value": "b",
            "start": 98,
            "end": 101
          }
        ],
        "optional": false,
        "start": 81,
        "end": 102
      },
      "start": 81,
      "end": 103
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 105,
            "end": 109
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 110,
            "end": 123
          },
          "computed": false,
          "optional": false,
          "start": 105,
          "end": 123
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 131,
                  "end": 143
                },
                "value": {
                  "type": "Literal",
                  "value": "Extract type",
                  "start": 145,
                  "end": 159
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 131,
                "end": 159
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 166,
                  "end": 176
                },
                "value": {
                  "type": "Literal",
                  "value": "Extract to type alias",
                  "start": 178,
                  "end": 201
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 166,
                "end": 201
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 208,
                  "end": 225
                },
                "value": {
                  "type": "Literal",
                  "value": "Extract to type alias",
                  "start": 227,
                  "end": 250
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 208,
                "end": 250
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 257,
                  "end": 267
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "type /*RENAME*/NewType<T> = B.C.D<T>;\r\n\r\ntype A<T> = NewType<T>;",
                        "cooked": "type /*RENAME*/NewType<T> = B.C.D<T>;\n\ntype A<T> = NewType<T>;"
                      },
                      "tail": true,
                      "start": 269,
                      "end": 335
                    }
                  ],
                  "expressions": [],
                  "start": 269,
                  "end": 335
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 257,
                "end": 335
              }
            ],
            "start": 124,
            "end": 339
          }
        ],
        "optional": false,
        "start": 105,
        "end": 340
      },
      "start": 105,
      "end": 341
    }
  ],
  "sourceType": "module",
  "start": 81,
  "end": 343
}