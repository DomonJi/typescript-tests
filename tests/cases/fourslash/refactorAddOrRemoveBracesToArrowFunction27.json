{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 134,
            "end": 138
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 139,
            "end": 145
          },
          "computed": false,
          "optional": false,
          "start": 134,
          "end": 145
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a",
            "start": 146,
            "end": 149
          },
          {
            "type": "Literal",
            "value": "b",
            "start": 151,
            "end": 154
          }
        ],
        "optional": false,
        "start": 134,
        "end": 155
      },
      "start": 134,
      "end": 156
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 157,
            "end": 161
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 162,
            "end": 175
          },
          "computed": false,
          "optional": false,
          "start": 157,
          "end": 175
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 182,
                  "end": 194
                },
                "value": {
                  "type": "Literal",
                  "value": "Add or remove braces in an arrow function",
                  "start": 196,
                  "end": 239
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 182,
                "end": 239
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 245,
                  "end": 255
                },
                "value": {
                  "type": "Literal",
                  "value": "Remove braces from arrow function",
                  "start": 257,
                  "end": 292
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 245,
                "end": 292
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 298,
                  "end": 315
                },
                "value": {
                  "type": "Literal",
                  "value": "Remove braces from arrow function",
                  "start": 317,
                  "end": 352
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 298,
                "end": 352
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 358,
                  "end": 368
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "const b = (a: number) => /* leading */ a /* trailing */",
                        "cooked": "const b = (a: number) => /* leading */ a /* trailing */"
                      },
                      "tail": true,
                      "start": 370,
                      "end": 427
                    }
                  ],
                  "expressions": [],
                  "start": 370,
                  "end": 427
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 358,
                "end": 427
              }
            ],
            "start": 176,
            "end": 430
          }
        ],
        "optional": false,
        "start": 157,
        "end": 431
      },
      "start": 157,
      "end": 432
    }
  ],
  "sourceType": "script",
  "start": 134,
  "end": 433
}