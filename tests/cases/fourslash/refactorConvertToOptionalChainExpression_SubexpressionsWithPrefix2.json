{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 196,
            "end": 200
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 201,
            "end": 207
          },
          "computed": false,
          "optional": false,
          "start": 196,
          "end": 207
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a",
            "start": 208,
            "end": 211
          },
          {
            "type": "Literal",
            "value": "b",
            "start": 213,
            "end": 216
          }
        ],
        "optional": false,
        "start": 196,
        "end": 217
      },
      "start": 196,
      "end": 218
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 220,
            "end": 224
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 225,
            "end": 238
          },
          "computed": false,
          "optional": false,
          "start": 220,
          "end": 238
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 246,
                  "end": 258
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to optional chain expression",
                  "start": 260,
                  "end": 298
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 246,
                "end": 298
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 305,
                  "end": 315
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to optional chain expression",
                  "start": 317,
                  "end": 355
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 305,
                "end": 355
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 362,
                  "end": 379
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to optional chain expression",
                  "start": 381,
                  "end": 419
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 362,
                "end": 419
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 426,
                  "end": 436
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "let a = { b: 0 };\r\nlet x = { y: 0 };\r\na && a.b && x?.y;",
                        "cooked": "let a = { b: 0 };\nlet x = { y: 0 };\na && a.b && x?.y;"
                      },
                      "tail": true,
                      "start": 439,
                      "end": 496
                    }
                  ],
                  "expressions": [],
                  "start": 439,
                  "end": 496
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 426,
                "end": 496
              }
            ],
            "start": 239,
            "end": 499
          }
        ],
        "optional": false,
        "start": 220,
        "end": 500
      },
      "start": 220,
      "end": 501
    }
  ],
  "sourceType": "script",
  "start": 196,
  "end": 501
}