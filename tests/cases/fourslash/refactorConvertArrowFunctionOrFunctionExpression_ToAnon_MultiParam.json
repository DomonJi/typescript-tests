{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 89,
            "end": 93
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 94,
            "end": 100
          },
          "computed": false,
          "optional": false,
          "start": 89,
          "end": 100
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "x",
            "start": 101,
            "end": 104
          },
          {
            "type": "Literal",
            "value": "y",
            "start": 106,
            "end": 109
          }
        ],
        "optional": false,
        "start": 89,
        "end": 110
      },
      "start": 89,
      "end": 111
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 113,
            "end": 117
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 118,
            "end": 131
          },
          "computed": false,
          "optional": false,
          "start": 113,
          "end": 131
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 139,
                  "end": 151
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert arrow function or function expression",
                  "start": 153,
                  "end": 200
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 139,
                "end": 200
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 207,
                  "end": 217
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to anonymous function",
                  "start": 219,
                  "end": 250
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 207,
                "end": 250
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 257,
                  "end": 274
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to anonymous function",
                  "start": 276,
                  "end": 307
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 257,
                "end": 307
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 314,
                  "end": 324
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "const foo = function(a, b, c) {\r\n    return a + 1;\r\n};",
                        "cooked": "const foo = function(a, b, c) {\n    return a + 1;\n};"
                      },
                      "tail": true,
                      "start": 326,
                      "end": 382
                    }
                  ],
                  "expressions": [],
                  "start": 326,
                  "end": 382
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 314,
                "end": 382
              }
            ],
            "start": 132,
            "end": 386
          }
        ],
        "optional": false,
        "start": 113,
        "end": 387
      },
      "start": 113,
      "end": 388
    }
  ],
  "sourceType": "script",
  "start": 89,
  "end": 390
}