{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 128,
            "end": 132
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 133,
            "end": 139
          },
          "computed": false,
          "optional": false,
          "start": 128,
          "end": 139
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a",
            "start": 140,
            "end": 143
          },
          {
            "type": "Literal",
            "value": "b",
            "start": 145,
            "end": 148
          }
        ],
        "optional": false,
        "start": 128,
        "end": 149
      },
      "start": 128,
      "end": 150
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 152,
            "end": 156
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 157,
            "end": 170
          },
          "computed": false,
          "optional": false,
          "start": 152,
          "end": 170
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 178,
                  "end": 190
                },
                "value": {
                  "type": "Literal",
                  "value": "Extract type",
                  "start": 192,
                  "end": 206
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 178,
                "end": 206
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 213,
                  "end": 223
                },
                "value": {
                  "type": "Literal",
                  "value": "Extract to type alias",
                  "start": 225,
                  "end": 248
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 213,
                "end": 248
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 255,
                  "end": 272
                },
                "value": {
                  "type": "Literal",
                  "value": "Extract to type alias",
                  "start": 274,
                  "end": 297
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 255,
                "end": 297
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 304,
                  "end": 314
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "type A<T extends string> = T;\r\ntype /*RENAME*/NewType<T extends string> = A<T>;\r\n\r\ntype B<T extends string> = NewType<T>;",
                        "cooked": "type A<T extends string> = T;\ntype /*RENAME*/NewType<T extends string> = A<T>;\n\ntype B<T extends string> = NewType<T>;"
                      },
                      "tail": true,
                      "start": 316,
                      "end": 439
                    }
                  ],
                  "expressions": [],
                  "start": 316,
                  "end": 439
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 304,
                "end": 439
              }
            ],
            "start": 171,
            "end": 443
          }
        ],
        "optional": false,
        "start": 152,
        "end": 444
      },
      "start": 152,
      "end": 445
    }
  ],
  "sourceType": "module",
  "start": 128,
  "end": 447
}