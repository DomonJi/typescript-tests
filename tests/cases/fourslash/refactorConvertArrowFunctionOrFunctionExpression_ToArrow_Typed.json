{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 147,
            "end": 151
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 152,
            "end": 158
          },
          "computed": false,
          "optional": false,
          "start": 147,
          "end": 158
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "x",
            "start": 159,
            "end": 162
          },
          {
            "type": "Literal",
            "value": "y",
            "start": 164,
            "end": 167
          }
        ],
        "optional": false,
        "start": 147,
        "end": 168
      },
      "start": 147,
      "end": 169
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 171,
            "end": 175
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 176,
            "end": 189
          },
          "computed": false,
          "optional": false,
          "start": 171,
          "end": 189
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 197,
                  "end": 209
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert arrow function or function expression",
                  "start": 211,
                  "end": 258
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 197,
                "end": 258
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 265,
                  "end": 275
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to arrow function",
                  "start": 277,
                  "end": 304
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 265,
                "end": 304
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 311,
                  "end": 328
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to arrow function",
                  "start": 330,
                  "end": 357
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 311,
                "end": 357
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 364,
                  "end": 374
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "const concat = (a: string, b: string): string => a + b;",
                        "cooked": "const concat = (a: string, b: string): string => a + b;"
                      },
                      "tail": true,
                      "start": 376,
                      "end": 433
                    }
                  ],
                  "expressions": [],
                  "start": 376,
                  "end": 433
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 364,
                "end": 433
              }
            ],
            "start": 190,
            "end": 437
          }
        ],
        "optional": false,
        "start": 171,
        "end": 438
      },
      "start": 171,
      "end": 439
    }
  ],
  "sourceType": "script",
  "start": 147,
  "end": 441
}