{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 127,
            "end": 131
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 132,
            "end": 138
          },
          "computed": false,
          "optional": false,
          "start": 127,
          "end": 138
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "x",
            "start": 139,
            "end": 142
          },
          {
            "type": "Literal",
            "value": "y",
            "start": 144,
            "end": 147
          }
        ],
        "optional": false,
        "start": 127,
        "end": 148
      },
      "start": 127,
      "end": 149
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 151,
            "end": 155
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 156,
            "end": 169
          },
          "computed": false,
          "optional": false,
          "start": 151,
          "end": 169
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 177,
                  "end": 189
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert arrow function or function expression",
                  "start": 191,
                  "end": 238
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 177,
                "end": 238
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 245,
                  "end": 255
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to arrow function",
                  "start": 257,
                  "end": 284
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 245,
                "end": 284
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 291,
                  "end": 308
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to arrow function",
                  "start": 310,
                  "end": 337
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 291,
                "end": 337
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 344,
                  "end": 354
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "const foo = (a, b, c) => a + b + c;",
                        "cooked": "const foo = (a, b, c) => a + b + c;"
                      },
                      "tail": true,
                      "start": 356,
                      "end": 393
                    }
                  ],
                  "expressions": [],
                  "start": 356,
                  "end": 393
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 344,
                "end": 393
              }
            ],
            "start": 170,
            "end": 397
          }
        ],
        "optional": false,
        "start": 151,
        "end": 398
      },
      "start": 151,
      "end": 399
    }
  ],
  "sourceType": "module",
  "start": 127,
  "end": 401
}