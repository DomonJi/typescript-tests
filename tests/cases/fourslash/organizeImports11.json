{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "verify",
            "start": 695,
            "end": 701
          },
          "property": {
            "type": "Identifier",
            "name": "organizeImports",
            "start": 702,
            "end": 717
          },
          "computed": false,
          "optional": false,
          "start": 695,
          "end": 717
        },
        "arguments": [
          {
            "type": "TemplateLiteral",
            "quasis": [
              {
                "type": "TemplateElement",
                "value": {
                  "raw": "import { TypeA, TypeB, TypeC } from './my-types';\n\n/**\n * MyClass {@link TypeA}\n */\nexport class MyClass {\n\n  /**\n   * Some Property {@link TypeB}\n   */\n  public something;\n\n  /**\n   * Some function {@link TypeC}\n   */\n  public myMethod() {\n\n    /**\n     * Some lambda function {@link TypeC}\n     */\n    const someFunction = () => {\n      return '';\n    }\n    someFunction();\n  }\n}",
                  "cooked": "import { TypeA, TypeB, TypeC } from './my-types';\n\n/**\n * MyClass {@link TypeA}\n */\nexport class MyClass {\n\n  /**\n   * Some Property {@link TypeB}\n   */\n  public something;\n\n  /**\n   * Some function {@link TypeC}\n   */\n  public myMethod() {\n\n    /**\n     * Some lambda function {@link TypeC}\n     */\n    const someFunction = () => {\n      return '';\n    }\n    someFunction();\n  }\n}"
                },
                "tail": true,
                "start": 718,
                "end": 1101
              }
            ],
            "expressions": [],
            "start": 718,
            "end": 1101
          }
        ],
        "optional": false,
        "start": 695,
        "end": 1103
      },
      "start": 695,
      "end": 1104
    }
  ],
  "sourceType": "module",
  "start": 695,
  "end": 1104
}