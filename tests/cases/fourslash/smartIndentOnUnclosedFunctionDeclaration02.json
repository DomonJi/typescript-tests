{
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "verifyIndentationAfterNewLine",
        "start": 89,
        "end": 118
      },
      "generator": false,
      "expression": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "name": "marker",
          "typeAnnotation": {
            "type": "TSTypeAnnotation",
            "typeAnnotation": {
              "type": "TSStringKeyword",
              "start": 127,
              "end": 133
            },
            "start": 125,
            "end": 133
          },
          "start": 119,
          "end": 133
        },
        {
          "type": "Identifier",
          "name": "indentation",
          "typeAnnotation": {
            "type": "TSTypeAnnotation",
            "typeAnnotation": {
              "type": "TSNumberKeyword",
              "start": 148,
              "end": 154
            },
            "start": 146,
            "end": 154
          },
          "start": 135,
          "end": 154
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "goTo",
                  "start": 169,
                  "end": 173
                },
                "property": {
                  "type": "Identifier",
                  "name": "marker",
                  "start": 174,
                  "end": 180
                },
                "computed": false,
                "optional": false,
                "start": 169,
                "end": 180
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "marker",
                  "start": 181,
                  "end": 187
                }
              ],
              "optional": false,
              "start": 169,
              "end": 188
            },
            "start": 169,
            "end": 189
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "edit",
                  "start": 195,
                  "end": 199
                },
                "property": {
                  "type": "Identifier",
                  "name": "insert",
                  "start": 200,
                  "end": 206
                },
                "computed": false,
                "optional": false,
                "start": 195,
                "end": 206
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "\n",
                  "start": 207,
                  "end": 211
                }
              ],
              "optional": false,
              "start": 195,
              "end": 212
            },
            "start": 195,
            "end": 213
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "verify",
                  "start": 219,
                  "end": 225
                },
                "property": {
                  "type": "Identifier",
                  "name": "indentationIs",
                  "start": 226,
                  "end": 239
                },
                "computed": false,
                "optional": false,
                "start": 219,
                "end": 239
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "indentation",
                  "start": 240,
                  "end": 251
                }
              ],
              "optional": false,
              "start": 219,
              "end": 252
            },
            "start": 219,
            "end": 253
          }
        ],
        "start": 162,
        "end": 256
      },
      "returnType": {
        "type": "TSTypeAnnotation",
        "typeAnnotation": {
          "type": "TSVoidKeyword",
          "start": 157,
          "end": 161
        },
        "start": 155,
        "end": 161
      },
      "start": 80,
      "end": 256
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "verifyIndentationAfterNewLine",
          "start": 260,
          "end": 289
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "1",
            "start": 290,
            "end": 293
          },
          {
            "type": "Literal",
            "value": 4,
            "start": 295,
            "end": 296
          }
        ],
        "optional": false,
        "start": 260,
        "end": 297
      },
      "start": 260,
      "end": 298
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "verifyIndentationAfterNewLine",
          "start": 300,
          "end": 329
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "2",
            "start": 330,
            "end": 333
          },
          {
            "type": "Literal",
            "value": 4,
            "start": 335,
            "end": 336
          }
        ],
        "optional": false,
        "start": 300,
        "end": 337
      },
      "start": 300,
      "end": 338
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "verifyIndentationAfterNewLine",
          "start": 340,
          "end": 369
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "3",
            "start": 370,
            "end": 373
          },
          {
            "type": "Literal",
            "value": 4,
            "start": 375,
            "end": 376
          }
        ],
        "optional": false,
        "start": 340,
        "end": 377
      },
      "start": 340,
      "end": 378
    }
  ],
  "sourceType": "module",
  "start": 80,
  "end": 378
}