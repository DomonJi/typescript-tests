{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 210,
            "end": 214
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 215,
            "end": 221
          },
          "computed": false,
          "optional": false,
          "start": 210,
          "end": 221
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a",
            "start": 222,
            "end": 225
          },
          {
            "type": "Literal",
            "value": "b",
            "start": 227,
            "end": 230
          }
        ],
        "optional": false,
        "start": 210,
        "end": 231
      },
      "start": 210,
      "end": 232
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 234,
            "end": 238
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 239,
            "end": 252
          },
          "computed": false,
          "optional": false,
          "start": 234,
          "end": 252
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 260,
                  "end": 272
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 274,
                  "end": 317
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 260,
                "end": 317
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 324,
                  "end": 334
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 336,
                  "end": 379
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 324,
                "end": 379
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 386,
                  "end": 403
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert parameters to destructured object",
                  "start": 405,
                  "end": 448
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 386,
                "end": 448
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 455,
                  "end": 465
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "class Foo {\r\n    bar({ t, s }: { t: string; s: string; }): string {\r\n        return s + t;\r\n    }\r\n}\r\nvar foo = new Foo();\r\nfoo.bar({ t: \"a\", s: \"b\" });",
                        "cooked": "class Foo {\n    bar({ t, s }: { t: string; s: string; }): string {\n        return s + t;\n    }\n}\nvar foo = new Foo();\nfoo.bar({ t: \"a\", s: \"b\" });"
                      },
                      "tail": true,
                      "start": 467,
                      "end": 621
                    }
                  ],
                  "expressions": [],
                  "start": 467,
                  "end": 621
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 455,
                "end": 621
              }
            ],
            "start": 253,
            "end": 624
          }
        ],
        "optional": false,
        "start": 234,
        "end": 625
      },
      "start": 234,
      "end": 626
    }
  ],
  "sourceType": "script",
  "start": 210,
  "end": 626
}