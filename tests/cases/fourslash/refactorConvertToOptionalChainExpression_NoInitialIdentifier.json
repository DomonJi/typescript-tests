{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "goTo",
            "start": 102,
            "end": 106
          },
          "property": {
            "type": "Identifier",
            "name": "select",
            "start": 107,
            "end": 113
          },
          "computed": false,
          "optional": false,
          "start": 102,
          "end": 113
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "a",
            "start": 114,
            "end": 117
          },
          {
            "type": "Literal",
            "value": "b",
            "start": 119,
            "end": 122
          }
        ],
        "optional": false,
        "start": 102,
        "end": 123
      },
      "start": 102,
      "end": 124
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "Identifier",
            "name": "edit",
            "start": 126,
            "end": 130
          },
          "property": {
            "type": "Identifier",
            "name": "applyRefactor",
            "start": 131,
            "end": 144
          },
          "computed": false,
          "optional": false,
          "start": 126,
          "end": 144
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "refactorName",
                  "start": 152,
                  "end": 164
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to optional chain expression",
                  "start": 166,
                  "end": 204
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 152,
                "end": 204
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionName",
                  "start": 211,
                  "end": 221
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to optional chain expression",
                  "start": 223,
                  "end": 261
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 211,
                "end": 261
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "actionDescription",
                  "start": 268,
                  "end": 285
                },
                "value": {
                  "type": "Literal",
                  "value": "Convert to optional chain expression",
                  "start": 287,
                  "end": 325
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 268,
                "end": 325
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "newContent",
                  "start": 332,
                  "end": 342
                },
                "value": {
                  "type": "TemplateLiteral",
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "let a = { b: { c: 0 } };\r\na.b?.c;",
                        "cooked": "let a = { b: { c: 0 } };\na.b?.c;"
                      },
                      "tail": true,
                      "start": 345,
                      "end": 380
                    }
                  ],
                  "expressions": [],
                  "start": 345,
                  "end": 380
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 332,
                "end": 380
              }
            ],
            "start": 145,
            "end": 383
          }
        ],
        "optional": false,
        "start": 126,
        "end": 384
      },
      "start": 126,
      "end": 385
    }
  ],
  "sourceType": "module",
  "start": 102,
  "end": 385
}