{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "nonNull",
            "typeAnnotation": {
              "type": "TSTypeAnnotation",
              "typeAnnotation": {
                "type": "TSTypeLiteral",
                "members": [],
                "start": 55,
                "end": 57
              },
              "start": 53,
              "end": 57
            },
            "start": 46,
            "end": 57
          },
          "init": null,
          "start": 46,
          "end": 57
        }
      ],
      "kind": "let",
      "declare": true,
      "start": 34,
      "end": 58
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "operator": "===",
        "left": {
          "type": "Identifier",
          "name": "nonNull",
          "start": 63,
          "end": 70
        },
        "right": {
          "type": "Literal",
          "value": "foo",
          "start": 75,
          "end": 80
        },
        "start": 63,
        "end": 80
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "Identifier",
              "name": "nonNull",
              "start": 86,
              "end": 93
            },
            "start": 86,
            "end": 94
          }
        ],
        "start": 82,
        "end": 96
      },
      "alternate": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "Identifier",
              "name": "nonNull",
              "start": 106,
              "end": 113
            },
            "start": 106,
            "end": 114
          }
        ],
        "start": 102,
        "end": 116
      },
      "start": 59,
      "end": 116
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "obj",
            "typeAnnotation": {
              "type": "TSTypeAnnotation",
              "typeAnnotation": {
                "type": "TSTypeLiteral",
                "members": [
                  {
                    "type": "TSPropertySignature",
                    "computed": false,
                    "key": {
                      "type": "Identifier",
                      "name": "a",
                      "start": 137,
                      "end": 138
                    },
                    "typeAnnotation": {
                      "type": "TSTypeAnnotation",
                      "typeAnnotation": {
                        "type": "TSStringKeyword",
                        "start": 140,
                        "end": 146
                      },
                      "start": 138,
                      "end": 146
                    },
                    "start": 137,
                    "end": 146
                  }
                ],
                "start": 135,
                "end": 148
              },
              "start": 133,
              "end": 148
            },
            "start": 130,
            "end": 148
          },
          "init": null,
          "start": 130,
          "end": 148
        }
      ],
      "kind": "let",
      "declare": true,
      "start": 118,
      "end": 149
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "operator": "===",
        "left": {
          "type": "Identifier",
          "name": "nonNull",
          "start": 154,
          "end": 161
        },
        "right": {
          "type": "Identifier",
          "name": "obj",
          "start": 166,
          "end": 169
        },
        "start": 154,
        "end": 169
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "Identifier",
              "name": "nonNull",
              "start": 175,
              "end": 182
            },
            "start": 175,
            "end": 183
          }
        ],
        "start": 171,
        "end": 185
      },
      "alternate": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "Identifier",
              "name": "nonNull",
              "start": 195,
              "end": 202
            },
            "start": 195,
            "end": 203
          }
        ],
        "start": 191,
        "end": 205
      },
      "start": 150,
      "end": 205
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "f1",
        "start": 216,
        "end": 218
      },
      "generator": false,
      "expression": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "name": "x",
          "typeAnnotation": {
            "type": "TSTypeAnnotation",
            "typeAnnotation": {
              "type": "TSTypeReference",
              "typeName": {
                "type": "Identifier",
                "name": "T",
                "start": 225,
                "end": 226
              },
              "start": 225,
              "end": 226
            },
            "start": 223,
            "end": 226
          },
          "start": 222,
          "end": 226
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "operator": "===",
              "left": {
                "type": "Identifier",
                "name": "nonNull",
                "start": 236,
                "end": 243
              },
              "right": {
                "type": "Identifier",
                "name": "x",
                "start": 248,
                "end": 249
              },
              "start": 236,
              "end": 249
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "Identifier",
                    "name": "nonNull",
                    "start": 257,
                    "end": 264
                  },
                  "start": 257,
                  "end": 265
                }
              ],
              "start": 251,
              "end": 269
            },
            "alternate": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "Identifier",
                    "name": "nonNull",
                    "start": 283,
                    "end": 290
                  },
                  "start": 283,
                  "end": 291
                }
              ],
              "start": 277,
              "end": 295
            },
            "start": 232,
            "end": 295
          }
        ],
        "start": 228,
        "end": 297
      },
      "typeParameters": {
        "type": "TSTypeParameterDeclaration",
        "params": [
          {
            "type": "TSTypeParameter",
            "name": {
              "type": "Identifier",
              "name": "T",
              "start": 219,
              "end": 220
            },
            "in": false,
            "out": false,
            "start": 219,
            "end": 220
          }
        ],
        "start": 218,
        "end": 221
      },
      "start": 207,
      "end": 297
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "f2",
        "start": 308,
        "end": 310
      },
      "generator": false,
      "expression": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "name": "x",
          "typeAnnotation": {
            "type": "TSTypeAnnotation",
            "typeAnnotation": {
              "type": "TSTypeReference",
              "typeName": {
                "type": "Identifier",
                "name": "T",
                "start": 332,
                "end": 333
              },
              "start": 332,
              "end": 333
            },
            "start": 330,
            "end": 333
          },
          "start": 329,
          "end": 333
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "operator": "===",
              "left": {
                "type": "Identifier",
                "name": "nonNull",
                "start": 343,
                "end": 350
              },
              "right": {
                "type": "Identifier",
                "name": "x",
                "start": 355,
                "end": 356
              },
              "start": 343,
              "end": 356
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "Identifier",
                    "name": "nonNull",
                    "start": 364,
                    "end": 371
                  },
                  "start": 364,
                  "end": 372
                }
              ],
              "start": 358,
              "end": 376
            },
            "alternate": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "Identifier",
                    "name": "nonNull",
                    "start": 390,
                    "end": 397
                  },
                  "start": 390,
                  "end": 398
                }
              ],
              "start": 384,
              "end": 402
            },
            "start": 339,
            "end": 402
          }
        ],
        "start": 335,
        "end": 404
      },
      "typeParameters": {
        "type": "TSTypeParameterDeclaration",
        "params": [
          {
            "type": "TSTypeParameter",
            "name": {
              "type": "Identifier",
              "name": "T",
              "start": 311,
              "end": 312
            },
            "constraint": {
              "type": "TSObjectKeyword",
              "start": 321,
              "end": 327
            },
            "in": false,
            "out": false,
            "start": 311,
            "end": 327
          }
        ],
        "start": 310,
        "end": 328
      },
      "start": 299,
      "end": 404
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "union",
            "typeAnnotation": {
              "type": "TSTypeAnnotation",
              "typeAnnotation": {
                "type": "TSUnionType",
                "types": [
                  {
                    "type": "TSLiteralType",
                    "literal": {
                      "type": "Literal",
                      "value": "xyz",
                      "start": 425,
                      "end": 430
                    },
                    "start": 425,
                    "end": 430
                  },
                  {
                    "type": "TSTypeLiteral",
                    "members": [
                      {
                        "type": "TSPropertySignature",
                        "computed": false,
                        "key": {
                          "type": "Identifier",
                          "name": "a",
                          "start": 435,
                          "end": 436
                        },
                        "typeAnnotation": {
                          "type": "TSTypeAnnotation",
                          "typeAnnotation": {
                            "type": "TSStringKeyword",
                            "start": 438,
                            "end": 444
                          },
                          "start": 436,
                          "end": 444
                        },
                        "start": 435,
                        "end": 444
                      }
                    ],
                    "start": 433,
                    "end": 446
                  },
                  {
                    "type": "TSUndefinedKeyword",
                    "start": 449,
                    "end": 458
                  }
                ],
                "start": 425,
                "end": 458
              },
              "start": 423,
              "end": 458
            },
            "start": 418,
            "end": 458
          },
          "init": null,
          "start": 418,
          "end": 458
        }
      ],
      "kind": "let",
      "declare": true,
      "start": 406,
      "end": 459
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "operator": "===",
        "left": {
          "type": "Identifier",
          "name": "nonNull",
          "start": 464,
          "end": 471
        },
        "right": {
          "type": "Identifier",
          "name": "union",
          "start": 476,
          "end": 481
        },
        "start": 464,
        "end": 481
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "Identifier",
              "name": "nonNull",
              "start": 487,
              "end": 494
            },
            "start": 487,
            "end": 495
          }
        ],
        "start": 483,
        "end": 497
      },
      "alternate": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "Identifier",
              "name": "nonNull",
              "start": 507,
              "end": 514
            },
            "start": 507,
            "end": 515
          }
        ],
        "start": 503,
        "end": 517
      },
      "start": 460,
      "end": 517
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "operator": "===",
        "left": {
          "type": "Identifier",
          "name": "nonNull",
          "start": 523,
          "end": 530
        },
        "right": {
          "type": "Identifier",
          "name": "undefined",
          "start": 535,
          "end": 544
        },
        "start": 523,
        "end": 544
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "Identifier",
              "name": "nonNull",
              "start": 550,
              "end": 557
            },
            "start": 550,
            "end": 558
          }
        ],
        "start": 546,
        "end": 560
      },
      "alternate": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "Identifier",
              "name": "nonNull",
              "start": 570,
              "end": 577
            },
            "start": 570,
            "end": 578
          }
        ],
        "start": 566,
        "end": 580
      },
      "start": 519,
      "end": 580
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "operator": "===",
        "left": {
          "type": "Identifier",
          "name": "nonNull",
          "start": 586,
          "end": 593
        },
        "right": {
          "type": "Literal",
          "value": null,
          "start": 598,
          "end": 602
        },
        "start": 586,
        "end": 602
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "Identifier",
              "name": "nonNull",
              "start": 608,
              "end": 615
            },
            "start": 608,
            "end": 616
          }
        ],
        "start": 604,
        "end": 618
      },
      "alternate": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "Identifier",
              "name": "nonNull",
              "start": 628,
              "end": 635
            },
            "start": 628,
            "end": 636
          }
        ],
        "start": 624,
        "end": 638
      },
      "start": 582,
      "end": 638
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "operator": "==",
        "left": {
          "type": "Identifier",
          "name": "nonNull",
          "start": 644,
          "end": 651
        },
        "right": {
          "type": "Identifier",
          "name": "undefined",
          "start": 655,
          "end": 664
        },
        "start": 644,
        "end": 664
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "Identifier",
              "name": "nonNull",
              "start": 670,
              "end": 677
            },
            "start": 670,
            "end": 678
          }
        ],
        "start": 666,
        "end": 680
      },
      "alternate": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "Identifier",
              "name": "nonNull",
              "start": 690,
              "end": 697
            },
            "start": 690,
            "end": 698
          }
        ],
        "start": 686,
        "end": 700
      },
      "start": 640,
      "end": 700
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "foo",
            "start": 729,
            "end": 732
          },
          "init": {
            "type": "ArrowFunctionExpression",
            "generator": false,
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "value",
                "typeAnnotation": {
                  "type": "TSTypeAnnotation",
                  "typeAnnotation": {
                    "type": "TSUnknownKeyword",
                    "start": 743,
                    "end": 750
                  },
                  "start": 741,
                  "end": 750
                },
                "start": 736,
                "end": 750
              }
            ],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "UnaryExpression",
                    "operator": "!",
                    "prefix": true,
                    "argument": {
                      "type": "Identifier",
                      "name": "value",
                      "start": 772,
                      "end": 777
                    },
                    "start": 771,
                    "end": 777
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Literal",
                          "value": "foo",
                          "start": 794,
                          "end": 799
                        },
                        "start": 787,
                        "end": 800
                      }
                    ],
                    "start": 779,
                    "end": 804
                  },
                  "alternate": null,
                  "start": 767,
                  "end": 804
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "operator": "===",
                    "left": {
                      "type": "Identifier",
                      "name": "value",
                      "start": 811,
                      "end": 816
                    },
                    "right": {
                      "type": "Literal",
                      "value": "xyz",
                      "start": 821,
                      "end": 826
                    },
                    "start": 811,
                    "end": 826
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Identifier",
                          "name": "value",
                          "start": 843,
                          "end": 848
                        },
                        "start": 836,
                        "end": 849
                      }
                    ],
                    "start": 828,
                    "end": 902
                  },
                  "alternate": null,
                  "start": 807,
                  "end": 902
                },
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "Literal",
                    "value": "",
                    "start": 912,
                    "end": 914
                  },
                  "start": 905,
                  "end": 915
                }
              ],
              "start": 763,
              "end": 917
            },
            "async": false,
            "expression": false,
            "returnType": {
              "type": "TSTypeAnnotation",
              "typeAnnotation": {
                "type": "TSStringKeyword",
                "start": 753,
                "end": 759
              },
              "start": 751,
              "end": 759
            },
            "start": 735,
            "end": 917
          },
          "start": 729,
          "end": 917
        }
      ],
      "kind": "const",
      "start": 723,
      "end": 918
    }
  ],
  "sourceType": "module",
  "start": 34,
  "end": 919
}