{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "ArrowFunctionExpression",
        "generator": false,
        "id": null,
        "params": [],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ExpressionStatement",
              "expression": {
                "type": "AwaitExpression",
                "argument": {
                  "type": "Literal",
                  "value": 0,
                  "start": 99,
                  "end": 100
                },
                "start": 93,
                "end": 100
              },
              "start": 93,
              "end": 101
            }
          ],
          "start": 87,
          "end": 103
        },
        "async": true,
        "expression": false,
        "returnType": {
          "type": "TSTypeAnnotation",
          "typeAnnotation": {
            "type": "TSTypeReference",
            "typeName": {
              "type": "Identifier",
              "name": "Promise",
              "start": 70,
              "end": 77
            },
            "typeParameters": {
              "type": "TSTypeParameterInstantiation",
              "params": [
                {
                  "type": "TSVoidKeyword",
                  "start": 78,
                  "end": 82
                }
              ],
              "start": 77,
              "end": 83
            },
            "start": 70,
            "end": 83
          },
          "start": 68,
          "end": 83
        },
        "start": 60,
        "end": 103
      },
      "start": 60,
      "end": 103
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "asyncFunc",
        "start": 120,
        "end": 129
      },
      "generator": false,
      "expression": false,
      "async": true,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AwaitExpression",
              "argument": {
                "type": "Literal",
                "value": 0,
                "start": 144,
                "end": 145
              },
              "start": 138,
              "end": 145
            },
            "start": 138,
            "end": 146
          }
        ],
        "start": 132,
        "end": 148
      },
      "start": 105,
      "end": 148
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "asyncArrowFunc",
            "start": 156,
            "end": 170
          },
          "init": {
            "type": "ArrowFunctionExpression",
            "generator": false,
            "id": null,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AwaitExpression",
                    "argument": {
                      "type": "Literal",
                      "value": 0,
                      "start": 212,
                      "end": 213
                    },
                    "start": 206,
                    "end": 213
                  },
                  "start": 206,
                  "end": 214
                }
              ],
              "start": 200,
              "end": 216
            },
            "async": true,
            "expression": false,
            "returnType": {
              "type": "TSTypeAnnotation",
              "typeAnnotation": {
                "type": "TSTypeReference",
                "typeName": {
                  "type": "Identifier",
                  "name": "Promise",
                  "start": 183,
                  "end": 190
                },
                "typeParameters": {
                  "type": "TSTypeParameterInstantiation",
                  "params": [
                    {
                      "type": "TSVoidKeyword",
                      "start": 191,
                      "end": 195
                    }
                  ],
                  "start": 190,
                  "end": 196
                },
                "start": 183,
                "end": 196
              },
              "start": 181,
              "end": 196
            },
            "start": 173,
            "end": 216
          },
          "start": 156,
          "end": 216
        }
      ],
      "kind": "const",
      "start": 150,
      "end": 216
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "asyncIIFE",
        "start": 233,
        "end": 242
      },
      "generator": false,
      "expression": false,
      "async": true,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AwaitExpression",
              "argument": {
                "type": "Literal",
                "value": 0,
                "start": 257,
                "end": 258
              },
              "start": 251,
              "end": 258
            },
            "start": 251,
            "end": 259
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AwaitExpression",
              "argument": {
                "type": "CallExpression",
                "callee": {
                  "type": "FunctionExpression",
                  "id": null,
                  "generator": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AwaitExpression",
                          "argument": {
                            "type": "Literal",
                            "value": 1,
                            "start": 320,
                            "end": 321
                          },
                          "start": 314,
                          "end": 321
                        },
                        "start": 314,
                        "end": 322
                      }
                    ],
                    "start": 304,
                    "end": 328
                  },
                  "async": true,
                  "expression": false,
                  "returnType": {
                    "type": "TSTypeAnnotation",
                    "typeAnnotation": {
                      "type": "TSTypeReference",
                      "typeName": {
                        "type": "Identifier",
                        "name": "Promise",
                        "start": 290,
                        "end": 297
                      },
                      "typeParameters": {
                        "type": "TSTypeParameterInstantiation",
                        "params": [
                          {
                            "type": "TSVoidKeyword",
                            "start": 298,
                            "end": 302
                          }
                        ],
                        "start": 297,
                        "end": 303
                      },
                      "start": 290,
                      "end": 303
                    },
                    "start": 288,
                    "end": 303
                  },
                  "start": 272,
                  "end": 328
                },
                "arguments": [],
                "optional": false,
                "start": 271,
                "end": 331
              },
              "start": 265,
              "end": 331
            },
            "start": 265,
            "end": 332
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AwaitExpression",
              "argument": {
                "type": "CallExpression",
                "callee": {
                  "type": "FunctionExpression",
                  "id": {
                    "type": "Identifier",
                    "name": "asyncNamedFunc",
                    "start": 364,
                    "end": 378
                  },
                  "generator": false,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AwaitExpression",
                          "argument": {
                            "type": "Literal",
                            "value": 1,
                            "start": 412,
                            "end": 413
                          },
                          "start": 406,
                          "end": 413
                        },
                        "start": 406,
                        "end": 414
                      }
                    ],
                    "start": 396,
                    "end": 420
                  },
                  "async": true,
                  "expression": false,
                  "returnType": {
                    "type": "TSTypeAnnotation",
                    "typeAnnotation": {
                      "type": "TSTypeReference",
                      "typeName": {
                        "type": "Identifier",
                        "name": "Promise",
                        "start": 382,
                        "end": 389
                      },
                      "typeParameters": {
                        "type": "TSTypeParameterInstantiation",
                        "params": [
                          {
                            "type": "TSVoidKeyword",
                            "start": 390,
                            "end": 394
                          }
                        ],
                        "start": 389,
                        "end": 395
                      },
                      "start": 382,
                      "end": 395
                    },
                    "start": 380,
                    "end": 395
                  },
                  "start": 349,
                  "end": 420
                },
                "arguments": [],
                "optional": false,
                "start": 348,
                "end": 423
              },
              "start": 342,
              "end": 423
            },
            "start": 342,
            "end": 424
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AwaitExpression",
              "argument": {
                "type": "CallExpression",
                "callee": {
                  "type": "ArrowFunctionExpression",
                  "generator": false,
                  "id": null,
                  "params": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AwaitExpression",
                          "argument": {
                            "type": "Literal",
                            "value": 1,
                            "start": 484,
                            "end": 485
                          },
                          "start": 478,
                          "end": 485
                        },
                        "start": 478,
                        "end": 486
                      }
                    ],
                    "start": 468,
                    "end": 492
                  },
                  "async": true,
                  "expression": false,
                  "returnType": {
                    "type": "TSTypeAnnotation",
                    "typeAnnotation": {
                      "type": "TSTypeReference",
                      "typeName": {
                        "type": "Identifier",
                        "name": "Promise",
                        "start": 451,
                        "end": 458
                      },
                      "typeParameters": {
                        "type": "TSTypeParameterInstantiation",
                        "params": [
                          {
                            "type": "TSVoidKeyword",
                            "start": 459,
                            "end": 463
                          }
                        ],
                        "start": 458,
                        "end": 464
                      },
                      "start": 451,
                      "end": 464
                    },
                    "start": 449,
                    "end": 464
                  },
                  "start": 441,
                  "end": 492
                },
                "arguments": [],
                "optional": false,
                "start": 440,
                "end": 495
              },
              "start": 434,
              "end": 495
            },
            "start": 434,
            "end": 496
          }
        ],
        "start": 245,
        "end": 498
      },
      "start": 218,
      "end": 498
    },
    {
      "type": "ClassDeclaration",
      "id": {
        "type": "Identifier",
        "name": "AsyncClass",
        "start": 506,
        "end": 516
      },
      "body": {
        "type": "ClassBody",
        "body": [
          {
            "type": "PropertyDefinition",
            "key": {
              "type": "Identifier",
              "name": "asyncPropFunc",
              "start": 523,
              "end": 536
            },
            "value": {
              "type": "FunctionExpression",
              "id": null,
              "generator": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "AwaitExpression",
                      "argument": {
                        "type": "Literal",
                        "value": 2,
                        "start": 587,
                        "end": 588
                      },
                      "start": 581,
                      "end": 588
                    },
                    "start": 581,
                    "end": 589
                  }
                ],
                "start": 571,
                "end": 595
              },
              "async": true,
              "expression": false,
              "returnType": {
                "type": "TSTypeAnnotation",
                "typeAnnotation": {
                  "type": "TSTypeReference",
                  "typeName": {
                    "type": "Identifier",
                    "name": "Promise",
                    "start": 557,
                    "end": 564
                  },
                  "typeParameters": {
                    "type": "TSTypeParameterInstantiation",
                    "params": [
                      {
                        "type": "TSVoidKeyword",
                        "start": 565,
                        "end": 569
                      }
                    ],
                    "start": 564,
                    "end": 570
                  },
                  "start": 557,
                  "end": 570
                },
                "start": 555,
                "end": 570
              },
              "start": 539,
              "end": 595
            },
            "computed": false,
            "static": false,
            "declare": false,
            "override": false,
            "start": 523,
            "end": 595
          },
          {
            "type": "PropertyDefinition",
            "key": {
              "type": "Identifier",
              "name": "asyncPropNamedFunc",
              "start": 605,
              "end": 623
            },
            "value": {
              "type": "FunctionExpression",
              "id": {
                "type": "Identifier",
                "name": "namedFunc",
                "start": 641,
                "end": 650
              },
              "generator": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "AwaitExpression",
                      "argument": {
                        "type": "Literal",
                        "value": 2,
                        "start": 684,
                        "end": 685
                      },
                      "start": 678,
                      "end": 685
                    },
                    "start": 678,
                    "end": 686
                  }
                ],
                "start": 668,
                "end": 692
              },
              "async": true,
              "expression": false,
              "returnType": {
                "type": "TSTypeAnnotation",
                "typeAnnotation": {
                  "type": "TSTypeReference",
                  "typeName": {
                    "type": "Identifier",
                    "name": "Promise",
                    "start": 654,
                    "end": 661
                  },
                  "typeParameters": {
                    "type": "TSTypeParameterInstantiation",
                    "params": [
                      {
                        "type": "TSVoidKeyword",
                        "start": 662,
                        "end": 666
                      }
                    ],
                    "start": 661,
                    "end": 667
                  },
                  "start": 654,
                  "end": 667
                },
                "start": 652,
                "end": 667
              },
              "start": 626,
              "end": 692
            },
            "computed": false,
            "static": false,
            "declare": false,
            "override": false,
            "start": 605,
            "end": 692
          },
          {
            "type": "PropertyDefinition",
            "key": {
              "type": "Identifier",
              "name": "asyncPropArrowFunc",
              "start": 698,
              "end": 716
            },
            "value": {
              "type": "ArrowFunctionExpression",
              "generator": false,
              "id": null,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "AwaitExpression",
                      "argument": {
                        "type": "Literal",
                        "value": 2,
                        "start": 762,
                        "end": 763
                      },
                      "start": 756,
                      "end": 763
                    },
                    "start": 756,
                    "end": 764
                  }
                ],
                "start": 746,
                "end": 770
              },
              "async": true,
              "expression": false,
              "returnType": {
                "type": "TSTypeAnnotation",
                "typeAnnotation": {
                  "type": "TSTypeReference",
                  "typeName": {
                    "type": "Identifier",
                    "name": "Promise",
                    "start": 729,
                    "end": 736
                  },
                  "typeParameters": {
                    "type": "TSTypeParameterInstantiation",
                    "params": [
                      {
                        "type": "TSVoidKeyword",
                        "start": 737,
                        "end": 741
                      }
                    ],
                    "start": 736,
                    "end": 742
                  },
                  "start": 729,
                  "end": 742
                },
                "start": 727,
                "end": 742
              },
              "start": 719,
              "end": 770
            },
            "computed": false,
            "static": false,
            "declare": false,
            "override": false,
            "start": 698,
            "end": 770
          },
          {
            "type": "MethodDefinition",
            "key": {
              "type": "Identifier",
              "name": "asyncMethod",
              "start": 782,
              "end": 793
            },
            "value": {
              "type": "FunctionExpression",
              "id": null,
              "generator": false,
              "expression": false,
              "async": true,
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "AwaitExpression",
                      "argument": {
                        "type": "Literal",
                        "value": 2,
                        "start": 827,
                        "end": 828
                      },
                      "start": 821,
                      "end": 828
                    },
                    "start": 821,
                    "end": 829
                  }
                ],
                "start": 811,
                "end": 835
              },
              "params": [],
              "returnType": {
                "type": "TSTypeAnnotation",
                "typeAnnotation": {
                  "type": "TSTypeReference",
                  "typeName": {
                    "type": "Identifier",
                    "name": "Promise",
                    "start": 797,
                    "end": 804
                  },
                  "typeParameters": {
                    "type": "TSTypeParameterInstantiation",
                    "params": [
                      {
                        "type": "TSVoidKeyword",
                        "start": 805,
                        "end": 809
                      }
                    ],
                    "start": 804,
                    "end": 810
                  },
                  "start": 797,
                  "end": 810
                },
                "start": 795,
                "end": 810
              },
              "start": 793,
              "end": 835
            },
            "computed": false,
            "static": false,
            "kind": "method",
            "override": false,
            "start": 776,
            "end": 835
          }
        ],
        "start": 517,
        "end": 837
      },
      "superClass": null,
      "start": 500,
      "end": 837
    }
  ],
  "sourceType": "script",
  "start": 60,
  "end": 838
}