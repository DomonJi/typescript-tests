{
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "test3",
        "start": 134,
        "end": 139
      },
      "generator": false,
      "expression": false,
      "async": true,
      "params": [
        {
          "type": "AssignmentPattern",
          "left": {
            "type": "Identifier",
            "name": "isError",
            "typeAnnotation": {
              "type": "TSTypeAnnotation",
              "typeAnnotation": {
                "type": "TSBooleanKeyword",
                "start": 149,
                "end": 156
              },
              "start": 147,
              "end": 156
            },
            "start": 140,
            "end": 156
          },
          "right": {
            "type": "Literal",
            "value": true,
            "start": 159,
            "end": 163
          },
          "start": 140,
          "end": 163
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "operator": "===",
              "left": {
                "type": "Identifier",
                "name": "isError",
                "start": 176,
                "end": 183
              },
              "right": {
                "type": "Literal",
                "value": true,
                "start": 188,
                "end": 192
              },
              "start": 176,
              "end": 192
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "Literal",
                    "value": 6,
                    "start": 212,
                    "end": 213
                  },
                  "start": 205,
                  "end": 214
                }
              ],
              "start": 194,
              "end": 221
            },
            "alternate": null,
            "start": 172,
            "end": 221
          }
        ],
        "start": 165,
        "end": 224
      },
      "start": 119,
      "end": 224
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "test4",
        "start": 311,
        "end": 316
      },
      "generator": false,
      "expression": false,
      "async": true,
      "params": [
        {
          "type": "AssignmentPattern",
          "left": {
            "type": "Identifier",
            "name": "isError",
            "typeAnnotation": {
              "type": "TSTypeAnnotation",
              "typeAnnotation": {
                "type": "TSBooleanKeyword",
                "start": 326,
                "end": 333
              },
              "start": 324,
              "end": 333
            },
            "start": 317,
            "end": 333
          },
          "right": {
            "type": "Literal",
            "value": true,
            "start": 336,
            "end": 340
          },
          "start": 317,
          "end": 340
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "operator": "===",
              "left": {
                "type": "Identifier",
                "name": "isError",
                "start": 355,
                "end": 362
              },
              "right": {
                "type": "Literal",
                "value": true,
                "start": 367,
                "end": 371
              },
              "start": 355,
              "end": 371
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "Identifier",
                    "name": "undefined",
                    "start": 391,
                    "end": 400
                  },
                  "start": 384,
                  "end": 401
                }
              ],
              "start": 373,
              "end": 408
            },
            "alternate": null,
            "start": 351,
            "end": 408
          }
        ],
        "start": 342,
        "end": 411
      },
      "start": 296,
      "end": 411
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "test5",
        "start": 497,
        "end": 502
      },
      "generator": false,
      "expression": false,
      "async": true,
      "params": [
        {
          "type": "AssignmentPattern",
          "left": {
            "type": "Identifier",
            "name": "isError",
            "typeAnnotation": {
              "type": "TSTypeAnnotation",
              "typeAnnotation": {
                "type": "TSBooleanKeyword",
                "start": 512,
                "end": 519
              },
              "start": 510,
              "end": 519
            },
            "start": 503,
            "end": 519
          },
          "right": {
            "type": "Literal",
            "value": true,
            "start": 522,
            "end": 526
          },
          "start": 503,
          "end": 526
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "operator": "===",
              "left": {
                "type": "Identifier",
                "name": "isError",
                "start": 575,
                "end": 582
              },
              "right": {
                "type": "Literal",
                "value": true,
                "start": 587,
                "end": 591
              },
              "start": 575,
              "end": 591
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "Identifier",
                    "name": "undefined",
                    "start": 611,
                    "end": 620
                  },
                  "start": 604,
                  "end": 621
                }
              ],
              "start": 593,
              "end": 628
            },
            "alternate": null,
            "start": 571,
            "end": 628
          }
        ],
        "start": 542,
        "end": 631
      },
      "returnType": {
        "type": "TSTypeAnnotation",
        "typeAnnotation": {
          "type": "TSTypeReference",
          "typeName": {
            "type": "Identifier",
            "name": "Promise",
            "start": 529,
            "end": 536
          },
          "typeParameters": {
            "type": "TSTypeParameterInstantiation",
            "params": [
              {
                "type": "TSAnyKeyword",
                "start": 537,
                "end": 540
              }
            ],
            "start": 536,
            "end": 541
          },
          "start": 529,
          "end": 541
        },
        "start": 527,
        "end": 541
      },
      "start": 482,
      "end": 631
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "test6",
        "start": 703,
        "end": 708
      },
      "generator": false,
      "expression": false,
      "async": true,
      "params": [
        {
          "type": "AssignmentPattern",
          "left": {
            "type": "Identifier",
            "name": "isError",
            "typeAnnotation": {
              "type": "TSTypeAnnotation",
              "typeAnnotation": {
                "type": "TSBooleanKeyword",
                "start": 718,
                "end": 725
              },
              "start": 716,
              "end": 725
            },
            "start": 709,
            "end": 725
          },
          "right": {
            "type": "Literal",
            "value": true,
            "start": 728,
            "end": 732
          },
          "start": 709,
          "end": 732
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "operator": "===",
              "left": {
                "type": "Identifier",
                "name": "isError",
                "start": 763,
                "end": 770
              },
              "right": {
                "type": "Literal",
                "value": true,
                "start": 775,
                "end": 779
              },
              "start": 763,
              "end": 779
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "Identifier",
                    "name": "undefined",
                    "start": 799,
                    "end": 808
                  },
                  "start": 792,
                  "end": 809
                }
              ],
              "start": 781,
              "end": 816
            },
            "alternate": null,
            "start": 759,
            "end": 816
          }
        ],
        "start": 751,
        "end": 819
      },
      "returnType": {
        "type": "TSTypeAnnotation",
        "typeAnnotation": {
          "type": "TSTypeReference",
          "typeName": {
            "type": "Identifier",
            "name": "Promise",
            "start": 735,
            "end": 742
          },
          "typeParameters": {
            "type": "TSTypeParameterInstantiation",
            "params": [
              {
                "type": "TSNumberKeyword",
                "start": 743,
                "end": 749
              }
            ],
            "start": 742,
            "end": 750
          },
          "start": 735,
          "end": 750
        },
        "start": 733,
        "end": 750
      },
      "start": 688,
      "end": 819
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "test7",
        "start": 925,
        "end": 930
      },
      "generator": false,
      "expression": false,
      "async": true,
      "params": [
        {
          "type": "AssignmentPattern",
          "left": {
            "type": "Identifier",
            "name": "isError",
            "typeAnnotation": {
              "type": "TSTypeAnnotation",
              "typeAnnotation": {
                "type": "TSBooleanKeyword",
                "start": 940,
                "end": 947
              },
              "start": 938,
              "end": 947
            },
            "start": 931,
            "end": 947
          },
          "right": {
            "type": "Literal",
            "value": true,
            "start": 950,
            "end": 954
          },
          "start": 931,
          "end": 954
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "operator": "===",
              "left": {
                "type": "Identifier",
                "name": "isError",
                "start": 968,
                "end": 975
              },
              "right": {
                "type": "Literal",
                "value": true,
                "start": 980,
                "end": 984
              },
              "start": 968,
              "end": 984
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ReturnStatement",
                  "argument": null,
                  "start": 997,
                  "end": 1004
                }
              ],
              "start": 986,
              "end": 1011
            },
            "alternate": null,
            "start": 964,
            "end": 1011
          }
        ],
        "start": 956,
        "end": 1014
      },
      "start": 910,
      "end": 1014
    }
  ],
  "sourceType": "script",
  "start": 119,
  "end": 1014
}