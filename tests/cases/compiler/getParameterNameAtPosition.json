{
  "type": "Program",
  "body": [
    {
      "type": "TSInterfaceDeclaration",
      "body": {
        "type": "TSInterfaceBody",
        "body": [
          {
            "type": "TSCallSignatureDeclaration",
            "params": [
              {
                "type": "RestElement",
                "argument": {
                  "type": "Identifier",
                  "name": "args",
                  "start": 104,
                  "end": 108
                },
                "typeAnnotation": {
                  "type": "TSTypeAnnotation",
                  "typeAnnotation": {
                    "type": "TSTypeReference",
                    "typeName": {
                      "type": "Identifier",
                      "name": "Y",
                      "start": 110,
                      "end": 111
                    },
                    "start": 110,
                    "end": 111
                  },
                  "start": 108,
                  "end": 111
                },
                "start": 101,
                "end": 111
              }
            ],
            "returnType": {
              "type": "TSTypeAnnotation",
              "typeAnnotation": {
                "type": "TSAnyKeyword",
                "start": 114,
                "end": 117
              },
              "start": 112,
              "end": 117
            },
            "start": 100,
            "end": 118
          }
        ],
        "start": 93,
        "end": 121
      },
      "id": {
        "type": "Identifier",
        "name": "Mock",
        "start": 54,
        "end": 58
      },
      "typeParameters": {
        "type": "TSTypeParameterDeclaration",
        "params": [
          {
            "type": "TSTypeParameter",
            "name": {
              "type": "Identifier",
              "name": "Y",
              "start": 59,
              "end": 60
            },
            "constraint": {
              "type": "TSArrayType",
              "elementType": {
                "type": "TSAnyKeyword",
                "start": 69,
                "end": 72
              },
              "start": 69,
              "end": 74
            },
            "start": 59,
            "end": 74
          }
        ],
        "start": 58,
        "end": 75
      },
      "extends": [
        {
          "type": "TSInterfaceHeritage",
          "expression": {
            "type": "Identifier",
            "name": "Function",
            "start": 84,
            "end": 92
          },
          "start": 84,
          "end": 92
        }
      ],
      "start": 44,
      "end": 121
    },
    {
      "type": "TSTypeAliasDeclaration",
      "id": {
        "type": "Identifier",
        "name": "Tester",
        "start": 128,
        "end": 134
      },
      "typeAnnotation": {
        "type": "TSFunctionType",
        "params": [
          {
            "type": "Identifier",
            "name": "opts",
            "typeAnnotation": {
              "type": "TSTypeAnnotation",
              "typeAnnotation": {
                "type": "TSAnyKeyword",
                "start": 144,
                "end": 147
              },
              "start": 142,
              "end": 147
            },
            "start": 138,
            "end": 147
          },
          {
            "type": "Identifier",
            "name": "done",
            "typeAnnotation": {
              "type": "TSTypeAnnotation",
              "typeAnnotation": {
                "type": "TSFunctionType",
                "params": [
                  {
                    "type": "RestElement",
                    "argument": {
                      "type": "Identifier",
                      "name": "args",
                      "start": 159,
                      "end": 163
                    },
                    "typeAnnotation": {
                      "type": "TSTypeAnnotation",
                      "typeAnnotation": {
                        "type": "TSArrayType",
                        "elementType": {
                          "type": "TSAnyKeyword",
                          "start": 165,
                          "end": 168
                        },
                        "start": 165,
                        "end": 170
                      },
                      "start": 163,
                      "end": 170
                    },
                    "start": 156,
                    "end": 170
                  }
                ],
                "returnType": {
                  "type": "TSTypeAnnotation",
                  "typeAnnotation": {
                    "type": "TSAnyKeyword",
                    "start": 175,
                    "end": 178
                  },
                  "start": 172,
                  "end": 178
                },
                "start": 155,
                "end": 178
              },
              "start": 153,
              "end": 178
            },
            "start": 149,
            "end": 178
          }
        ],
        "returnType": {
          "type": "TSTypeAnnotation",
          "typeAnnotation": {
            "type": "TSAnyKeyword",
            "start": 183,
            "end": 186
          },
          "start": 180,
          "end": 186
        },
        "start": 137,
        "end": 186
      },
      "start": 123,
      "end": 187
    },
    {
      "type": "TSDeclareFunction",
      "id": {
        "type": "Identifier",
        "name": "cases",
        "start": 206,
        "end": 211
      },
      "generator": false,
      "expression": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "name": "tester",
          "typeAnnotation": {
            "type": "TSTypeAnnotation",
            "typeAnnotation": {
              "type": "TSTypeReference",
              "typeName": {
                "type": "Identifier",
                "name": "Tester",
                "start": 220,
                "end": 226
              },
              "start": 220,
              "end": 226
            },
            "start": 218,
            "end": 226
          },
          "start": 212,
          "end": 226
        }
      ],
      "returnType": {
        "type": "TSTypeAnnotation",
        "typeAnnotation": {
          "type": "TSVoidKeyword",
          "start": 229,
          "end": 233
        },
        "start": 227,
        "end": 233
      },
      "declare": true,
      "start": 189,
      "end": 234
    },
    {
      "type": "TSDeclareFunction",
      "id": {
        "type": "Identifier",
        "name": "fn",
        "start": 253,
        "end": 255
      },
      "generator": false,
      "expression": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "name": "implementation",
          "typeAnnotation": {
            "type": "TSTypeAnnotation",
            "typeAnnotation": {
              "type": "TSFunctionType",
              "params": [
                {
                  "type": "RestElement",
                  "argument": {
                    "type": "Identifier",
                    "name": "args",
                    "start": 294,
                    "end": 298
                  },
                  "typeAnnotation": {
                    "type": "TSTypeAnnotation",
                    "typeAnnotation": {
                      "type": "TSTypeReference",
                      "typeName": {
                        "type": "Identifier",
                        "name": "Y",
                        "start": 300,
                        "end": 301
                      },
                      "start": 300,
                      "end": 301
                    },
                    "start": 298,
                    "end": 301
                  },
                  "start": 291,
                  "end": 301
                }
              ],
              "returnType": {
                "type": "TSTypeAnnotation",
                "typeAnnotation": {
                  "type": "TSAnyKeyword",
                  "start": 306,
                  "end": 309
                },
                "start": 303,
                "end": 309
              },
              "start": 290,
              "end": 309
            },
            "start": 288,
            "end": 309
          },
          "optional": true,
          "start": 273,
          "end": 309
        }
      ],
      "returnType": {
        "type": "TSTypeAnnotation",
        "typeAnnotation": {
          "type": "TSTypeReference",
          "typeName": {
            "type": "Identifier",
            "name": "Mock",
            "start": 312,
            "end": 316
          },
          "typeParameters": {
            "type": "TSTypeParameterInstantiation",
            "params": [
              {
                "type": "TSTypeReference",
                "typeName": {
                  "type": "Identifier",
                  "name": "Y",
                  "start": 317,
                  "end": 318
                },
                "start": 317,
                "end": 318
              }
            ],
            "start": 316,
            "end": 319
          },
          "start": 312,
          "end": 319
        },
        "start": 310,
        "end": 319
      },
      "declare": true,
      "typeParameters": {
        "type": "TSTypeParameterDeclaration",
        "params": [
          {
            "type": "TSTypeParameter",
            "name": {
              "type": "Identifier",
              "name": "Y",
              "start": 256,
              "end": 257
            },
            "constraint": {
              "type": "TSArrayType",
              "elementType": {
                "type": "TSAnyKeyword",
                "start": 266,
                "end": 269
              },
              "start": 266,
              "end": 271
            },
            "start": 256,
            "end": 271
          }
        ],
        "start": 255,
        "end": 272
      },
      "start": 236,
      "end": 320
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "cases",
          "start": 322,
          "end": 327
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "fn",
              "start": 328,
              "end": 330
            },
            "arguments": [
              {
                "type": "ArrowFunctionExpression",
                "generator": false,
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "opts",
                    "start": 331,
                    "end": 335
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [],
                  "start": 339,
                  "end": 342
                },
                "async": false,
                "expression": false,
                "start": 331,
                "end": 342
              }
            ],
            "optional": false,
            "start": 328,
            "end": 343
          }
        ],
        "optional": false,
        "start": 322,
        "end": 344
      },
      "start": 322,
      "end": 345
    }
  ],
  "sourceType": "script",
  "start": 44,
  "end": 347
}