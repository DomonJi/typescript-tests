{
  "type": "Program",
  "body": [
    {
      "type": "TSDeclareFunction",
      "id": {
        "type": "Identifier",
        "name": "use",
        "start": 17,
        "end": 20
      },
      "generator": false,
      "expression": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "name": "n",
          "typeAnnotation": {
            "type": "TSTypeAnnotation",
            "typeAnnotation": {
              "type": "TSNumberKeyword",
              "start": 24,
              "end": 30
            },
            "start": 22,
            "end": 30
          },
          "start": 21,
          "end": 30
        }
      ],
      "returnType": {
        "type": "TSTypeAnnotation",
        "typeAnnotation": {
          "type": "TSVoidKeyword",
          "start": 33,
          "end": 37
        },
        "start": 31,
        "end": 37
      },
      "declare": true,
      "start": 0,
      "end": 38
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "FunctionExpression",
          "id": null,
          "generator": false,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "Literal",
                  "value": "use strict",
                  "start": 58,
                  "end": 70
                },
                "directive": "use strict",
                "start": 58,
                "end": 70
              },
              {
                "type": "ForStatement",
                "init": {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "i",
                        "start": 83,
                        "end": 84
                      },
                      "init": {
                        "type": "Literal",
                        "value": 0,
                        "start": 87,
                        "end": 88
                      },
                      "start": 83,
                      "end": 88
                    }
                  ],
                  "kind": "let",
                  "start": 79,
                  "end": 88
                },
                "test": {
                  "type": "BinaryExpression",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "i",
                    "start": 90,
                    "end": 91
                  },
                  "right": {
                    "type": "Literal",
                    "value": 9,
                    "start": 94,
                    "end": 95
                  },
                  "start": 90,
                  "end": 95
                },
                "update": {
                  "type": "UpdateExpression",
                  "operator": "++",
                  "prefix": true,
                  "argument": {
                    "type": "Identifier",
                    "name": "i",
                    "start": 99,
                    "end": 100
                  },
                  "start": 97,
                  "end": 100
                },
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "ArrowFunctionExpression",
                          "generator": false,
                          "id": null,
                          "params": [],
                          "body": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "use",
                              "start": 116,
                              "end": 119
                            },
                            "arguments": [
                              {
                                "type": "UpdateExpression",
                                "operator": "++",
                                "prefix": true,
                                "argument": {
                                  "type": "Identifier",
                                  "name": "i",
                                  "start": 122,
                                  "end": 123
                                },
                                "start": 120,
                                "end": 123
                              }
                            ],
                            "optional": false,
                            "start": 116,
                            "end": 124
                          },
                          "async": false,
                          "expression": true,
                          "start": 110,
                          "end": 124
                        },
                        "arguments": [],
                        "optional": false,
                        "start": 109,
                        "end": 127
                      },
                      "start": 109,
                      "end": 128
                    }
                  ],
                  "start": 102,
                  "end": 133
                },
                "start": 74,
                "end": 133
              }
            ],
            "start": 53,
            "end": 136
          },
          "async": false,
          "expression": false,
          "start": 41,
          "end": 136
        },
        "arguments": [],
        "optional": false,
        "start": 40,
        "end": 139
      },
      "start": 40,
      "end": 140
    }
  ],
  "sourceType": "module",
  "start": 0,
  "end": 140
}