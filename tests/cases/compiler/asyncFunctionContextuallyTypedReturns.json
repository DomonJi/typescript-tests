{
  "type": "Program",
  "body": [
    {
      "type": "TSDeclareFunction",
      "id": {
        "type": "Identifier",
        "name": "f",
        "start": 52,
        "end": 53
      },
      "generator": false,
      "expression": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "name": "cb",
          "typeAnnotation": {
            "type": "TSTypeAnnotation",
            "typeAnnotation": {
              "type": "TSFunctionType",
              "params": [
                {
                  "type": "Identifier",
                  "name": "v",
                  "typeAnnotation": {
                    "type": "TSTypeAnnotation",
                    "typeAnnotation": {
                      "type": "TSBooleanKeyword",
                      "start": 62,
                      "end": 69
                    },
                    "start": 60,
                    "end": 69
                  },
                  "start": 59,
                  "end": 69
                }
              ],
              "returnType": {
                "type": "TSTypeAnnotation",
                "typeAnnotation": {
                  "type": "TSUnionType",
                  "types": [
                    {
                      "type": "TSTupleType",
                      "elementTypes": [
                        {
                          "type": "TSLiteralType",
                          "literal": {
                            "type": "Literal",
                            "value": 0,
                            "start": 75,
                            "end": 76
                          },
                          "start": 75,
                          "end": 76
                        }
                      ],
                      "start": 74,
                      "end": 77
                    },
                    {
                      "type": "TSTypeReference",
                      "typeName": {
                        "type": "Identifier",
                        "name": "PromiseLike",
                        "start": 80,
                        "end": 91
                      },
                      "typeParameters": {
                        "type": "TSTypeParameterInstantiation",
                        "params": [
                          {
                            "type": "TSTupleType",
                            "elementTypes": [
                              {
                                "type": "TSLiteralType",
                                "literal": {
                                  "type": "Literal",
                                  "value": 0,
                                  "start": 93,
                                  "end": 94
                                },
                                "start": 93,
                                "end": 94
                              }
                            ],
                            "start": 92,
                            "end": 95
                          }
                        ],
                        "start": 91,
                        "end": 96
                      },
                      "start": 80,
                      "end": 96
                    }
                  ],
                  "start": 74,
                  "end": 96
                },
                "start": 71,
                "end": 96
              },
              "start": 58,
              "end": 96
            },
            "start": 56,
            "end": 96
          },
          "start": 54,
          "end": 96
        }
      ],
      "returnType": {
        "type": "TSTypeAnnotation",
        "typeAnnotation": {
          "type": "TSVoidKeyword",
          "start": 99,
          "end": 103
        },
        "start": 97,
        "end": 103
      },
      "declare": true,
      "start": 35,
      "end": 104
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "f",
          "start": 106,
          "end": 107
        },
        "arguments": [
          {
            "type": "ArrowFunctionExpression",
            "generator": false,
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "v",
                "start": 108,
                "end": 109
              }
            ],
            "body": {
              "type": "ConditionalExpression",
              "test": {
                "type": "Identifier",
                "name": "v",
                "start": 113,
                "end": 114
              },
              "consequent": {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": 0,
                    "start": 118,
                    "end": 119
                  }
                ],
                "start": 117,
                "end": 120
              },
              "alternate": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "Promise",
                    "start": 123,
                    "end": 130
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "reject",
                    "start": 131,
                    "end": 137
                  },
                  "computed": false,
                  "optional": false,
                  "start": 123,
                  "end": 137
                },
                "arguments": [],
                "optional": false,
                "start": 123,
                "end": 139
              },
              "start": 113,
              "end": 139
            },
            "async": false,
            "expression": true,
            "start": 108,
            "end": 139
          }
        ],
        "optional": false,
        "start": 106,
        "end": 140
      },
      "start": 106,
      "end": 141
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "f",
          "start": 143,
          "end": 144
        },
        "arguments": [
          {
            "type": "ArrowFunctionExpression",
            "generator": false,
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "v",
                "start": 151,
                "end": 152
              }
            ],
            "body": {
              "type": "ConditionalExpression",
              "test": {
                "type": "Identifier",
                "name": "v",
                "start": 156,
                "end": 157
              },
              "consequent": {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "Literal",
                    "value": 0,
                    "start": 161,
                    "end": 162
                  }
                ],
                "start": 160,
                "end": 163
              },
              "alternate": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "Promise",
                    "start": 166,
                    "end": 173
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "reject",
                    "start": 174,
                    "end": 180
                  },
                  "computed": false,
                  "optional": false,
                  "start": 166,
                  "end": 180
                },
                "arguments": [],
                "optional": false,
                "start": 166,
                "end": 182
              },
              "start": 156,
              "end": 182
            },
            "async": true,
            "expression": true,
            "start": 145,
            "end": 182
          }
        ],
        "optional": false,
        "start": 143,
        "end": 183
      },
      "start": 143,
      "end": 184
    },
    {
      "type": "TSDeclareFunction",
      "id": {
        "type": "Identifier",
        "name": "g",
        "start": 205,
        "end": 206
      },
      "generator": false,
      "expression": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "name": "cb",
          "typeAnnotation": {
            "type": "TSTypeAnnotation",
            "typeAnnotation": {
              "type": "TSFunctionType",
              "params": [
                {
                  "type": "Identifier",
                  "name": "v",
                  "typeAnnotation": {
                    "type": "TSTypeAnnotation",
                    "typeAnnotation": {
                      "type": "TSBooleanKeyword",
                      "start": 215,
                      "end": 222
                    },
                    "start": 213,
                    "end": 222
                  },
                  "start": 212,
                  "end": 222
                }
              ],
              "returnType": {
                "type": "TSTypeAnnotation",
                "typeAnnotation": {
                  "type": "TSUnionType",
                  "types": [
                    {
                      "type": "TSLiteralType",
                      "literal": {
                        "type": "Literal",
                        "value": "contextuallyTypable",
                        "start": 227,
                        "end": 248
                      },
                      "start": 227,
                      "end": 248
                    },
                    {
                      "type": "TSTypeReference",
                      "typeName": {
                        "type": "Identifier",
                        "name": "PromiseLike",
                        "start": 251,
                        "end": 262
                      },
                      "typeParameters": {
                        "type": "TSTypeParameterInstantiation",
                        "params": [
                          {
                            "type": "TSLiteralType",
                            "literal": {
                              "type": "Literal",
                              "value": "contextuallyTypable",
                              "start": 263,
                              "end": 284
                            },
                            "start": 263,
                            "end": 284
                          }
                        ],
                        "start": 262,
                        "end": 285
                      },
                      "start": 251,
                      "end": 285
                    }
                  ],
                  "start": 227,
                  "end": 285
                },
                "start": 224,
                "end": 285
              },
              "start": 211,
              "end": 285
            },
            "start": 209,
            "end": 285
          },
          "start": 207,
          "end": 285
        }
      ],
      "returnType": {
        "type": "TSTypeAnnotation",
        "typeAnnotation": {
          "type": "TSVoidKeyword",
          "start": 288,
          "end": 292
        },
        "start": 286,
        "end": 292
      },
      "declare": true,
      "start": 188,
      "end": 293
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "g",
          "start": 295,
          "end": 296
        },
        "arguments": [
          {
            "type": "ArrowFunctionExpression",
            "generator": false,
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "v",
                "start": 297,
                "end": 298
              }
            ],
            "body": {
              "type": "ConditionalExpression",
              "test": {
                "type": "Identifier",
                "name": "v",
                "start": 302,
                "end": 303
              },
              "consequent": {
                "type": "Literal",
                "value": "contextuallyTypable",
                "start": 306,
                "end": 327
              },
              "alternate": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "Promise",
                    "start": 330,
                    "end": 337
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "reject",
                    "start": 338,
                    "end": 344
                  },
                  "computed": false,
                  "optional": false,
                  "start": 330,
                  "end": 344
                },
                "arguments": [],
                "optional": false,
                "start": 330,
                "end": 346
              },
              "start": 302,
              "end": 346
            },
            "async": false,
            "expression": true,
            "start": 297,
            "end": 346
          }
        ],
        "optional": false,
        "start": 295,
        "end": 347
      },
      "start": 295,
      "end": 348
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "g",
          "start": 350,
          "end": 351
        },
        "arguments": [
          {
            "type": "ArrowFunctionExpression",
            "generator": false,
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "v",
                "start": 358,
                "end": 359
              }
            ],
            "body": {
              "type": "ConditionalExpression",
              "test": {
                "type": "Identifier",
                "name": "v",
                "start": 363,
                "end": 364
              },
              "consequent": {
                "type": "Literal",
                "value": "contextuallyTypable",
                "start": 367,
                "end": 388
              },
              "alternate": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "Promise",
                    "start": 391,
                    "end": 398
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "reject",
                    "start": 399,
                    "end": 405
                  },
                  "computed": false,
                  "optional": false,
                  "start": 391,
                  "end": 405
                },
                "arguments": [],
                "optional": false,
                "start": 391,
                "end": 407
              },
              "start": 363,
              "end": 407
            },
            "async": true,
            "expression": true,
            "start": 352,
            "end": 407
          }
        ],
        "optional": false,
        "start": 350,
        "end": 408
      },
      "start": 350,
      "end": 409
    },
    {
      "type": "TSTypeAliasDeclaration",
      "id": {
        "type": "Identifier",
        "name": "MyCallback",
        "start": 418,
        "end": 428
      },
      "typeAnnotation": {
        "type": "TSFunctionType",
        "params": [
          {
            "type": "Identifier",
            "name": "thing",
            "typeAnnotation": {
              "type": "TSTypeAnnotation",
              "typeAnnotation": {
                "type": "TSStringKeyword",
                "start": 439,
                "end": 445
              },
              "start": 437,
              "end": 445
            },
            "start": 432,
            "end": 445
          }
        ],
        "returnType": {
          "type": "TSTypeAnnotation",
          "typeAnnotation": {
            "type": "TSVoidKeyword",
            "start": 450,
            "end": 454
          },
          "start": 447,
          "end": 454
        },
        "start": 431,
        "end": 454
      },
      "start": 413,
      "end": 455
    },
    {
      "type": "TSDeclareFunction",
      "id": {
        "type": "Identifier",
        "name": "h",
        "start": 474,
        "end": 475
      },
      "generator": false,
      "expression": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "name": "cb",
          "typeAnnotation": {
            "type": "TSTypeAnnotation",
            "typeAnnotation": {
              "type": "TSFunctionType",
              "params": [
                {
                  "type": "Identifier",
                  "name": "v",
                  "typeAnnotation": {
                    "type": "TSTypeAnnotation",
                    "typeAnnotation": {
                      "type": "TSBooleanKeyword",
                      "start": 484,
                      "end": 491
                    },
                    "start": 482,
                    "end": 491
                  },
                  "start": 481,
                  "end": 491
                }
              ],
              "returnType": {
                "type": "TSTypeAnnotation",
                "typeAnnotation": {
                  "type": "TSUnionType",
                  "types": [
                    {
                      "type": "TSTypeReference",
                      "typeName": {
                        "type": "Identifier",
                        "name": "MyCallback",
                        "start": 496,
                        "end": 506
                      },
                      "start": 496,
                      "end": 506
                    },
                    {
                      "type": "TSTypeReference",
                      "typeName": {
                        "type": "Identifier",
                        "name": "PromiseLike",
                        "start": 509,
                        "end": 520
                      },
                      "typeParameters": {
                        "type": "TSTypeParameterInstantiation",
                        "params": [
                          {
                            "type": "TSTypeReference",
                            "typeName": {
                              "type": "Identifier",
                              "name": "MyCallback",
                              "start": 521,
                              "end": 531
                            },
                            "start": 521,
                            "end": 531
                          }
                        ],
                        "start": 520,
                        "end": 532
                      },
                      "start": 509,
                      "end": 532
                    }
                  ],
                  "start": 496,
                  "end": 532
                },
                "start": 493,
                "end": 532
              },
              "start": 480,
              "end": 532
            },
            "start": 478,
            "end": 532
          },
          "start": 476,
          "end": 532
        }
      ],
      "returnType": {
        "type": "TSTypeAnnotation",
        "typeAnnotation": {
          "type": "TSVoidKeyword",
          "start": 535,
          "end": 539
        },
        "start": 533,
        "end": 539
      },
      "declare": true,
      "start": 457,
      "end": 540
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "h",
          "start": 542,
          "end": 543
        },
        "arguments": [
          {
            "type": "ArrowFunctionExpression",
            "generator": false,
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "v",
                "start": 544,
                "end": 545
              }
            ],
            "body": {
              "type": "ConditionalExpression",
              "test": {
                "type": "Identifier",
                "name": "v",
                "start": 549,
                "end": 550
              },
              "consequent": {
                "type": "ArrowFunctionExpression",
                "generator": false,
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "abc",
                    "start": 554,
                    "end": 557
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [],
                  "start": 562,
                  "end": 565
                },
                "async": false,
                "expression": false,
                "start": 553,
                "end": 565
              },
              "alternate": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "Promise",
                    "start": 568,
                    "end": 575
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "reject",
                    "start": 576,
                    "end": 582
                  },
                  "computed": false,
                  "optional": false,
                  "start": 568,
                  "end": 582
                },
                "arguments": [],
                "optional": false,
                "start": 568,
                "end": 584
              },
              "start": 549,
              "end": 584
            },
            "async": false,
            "expression": true,
            "start": 544,
            "end": 584
          }
        ],
        "optional": false,
        "start": 542,
        "end": 585
      },
      "start": 542,
      "end": 586
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "h",
          "start": 588,
          "end": 589
        },
        "arguments": [
          {
            "type": "ArrowFunctionExpression",
            "generator": false,
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "v",
                "start": 596,
                "end": 597
              }
            ],
            "body": {
              "type": "ConditionalExpression",
              "test": {
                "type": "Identifier",
                "name": "v",
                "start": 601,
                "end": 602
              },
              "consequent": {
                "type": "ArrowFunctionExpression",
                "generator": false,
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "def",
                    "start": 606,
                    "end": 609
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [],
                  "start": 614,
                  "end": 617
                },
                "async": false,
                "expression": false,
                "start": 605,
                "end": 617
              },
              "alternate": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "object": {
                    "type": "Identifier",
                    "name": "Promise",
                    "start": 620,
                    "end": 627
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "reject",
                    "start": 628,
                    "end": 634
                  },
                  "computed": false,
                  "optional": false,
                  "start": 620,
                  "end": 634
                },
                "arguments": [],
                "optional": false,
                "start": 620,
                "end": 636
              },
              "start": 601,
              "end": 636
            },
            "async": true,
            "expression": true,
            "start": 590,
            "end": 636
          }
        ],
        "optional": false,
        "start": 588,
        "end": 637
      },
      "start": 588,
      "end": 638
    }
  ],
  "sourceType": "script",
  "start": 35,
  "end": 640
}