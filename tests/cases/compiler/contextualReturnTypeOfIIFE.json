{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "test1",
            "typeAnnotation": {
              "type": "TSTypeAnnotation",
              "typeAnnotation": {
                "type": "TSTypeReference",
                "typeName": {
                  "type": "Identifier",
                  "name": "Promise",
                  "start": 32,
                  "end": 39
                },
                "typeParameters": {
                  "type": "TSTypeParameterInstantiation",
                  "params": [
                    {
                      "type": "TSTupleType",
                      "elementTypes": [
                        {
                          "type": "TSNamedTupleMember",
                          "elementType": {
                            "type": "TSNumberKeyword",
                            "start": 46,
                            "end": 52
                          },
                          "label": {
                            "type": "Identifier",
                            "name": "one",
                            "start": 41,
                            "end": 44
                          },
                          "optional": false,
                          "start": 41,
                          "end": 52
                        },
                        {
                          "type": "TSNamedTupleMember",
                          "elementType": {
                            "type": "TSStringKeyword",
                            "start": 59,
                            "end": 65
                          },
                          "label": {
                            "type": "Identifier",
                            "name": "two",
                            "start": 54,
                            "end": 57
                          },
                          "optional": false,
                          "start": 54,
                          "end": 65
                        }
                      ],
                      "start": 40,
                      "end": 66
                    }
                  ],
                  "start": 39,
                  "end": 67
                },
                "start": 32,
                "end": 67
              },
              "start": 30,
              "end": 67
            },
            "start": 25,
            "end": 67
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "ArrowFunctionExpression",
              "generator": false,
              "id": null,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "ArrayExpression",
                      "elements": [
                        {
                          "type": "Literal",
                          "value": 1,
                          "start": 98,
                          "end": 99
                        },
                        {
                          "type": "Literal",
                          "value": "two",
                          "start": 101,
                          "end": 106
                        }
                      ],
                      "start": 97,
                      "end": 107
                    },
                    "start": 90,
                    "end": 108
                  }
                ],
                "start": 83,
                "end": 111
              },
              "async": true,
              "expression": false,
              "start": 71,
              "end": 111
            },
            "arguments": [],
            "optional": false,
            "start": 70,
            "end": 114
          },
          "start": 25,
          "end": 114
        }
      ],
      "kind": "const",
      "start": 19,
      "end": 115
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "test2",
            "typeAnnotation": {
              "type": "TSTypeAnnotation",
              "typeAnnotation": {
                "type": "TSTypeReference",
                "typeName": {
                  "type": "Identifier",
                  "name": "Promise",
                  "start": 132,
                  "end": 139
                },
                "typeParameters": {
                  "type": "TSTypeParameterInstantiation",
                  "params": [
                    {
                      "type": "TSTupleType",
                      "elementTypes": [
                        {
                          "type": "TSNamedTupleMember",
                          "elementType": {
                            "type": "TSNumberKeyword",
                            "start": 146,
                            "end": 152
                          },
                          "label": {
                            "type": "Identifier",
                            "name": "one",
                            "start": 141,
                            "end": 144
                          },
                          "optional": false,
                          "start": 141,
                          "end": 152
                        },
                        {
                          "type": "TSNamedTupleMember",
                          "elementType": {
                            "type": "TSStringKeyword",
                            "start": 159,
                            "end": 165
                          },
                          "label": {
                            "type": "Identifier",
                            "name": "two",
                            "start": 154,
                            "end": 157
                          },
                          "optional": false,
                          "start": 154,
                          "end": 165
                        }
                      ],
                      "start": 140,
                      "end": 166
                    }
                  ],
                  "start": 139,
                  "end": 167
                },
                "start": 132,
                "end": 167
              },
              "start": 130,
              "end": 167
            },
            "start": 125,
            "end": 167
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Promise",
              "start": 174,
              "end": 181
            },
            "arguments": [
              {
                "type": "ArrowFunctionExpression",
                "generator": false,
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "resolve",
                    "start": 189,
                    "end": 196
                  }
                ],
                "body": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "resolve",
                    "start": 201,
                    "end": 208
                  },
                  "arguments": [
                    {
                      "type": "ArrayExpression",
                      "elements": [
                        {
                          "type": "Literal",
                          "value": 1,
                          "start": 210,
                          "end": 211
                        },
                        {
                          "type": "Literal",
                          "value": "two",
                          "start": 213,
                          "end": 218
                        }
                      ],
                      "start": 209,
                      "end": 219
                    }
                  ],
                  "optional": false,
                  "start": 201,
                  "end": 220
                },
                "async": false,
                "expression": true,
                "start": 188,
                "end": 220
              }
            ],
            "start": 170,
            "end": 224
          },
          "start": 125,
          "end": 224
        }
      ],
      "kind": "const",
      "start": 119,
      "end": 225
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "obj",
            "typeAnnotation": {
              "type": "TSTypeAnnotation",
              "typeAnnotation": {
                "type": "TSTypeLiteral",
                "members": [
                  {
                    "type": "TSPropertySignature",
                    "computed": false,
                    "key": {
                      "type": "Identifier",
                      "name": "foo",
                      "start": 242,
                      "end": 245
                    },
                    "typeAnnotation": {
                      "type": "TSTypeAnnotation",
                      "typeAnnotation": {
                        "type": "TSTupleType",
                        "elementTypes": [
                          {
                            "type": "TSNamedTupleMember",
                            "elementType": {
                              "type": "TSNumberKeyword",
                              "start": 253,
                              "end": 259
                            },
                            "label": {
                              "type": "Identifier",
                              "name": "one",
                              "start": 248,
                              "end": 251
                            },
                            "optional": false,
                            "start": 248,
                            "end": 259
                          },
                          {
                            "type": "TSNamedTupleMember",
                            "elementType": {
                              "type": "TSStringKeyword",
                              "start": 266,
                              "end": 272
                            },
                            "label": {
                              "type": "Identifier",
                              "name": "two",
                              "start": 261,
                              "end": 264
                            },
                            "optional": false,
                            "start": 261,
                            "end": 272
                          }
                        ],
                        "start": 247,
                        "end": 273
                      },
                      "start": 245,
                      "end": 273
                    },
                    "start": 242,
                    "end": 273
                  }
                ],
                "start": 240,
                "end": 275
              },
              "start": 238,
              "end": 275
            },
            "start": 235,
            "end": 275
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "foo",
                  "start": 285,
                  "end": 288
                },
                "value": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "ArrowFunctionExpression",
                    "generator": false,
                    "id": null,
                    "params": [],
                    "body": {
                      "type": "ArrayExpression",
                      "elements": [
                        {
                          "type": "Literal",
                          "value": 1,
                          "start": 298,
                          "end": 299
                        },
                        {
                          "type": "Literal",
                          "value": "two",
                          "start": 301,
                          "end": 306
                        }
                      ],
                      "start": 297,
                      "end": 307
                    },
                    "async": false,
                    "expression": true,
                    "start": 291,
                    "end": 307
                  },
                  "arguments": [],
                  "optional": false,
                  "start": 290,
                  "end": 310
                },
                "computed": false,
                "method": false,
                "shorthand": false,
                "kind": "init",
                "start": 285,
                "end": 310
              }
            ],
            "start": 278,
            "end": 313
          },
          "start": 235,
          "end": 313
        }
      ],
      "kind": "const",
      "start": 229,
      "end": 314
    }
  ],
  "sourceType": "module",
  "start": 19,
  "end": 316
}