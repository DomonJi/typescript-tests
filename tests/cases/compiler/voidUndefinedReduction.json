{
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "isDefined",
        "start": 53,
        "end": 62
      },
      "generator": false,
      "expression": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "name": "value",
          "typeAnnotation": {
            "type": "TSTypeAnnotation",
            "typeAnnotation": {
              "type": "TSUnionType",
              "types": [
                {
                  "type": "TSTypeReference",
                  "typeName": {
                    "type": "Identifier",
                    "name": "T",
                    "start": 73,
                    "end": 74
                  },
                  "start": 73,
                  "end": 74
                },
                {
                  "type": "TSUndefinedKeyword",
                  "start": 77,
                  "end": 86
                },
                {
                  "type": "TSNullKeyword",
                  "start": 89,
                  "end": 93
                },
                {
                  "type": "TSVoidKeyword",
                  "start": 96,
                  "end": 100
                }
              ],
              "start": 73,
              "end": 100
            },
            "start": 71,
            "end": 100
          },
          "start": 66,
          "end": 100
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "LogicalExpression",
              "operator": "&&",
              "left": {
                "type": "BinaryExpression",
                "operator": "!==",
                "left": {
                  "type": "Identifier",
                  "name": "value",
                  "start": 126,
                  "end": 131
                },
                "right": {
                  "type": "Identifier",
                  "name": "undefined",
                  "start": 136,
                  "end": 145
                },
                "start": 126,
                "end": 145
              },
              "right": {
                "type": "BinaryExpression",
                "operator": "!==",
                "left": {
                  "type": "Identifier",
                  "name": "value",
                  "start": 149,
                  "end": 154
                },
                "right": {
                  "type": "Literal",
                  "value": null,
                  "start": 159,
                  "end": 163
                },
                "start": 149,
                "end": 163
              },
              "start": 126,
              "end": 163
            },
            "start": 119,
            "end": 164
          }
        ],
        "start": 114,
        "end": 167
      },
      "returnType": {
        "type": "TSTypeAnnotation",
        "typeAnnotation": {
          "type": "TSTypePredicate",
          "asserts": false,
          "parameterName": {
            "type": "Identifier",
            "name": "value",
            "start": 103,
            "end": 108
          },
          "typeAnnotation": {
            "type": "TSTypeAnnotation",
            "typeAnnotation": {
              "type": "TSTypeReference",
              "typeName": {
                "type": "Identifier",
                "name": "T",
                "start": 112,
                "end": 113
              },
              "start": 112,
              "end": 113
            },
            "start": 112,
            "end": 113
          },
          "start": 103,
          "end": 113
        },
        "start": 101,
        "end": 113
      },
      "typeParameters": {
        "type": "TSTypeParameterDeclaration",
        "params": [
          {
            "type": "TSTypeParameter",
            "name": {
              "type": "Identifier",
              "name": "T",
              "start": 63,
              "end": 64
            },
            "start": 63,
            "end": 64
          }
        ],
        "start": 62,
        "end": 65
      },
      "start": 44,
      "end": 167
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "foo",
            "typeAnnotation": {
              "type": "TSTypeAnnotation",
              "typeAnnotation": {
                "type": "TSUnionType",
                "types": [
                  {
                    "type": "TSStringKeyword",
                    "start": 190,
                    "end": 196
                  },
                  {
                    "type": "TSUndefinedKeyword",
                    "start": 199,
                    "end": 208
                  }
                ],
                "start": 190,
                "end": 208
              },
              "start": 188,
              "end": 208
            },
            "start": 185,
            "end": 208
          },
          "init": null,
          "start": 185,
          "end": 208
        }
      ],
      "kind": "const",
      "declare": true,
      "start": 171,
      "end": 209
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "isDefined",
          "start": 217,
          "end": 226
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "foo",
            "start": 227,
            "end": 230
          }
        ],
        "optional": false,
        "start": 217,
        "end": 231
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "console",
                  "start": 238,
                  "end": 245
                },
                "property": {
                  "type": "Identifier",
                  "name": "log",
                  "start": 246,
                  "end": 249
                },
                "computed": false,
                "optional": false,
                "start": 238,
                "end": 249
              },
              "arguments": [
                {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "foo",
                      "start": 250,
                      "end": 253
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "toUpperCase",
                      "start": 254,
                      "end": 265
                    },
                    "computed": false,
                    "optional": false,
                    "start": 250,
                    "end": 265
                  },
                  "arguments": [],
                  "optional": false,
                  "start": 250,
                  "end": 267
                }
              ],
              "optional": false,
              "start": 238,
              "end": 268
            },
            "start": 238,
            "end": 269
          }
        ],
        "start": 233,
        "end": 273
      },
      "alternate": null,
      "start": 213,
      "end": 273
    }
  ],
  "sourceType": "script",
  "start": 44,
  "end": 275
}