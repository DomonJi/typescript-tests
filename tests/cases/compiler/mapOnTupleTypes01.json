{
  "type": "Program",
  "body": [
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "VariableDeclaration",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "mapOnLooseArrayLiteral",
              "start": 89,
              "end": 111
            },
            "init": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "ArrayExpression",
                  "elements": [
                    {
                      "type": "Literal",
                      "value": 1,
                      "start": 115,
                      "end": 116
                    },
                    {
                      "type": "Literal",
                      "value": 2,
                      "start": 118,
                      "end": 119
                    },
                    {
                      "type": "Literal",
                      "value": 3,
                      "start": 121,
                      "end": 122
                    },
                    {
                      "type": "Literal",
                      "value": 4,
                      "start": 124,
                      "end": 125
                    }
                  ],
                  "start": 114,
                  "end": 126
                },
                "property": {
                  "type": "Identifier",
                  "name": "map",
                  "start": 127,
                  "end": 130
                },
                "computed": false,
                "optional": false,
                "start": 114,
                "end": 130
              },
              "arguments": [
                {
                  "type": "ArrowFunctionExpression",
                  "generator": false,
                  "id": null,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "n",
                      "start": 131,
                      "end": 132
                    }
                  ],
                  "body": {
                    "type": "BinaryExpression",
                    "operator": "*",
                    "left": {
                      "type": "Identifier",
                      "name": "n",
                      "start": 136,
                      "end": 137
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "n",
                      "start": 140,
                      "end": 141
                    },
                    "start": 136,
                    "end": 141
                  },
                  "async": false,
                  "expression": true,
                  "start": 131,
                  "end": 141
                }
              ],
              "optional": false,
              "start": 114,
              "end": 142
            },
            "start": 89,
            "end": 142
          }
        ],
        "kind": "let",
        "start": 85,
        "end": 143
      },
      "specifiers": [],
      "source": null,
      "exportKind": "value",
      "assertions": [],
      "start": 78,
      "end": 143
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "numTuple",
            "typeAnnotation": {
              "type": "TSTypeAnnotation",
              "typeAnnotation": {
                "type": "TSTupleType",
                "elementTypes": [
                  {
                    "type": "TSNumberKeyword",
                    "start": 177,
                    "end": 183
                  }
                ],
                "start": 176,
                "end": 184
              },
              "start": 174,
              "end": 184
            },
            "start": 166,
            "end": 184
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": 1,
                "start": 188,
                "end": 189
              }
            ],
            "start": 187,
            "end": 190
          },
          "start": 166,
          "end": 190
        }
      ],
      "kind": "let",
      "start": 162,
      "end": 191
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "VariableDeclaration",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "a",
              "start": 204,
              "end": 205
            },
            "init": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "numTuple",
                  "start": 208,
                  "end": 216
                },
                "property": {
                  "type": "Identifier",
                  "name": "map",
                  "start": 217,
                  "end": 220
                },
                "computed": false,
                "optional": false,
                "start": 208,
                "end": 220
              },
              "arguments": [
                {
                  "type": "ArrowFunctionExpression",
                  "generator": false,
                  "id": null,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "x",
                      "start": 221,
                      "end": 222
                    }
                  ],
                  "body": {
                    "type": "BinaryExpression",
                    "operator": "*",
                    "left": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 226,
                      "end": 227
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 230,
                      "end": 231
                    },
                    "start": 226,
                    "end": 231
                  },
                  "async": false,
                  "expression": true,
                  "start": 221,
                  "end": 231
                }
              ],
              "optional": false,
              "start": 208,
              "end": 232
            },
            "start": 204,
            "end": 232
          }
        ],
        "kind": "let",
        "start": 200,
        "end": 233
      },
      "specifiers": [],
      "source": null,
      "exportKind": "value",
      "assertions": [],
      "start": 193,
      "end": 233
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "numNum",
            "typeAnnotation": {
              "type": "TSTypeAnnotation",
              "typeAnnotation": {
                "type": "TSTupleType",
                "elementTypes": [
                  {
                    "type": "TSNumberKeyword",
                    "start": 265,
                    "end": 271
                  },
                  {
                    "type": "TSNumberKeyword",
                    "start": 273,
                    "end": 279
                  }
                ],
                "start": 264,
                "end": 280
              },
              "start": 262,
              "end": 280
            },
            "start": 256,
            "end": 280
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": 100,
                "start": 288,
                "end": 291
              },
              {
                "type": "Literal",
                "value": 100,
                "start": 297,
                "end": 300
              }
            ],
            "start": 283,
            "end": 301
          },
          "start": 256,
          "end": 301
        }
      ],
      "kind": "let",
      "start": 252,
      "end": 302
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "strStr",
            "typeAnnotation": {
              "type": "TSTypeAnnotation",
              "typeAnnotation": {
                "type": "TSTupleType",
                "elementTypes": [
                  {
                    "type": "TSStringKeyword",
                    "start": 317,
                    "end": 323
                  },
                  {
                    "type": "TSStringKeyword",
                    "start": 325,
                    "end": 331
                  }
                ],
                "start": 316,
                "end": 332
              },
              "start": 314,
              "end": 332
            },
            "start": 308,
            "end": 332
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "hello",
                "start": 336,
                "end": 343
              },
              {
                "type": "Literal",
                "value": "hello",
                "start": 345,
                "end": 352
              }
            ],
            "start": 335,
            "end": 353
          },
          "start": 308,
          "end": 353
        }
      ],
      "kind": "let",
      "start": 304,
      "end": 354
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "numStr",
            "typeAnnotation": {
              "type": "TSTypeAnnotation",
              "typeAnnotation": {
                "type": "TSTupleType",
                "elementTypes": [
                  {
                    "type": "TSNumberKeyword",
                    "start": 369,
                    "end": 375
                  },
                  {
                    "type": "TSStringKeyword",
                    "start": 377,
                    "end": 383
                  }
                ],
                "start": 368,
                "end": 384
              },
              "start": 366,
              "end": 384
            },
            "start": 360,
            "end": 384
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": 100,
                "start": 392,
                "end": 395
              },
              {
                "type": "Literal",
                "value": "hello",
                "start": 397,
                "end": 404
              }
            ],
            "start": 387,
            "end": 405
          },
          "start": 360,
          "end": 405
        }
      ],
      "kind": "let",
      "start": 356,
      "end": 406
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "VariableDeclaration",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "b",
              "start": 421,
              "end": 422
            },
            "init": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "numNum",
                  "start": 425,
                  "end": 431
                },
                "property": {
                  "type": "Identifier",
                  "name": "map",
                  "start": 432,
                  "end": 435
                },
                "computed": false,
                "optional": false,
                "start": 425,
                "end": 435
              },
              "arguments": [
                {
                  "type": "ArrowFunctionExpression",
                  "generator": false,
                  "id": null,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "n",
                      "start": 436,
                      "end": 437
                    }
                  ],
                  "body": {
                    "type": "BinaryExpression",
                    "operator": "*",
                    "left": {
                      "type": "Identifier",
                      "name": "n",
                      "start": 441,
                      "end": 442
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "n",
                      "start": 445,
                      "end": 446
                    },
                    "start": 441,
                    "end": 446
                  },
                  "async": false,
                  "expression": true,
                  "start": 436,
                  "end": 446
                }
              ],
              "optional": false,
              "start": 425,
              "end": 447
            },
            "start": 421,
            "end": 447
          }
        ],
        "kind": "let",
        "start": 417,
        "end": 448
      },
      "specifiers": [],
      "source": null,
      "exportKind": "value",
      "assertions": [],
      "start": 410,
      "end": 448
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "VariableDeclaration",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "c",
              "start": 461,
              "end": 462
            },
            "init": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "strStr",
                  "start": 465,
                  "end": 471
                },
                "property": {
                  "type": "Identifier",
                  "name": "map",
                  "start": 472,
                  "end": 475
                },
                "computed": false,
                "optional": false,
                "start": 465,
                "end": 475
              },
              "arguments": [
                {
                  "type": "ArrowFunctionExpression",
                  "generator": false,
                  "id": null,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "s",
                      "start": 476,
                      "end": 477
                    }
                  ],
                  "body": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "s",
                        "start": 481,
                        "end": 482
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "charCodeAt",
                        "start": 483,
                        "end": 493
                      },
                      "computed": false,
                      "optional": false,
                      "start": 481,
                      "end": 493
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": 0,
                        "start": 494,
                        "end": 495
                      }
                    ],
                    "optional": false,
                    "start": 481,
                    "end": 496
                  },
                  "async": false,
                  "expression": true,
                  "start": 476,
                  "end": 496
                }
              ],
              "optional": false,
              "start": 465,
              "end": 497
            },
            "start": 461,
            "end": 497
          }
        ],
        "kind": "let",
        "start": 457,
        "end": 498
      },
      "specifiers": [],
      "source": null,
      "exportKind": "value",
      "assertions": [],
      "start": 450,
      "end": 498
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "VariableDeclaration",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "d",
              "start": 511,
              "end": 512
            },
            "init": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "numStr",
                  "start": 515,
                  "end": 521
                },
                "property": {
                  "type": "Identifier",
                  "name": "map",
                  "start": 522,
                  "end": 525
                },
                "computed": false,
                "optional": false,
                "start": 515,
                "end": 525
              },
              "arguments": [
                {
                  "type": "ArrowFunctionExpression",
                  "generator": false,
                  "id": null,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "x",
                      "start": 526,
                      "end": 527
                    }
                  ],
                  "body": {
                    "type": "Identifier",
                    "name": "x",
                    "start": 531,
                    "end": 532
                  },
                  "async": false,
                  "expression": true,
                  "start": 526,
                  "end": 532
                }
              ],
              "optional": false,
              "start": 515,
              "end": 533
            },
            "start": 511,
            "end": 533
          }
        ],
        "kind": "let",
        "start": 507,
        "end": 534
      },
      "specifiers": [],
      "source": null,
      "exportKind": "value",
      "assertions": [],
      "start": 500,
      "end": 534
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "numNumNum",
            "typeAnnotation": {
              "type": "TSTypeAnnotation",
              "typeAnnotation": {
                "type": "TSTupleType",
                "elementTypes": [
                  {
                    "type": "TSNumberKeyword",
                    "start": 569,
                    "end": 575
                  },
                  {
                    "type": "TSNumberKeyword",
                    "start": 577,
                    "end": 583
                  },
                  {
                    "type": "TSNumberKeyword",
                    "start": 585,
                    "end": 591
                  }
                ],
                "start": 568,
                "end": 592
              },
              "start": 566,
              "end": 592
            },
            "start": 557,
            "end": 592
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": 1,
                "start": 596,
                "end": 597
              },
              {
                "type": "Literal",
                "value": 2,
                "start": 599,
                "end": 600
              },
              {
                "type": "Literal",
                "value": 3,
                "start": 602,
                "end": 603
              }
            ],
            "start": 595,
            "end": 604
          },
          "start": 557,
          "end": 604
        }
      ],
      "kind": "let",
      "start": 553,
      "end": 605
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "VariableDeclaration",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "e",
              "start": 620,
              "end": 621
            },
            "init": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "numNumNum",
                  "start": 624,
                  "end": 633
                },
                "property": {
                  "type": "Identifier",
                  "name": "map",
                  "start": 634,
                  "end": 637
                },
                "computed": false,
                "optional": false,
                "start": 624,
                "end": 637
              },
              "arguments": [
                {
                  "type": "ArrowFunctionExpression",
                  "generator": false,
                  "id": null,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "n",
                      "start": 638,
                      "end": 639
                    }
                  ],
                  "body": {
                    "type": "BinaryExpression",
                    "operator": "*",
                    "left": {
                      "type": "Identifier",
                      "name": "n",
                      "start": 643,
                      "end": 644
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "n",
                      "start": 647,
                      "end": 648
                    },
                    "start": 643,
                    "end": 648
                  },
                  "async": false,
                  "expression": true,
                  "start": 638,
                  "end": 648
                }
              ],
              "optional": false,
              "start": 624,
              "end": 649
            },
            "start": 620,
            "end": 649
          }
        ],
        "kind": "let",
        "start": 616,
        "end": 650
      },
      "specifiers": [],
      "source": null,
      "exportKind": "value",
      "assertions": [],
      "start": 609,
      "end": 650
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "numNumNumNum",
            "typeAnnotation": {
              "type": "TSTypeAnnotation",
              "typeAnnotation": {
                "type": "TSTupleType",
                "elementTypes": [
                  {
                    "type": "TSNumberKeyword",
                    "start": 688,
                    "end": 694
                  },
                  {
                    "type": "TSNumberKeyword",
                    "start": 696,
                    "end": 702
                  },
                  {
                    "type": "TSNumberKeyword",
                    "start": 704,
                    "end": 710
                  },
                  {
                    "type": "TSNumberKeyword",
                    "start": 712,
                    "end": 718
                  }
                ],
                "start": 687,
                "end": 719
              },
              "start": 685,
              "end": 719
            },
            "start": 673,
            "end": 719
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": 1,
                "start": 723,
                "end": 724
              },
              {
                "type": "Literal",
                "value": 2,
                "start": 726,
                "end": 727
              },
              {
                "type": "Literal",
                "value": 3,
                "start": 729,
                "end": 730
              },
              {
                "type": "Literal",
                "value": 4,
                "start": 732,
                "end": 733
              }
            ],
            "start": 722,
            "end": 734
          },
          "start": 673,
          "end": 734
        }
      ],
      "kind": "let",
      "start": 669,
      "end": 735
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "VariableDeclaration",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "f",
              "start": 750,
              "end": 751
            },
            "init": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "numNumNumNum",
                  "start": 754,
                  "end": 766
                },
                "property": {
                  "type": "Identifier",
                  "name": "map",
                  "start": 767,
                  "end": 770
                },
                "computed": false,
                "optional": false,
                "start": 754,
                "end": 770
              },
              "arguments": [
                {
                  "type": "ArrowFunctionExpression",
                  "generator": false,
                  "id": null,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "n",
                      "start": 771,
                      "end": 772
                    }
                  ],
                  "body": {
                    "type": "BinaryExpression",
                    "operator": "*",
                    "left": {
                      "type": "Identifier",
                      "name": "n",
                      "start": 776,
                      "end": 777
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "n",
                      "start": 780,
                      "end": 781
                    },
                    "start": 776,
                    "end": 781
                  },
                  "async": false,
                  "expression": true,
                  "start": 771,
                  "end": 781
                }
              ],
              "optional": false,
              "start": 754,
              "end": 782
            },
            "start": 750,
            "end": 782
          }
        ],
        "kind": "let",
        "start": 746,
        "end": 783
      },
      "specifiers": [],
      "source": null,
      "exportKind": "value",
      "assertions": [],
      "start": 739,
      "end": 783
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "numNumNumNumNum",
            "typeAnnotation": {
              "type": "TSTypeAnnotation",
              "typeAnnotation": {
                "type": "TSTupleType",
                "elementTypes": [
                  {
                    "type": "TSNumberKeyword",
                    "start": 824,
                    "end": 830
                  },
                  {
                    "type": "TSNumberKeyword",
                    "start": 832,
                    "end": 838
                  },
                  {
                    "type": "TSNumberKeyword",
                    "start": 840,
                    "end": 846
                  },
                  {
                    "type": "TSNumberKeyword",
                    "start": 848,
                    "end": 854
                  },
                  {
                    "type": "TSNumberKeyword",
                    "start": 856,
                    "end": 862
                  }
                ],
                "start": 823,
                "end": 863
              },
              "start": 821,
              "end": 863
            },
            "start": 806,
            "end": 863
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": 1,
                "start": 867,
                "end": 868
              },
              {
                "type": "Literal",
                "value": 2,
                "start": 870,
                "end": 871
              },
              {
                "type": "Literal",
                "value": 3,
                "start": 873,
                "end": 874
              },
              {
                "type": "Literal",
                "value": 4,
                "start": 876,
                "end": 877
              },
              {
                "type": "Literal",
                "value": 5,
                "start": 879,
                "end": 880
              }
            ],
            "start": 866,
            "end": 881
          },
          "start": 806,
          "end": 881
        }
      ],
      "kind": "let",
      "start": 802,
      "end": 882
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "VariableDeclaration",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "g",
              "start": 897,
              "end": 898
            },
            "init": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "numNumNumNumNum",
                  "start": 901,
                  "end": 916
                },
                "property": {
                  "type": "Identifier",
                  "name": "map",
                  "start": 917,
                  "end": 920
                },
                "computed": false,
                "optional": false,
                "start": 901,
                "end": 920
              },
              "arguments": [
                {
                  "type": "ArrowFunctionExpression",
                  "generator": false,
                  "id": null,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "n",
                      "start": 921,
                      "end": 922
                    }
                  ],
                  "body": {
                    "type": "BinaryExpression",
                    "operator": "*",
                    "left": {
                      "type": "Identifier",
                      "name": "n",
                      "start": 926,
                      "end": 927
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "n",
                      "start": 930,
                      "end": 931
                    },
                    "start": 926,
                    "end": 931
                  },
                  "async": false,
                  "expression": true,
                  "start": 921,
                  "end": 931
                }
              ],
              "optional": false,
              "start": 901,
              "end": 932
            },
            "start": 897,
            "end": 932
          }
        ],
        "kind": "let",
        "start": 893,
        "end": 933
      },
      "specifiers": [],
      "source": null,
      "exportKind": "value",
      "assertions": [],
      "start": 886,
      "end": 933
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "numNumNumNumNumNum",
            "typeAnnotation": {
              "type": "TSTypeAnnotation",
              "typeAnnotation": {
                "type": "TSTupleType",
                "elementTypes": [
                  {
                    "type": "TSNumberKeyword",
                    "start": 979,
                    "end": 985
                  },
                  {
                    "type": "TSNumberKeyword",
                    "start": 987,
                    "end": 993
                  },
                  {
                    "type": "TSNumberKeyword",
                    "start": 995,
                    "end": 1001
                  },
                  {
                    "type": "TSNumberKeyword",
                    "start": 1003,
                    "end": 1009
                  },
                  {
                    "type": "TSNumberKeyword",
                    "start": 1011,
                    "end": 1017
                  },
                  {
                    "type": "TSNumberKeyword",
                    "start": 1019,
                    "end": 1025
                  }
                ],
                "start": 978,
                "end": 1026
              },
              "start": 976,
              "end": 1026
            },
            "start": 958,
            "end": 1026
          },
          "init": {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": 1,
                "start": 1030,
                "end": 1031
              },
              {
                "type": "Literal",
                "value": 2,
                "start": 1033,
                "end": 1034
              },
              {
                "type": "Literal",
                "value": 3,
                "start": 1036,
                "end": 1037
              },
              {
                "type": "Literal",
                "value": 4,
                "start": 1039,
                "end": 1040
              },
              {
                "type": "Literal",
                "value": 5,
                "start": 1042,
                "end": 1043
              },
              {
                "type": "Literal",
                "value": 6,
                "start": 1045,
                "end": 1046
              }
            ],
            "start": 1029,
            "end": 1047
          },
          "start": 958,
          "end": 1047
        }
      ],
      "kind": "let",
      "start": 954,
      "end": 1048
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "VariableDeclaration",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "h",
              "start": 1063,
              "end": 1064
            },
            "init": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "numNumNumNumNum",
                  "start": 1067,
                  "end": 1082
                },
                "property": {
                  "type": "Identifier",
                  "name": "map",
                  "start": 1083,
                  "end": 1086
                },
                "computed": false,
                "optional": false,
                "start": 1067,
                "end": 1086
              },
              "arguments": [
                {
                  "type": "ArrowFunctionExpression",
                  "generator": false,
                  "id": null,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "n",
                      "start": 1087,
                      "end": 1088
                    }
                  ],
                  "body": {
                    "type": "BinaryExpression",
                    "operator": "*",
                    "left": {
                      "type": "Identifier",
                      "name": "n",
                      "start": 1092,
                      "end": 1093
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "n",
                      "start": 1096,
                      "end": 1097
                    },
                    "start": 1092,
                    "end": 1097
                  },
                  "async": false,
                  "expression": true,
                  "start": 1087,
                  "end": 1097
                }
              ],
              "optional": false,
              "start": 1067,
              "end": 1098
            },
            "start": 1063,
            "end": 1098
          }
        ],
        "kind": "let",
        "start": 1059,
        "end": 1099
      },
      "specifiers": [],
      "source": null,
      "exportKind": "value",
      "assertions": [],
      "start": 1052,
      "end": 1099
    }
  ],
  "sourceType": "module",
  "start": 78,
  "end": 1099
}