{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "ArrayPattern",
            "elements": [],
            "start": 54,
            "end": 56
          },
          "init": {
            "type": "Literal",
            "value": null,
            "start": 59,
            "end": 63
          },
          "start": 54,
          "end": 63
        }
      ],
      "kind": "let",
      "start": 50,
      "end": 64
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "ObjectPattern",
            "properties": [],
            "start": 70,
            "end": 73
          },
          "init": {
            "type": "Literal",
            "value": null,
            "start": 76,
            "end": 80
          },
          "start": 70,
          "end": 80
        }
      ],
      "kind": "let",
      "start": 66,
      "end": 81
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "ObjectPattern",
          "properties": [],
          "start": 84,
          "end": 86
        },
        "right": {
          "type": "Literal",
          "value": null,
          "start": 89,
          "end": 93
        },
        "start": 84,
        "end": 93
      },
      "start": 83,
      "end": 95
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "ObjectPattern",
            "properties": [],
            "start": 101,
            "end": 104
          },
          "init": {
            "type": "Identifier",
            "name": "undefined",
            "start": 107,
            "end": 116
          },
          "start": 101,
          "end": 116
        }
      ],
      "kind": "let",
      "start": 97,
      "end": 117
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "ObjectPattern",
          "properties": [],
          "start": 120,
          "end": 122
        },
        "right": {
          "type": "Identifier",
          "name": "undefined",
          "start": 125,
          "end": 134
        },
        "start": 120,
        "end": 134
      },
      "start": 119,
      "end": 136
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "ObjectPattern",
            "properties": [],
            "start": 142,
            "end": 145
          },
          "init": {
            "type": "ConditionalExpression",
            "test": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Math",
                  "start": 148,
                  "end": 152
                },
                "property": {
                  "type": "Identifier",
                  "name": "random",
                  "start": 153,
                  "end": 159
                },
                "computed": false,
                "optional": false,
                "start": 148,
                "end": 159
              },
              "arguments": [],
              "optional": false,
              "start": 148,
              "end": 161
            },
            "consequent": {
              "type": "ObjectExpression",
              "properties": [],
              "start": 164,
              "end": 166
            },
            "alternate": {
              "type": "Literal",
              "value": null,
              "start": 169,
              "end": 173
            },
            "start": 148,
            "end": 173
          },
          "start": 142,
          "end": 173
        }
      ],
      "kind": "let",
      "start": 138,
      "end": 174
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "ObjectPattern",
          "properties": [],
          "start": 177,
          "end": 179
        },
        "right": {
          "type": "ConditionalExpression",
          "test": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Math",
                "start": 182,
                "end": 186
              },
              "property": {
                "type": "Identifier",
                "name": "random",
                "start": 187,
                "end": 193
              },
              "computed": false,
              "optional": false,
              "start": 182,
              "end": 193
            },
            "arguments": [],
            "optional": false,
            "start": 182,
            "end": 195
          },
          "consequent": {
            "type": "ObjectExpression",
            "properties": [],
            "start": 198,
            "end": 200
          },
          "alternate": {
            "type": "Literal",
            "value": null,
            "start": 203,
            "end": 207
          },
          "start": 182,
          "end": 207
        },
        "start": 177,
        "end": 207
      },
      "start": 176,
      "end": 209
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "ObjectPattern",
            "properties": [],
            "start": 215,
            "end": 218
          },
          "init": {
            "type": "ConditionalExpression",
            "test": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Math",
                  "start": 221,
                  "end": 225
                },
                "property": {
                  "type": "Identifier",
                  "name": "random",
                  "start": 226,
                  "end": 232
                },
                "computed": false,
                "optional": false,
                "start": 221,
                "end": 232
              },
              "arguments": [],
              "optional": false,
              "start": 221,
              "end": 234
            },
            "consequent": {
              "type": "ObjectExpression",
              "properties": [],
              "start": 237,
              "end": 239
            },
            "alternate": {
              "type": "Identifier",
              "name": "undefined",
              "start": 242,
              "end": 251
            },
            "start": 221,
            "end": 251
          },
          "start": 215,
          "end": 251
        }
      ],
      "kind": "let",
      "start": 211,
      "end": 252
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "ObjectPattern",
          "properties": [],
          "start": 255,
          "end": 257
        },
        "right": {
          "type": "ConditionalExpression",
          "test": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Math",
                "start": 260,
                "end": 264
              },
              "property": {
                "type": "Identifier",
                "name": "random",
                "start": 265,
                "end": 271
              },
              "computed": false,
              "optional": false,
              "start": 260,
              "end": 271
            },
            "arguments": [],
            "optional": false,
            "start": 260,
            "end": 273
          },
          "consequent": {
            "type": "ObjectExpression",
            "properties": [],
            "start": 276,
            "end": 278
          },
          "alternate": {
            "type": "Identifier",
            "name": "undefined",
            "start": 281,
            "end": 290
          },
          "start": 260,
          "end": 290
        },
        "start": 255,
        "end": 290
      },
      "start": 254,
      "end": 292
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "ObjectPattern",
            "properties": [],
            "start": 298,
            "end": 301
          },
          "init": {
            "type": "ConditionalExpression",
            "test": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "Math",
                  "start": 304,
                  "end": 308
                },
                "property": {
                  "type": "Identifier",
                  "name": "random",
                  "start": 309,
                  "end": 315
                },
                "computed": false,
                "optional": false,
                "start": 304,
                "end": 315
              },
              "arguments": [],
              "optional": false,
              "start": 304,
              "end": 317
            },
            "consequent": {
              "type": "Literal",
              "value": null,
              "start": 320,
              "end": 324
            },
            "alternate": {
              "type": "Identifier",
              "name": "undefined",
              "start": 327,
              "end": 336
            },
            "start": 304,
            "end": 336
          },
          "start": 298,
          "end": 336
        }
      ],
      "kind": "let",
      "start": 294,
      "end": 337
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "ObjectPattern",
          "properties": [],
          "start": 340,
          "end": 342
        },
        "right": {
          "type": "ConditionalExpression",
          "test": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "object": {
                "type": "Identifier",
                "name": "Math",
                "start": 345,
                "end": 349
              },
              "property": {
                "type": "Identifier",
                "name": "random",
                "start": 350,
                "end": 356
              },
              "computed": false,
              "optional": false,
              "start": 345,
              "end": 356
            },
            "arguments": [],
            "optional": false,
            "start": 345,
            "end": 358
          },
          "consequent": {
            "type": "Literal",
            "value": null,
            "start": 361,
            "end": 365
          },
          "alternate": {
            "type": "Identifier",
            "name": "undefined",
            "start": 368,
            "end": 377
          },
          "start": 345,
          "end": 377
        },
        "start": 340,
        "end": 377
      },
      "start": 339,
      "end": 379
    }
  ],
  "sourceType": "module",
  "start": 50,
  "end": 380
}