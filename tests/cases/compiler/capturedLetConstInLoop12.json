{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "FunctionExpression",
          "id": null,
          "generator": false,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "Literal",
                  "value": "use strict",
                  "start": 19,
                  "end": 31
                },
                "directive": "use strict",
                "start": 19,
                "end": 32
              },
              {
                "type": "ForStatement",
                "init": {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "i",
                        "start": 49,
                        "end": 50
                      },
                      "init": {
                        "type": "Literal",
                        "value": 0,
                        "start": 53,
                        "end": 54
                      },
                      "start": 49,
                      "end": 54
                    }
                  ],
                  "kind": "let",
                  "start": 45,
                  "end": 54
                },
                "test": {
                  "type": "BinaryExpression",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "i",
                    "start": 56,
                    "end": 57
                  },
                  "right": {
                    "type": "Literal",
                    "value": 4,
                    "start": 60,
                    "end": 61
                  },
                  "start": 56,
                  "end": 61
                },
                "update": {
                  "type": "UpdateExpression",
                  "operator": "++",
                  "prefix": false,
                  "argument": {
                    "type": "Identifier",
                    "name": "i",
                    "start": 63,
                    "end": 64
                  },
                  "start": 63,
                  "end": 66
                },
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "ArrowFunctionExpression",
                          "generator": false,
                          "id": null,
                          "params": [],
                          "body": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                              "type": "ArrayPattern",
                              "elements": [
                                {
                                  "type": "Identifier",
                                  "name": "i",
                                  "start": 87,
                                  "end": 88
                                }
                              ],
                              "start": 86,
                              "end": 89
                            },
                            "right": {
                              "type": "ArrayExpression",
                              "elements": [
                                {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "i",
                                    "start": 93,
                                    "end": 94
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": 1,
                                    "start": 97,
                                    "end": 98
                                  },
                                  "start": 93,
                                  "end": 98
                                }
                              ],
                              "start": 92,
                              "end": 99
                            },
                            "start": 86,
                            "end": 99
                          },
                          "async": false,
                          "expression": true,
                          "start": 80,
                          "end": 99
                        },
                        "arguments": [],
                        "optional": false,
                        "start": 79,
                        "end": 102
                      },
                      "start": 79,
                      "end": 103
                    }
                  ],
                  "start": 68,
                  "end": 110
                },
                "start": 40,
                "end": 110
              }
            ],
            "start": 12,
            "end": 113
          },
          "async": false,
          "expression": false,
          "start": 1,
          "end": 113
        },
        "arguments": [],
        "optional": false,
        "start": 0,
        "end": 116
      },
      "start": 0,
      "end": 117
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "FunctionExpression",
          "id": null,
          "generator": false,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "Literal",
                  "value": "use strict",
                  "start": 140,
                  "end": 152
                },
                "directive": "use strict",
                "start": 140,
                "end": 153
              },
              {
                "type": "ForStatement",
                "init": {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "i",
                        "start": 170,
                        "end": 171
                      },
                      "init": {
                        "type": "Literal",
                        "value": 0,
                        "start": 174,
                        "end": 175
                      },
                      "start": 170,
                      "end": 175
                    }
                  ],
                  "kind": "let",
                  "start": 166,
                  "end": 175
                },
                "test": {
                  "type": "BinaryExpression",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "i",
                    "start": 177,
                    "end": 178
                  },
                  "right": {
                    "type": "Literal",
                    "value": 4,
                    "start": 181,
                    "end": 182
                  },
                  "start": 177,
                  "end": 182
                },
                "update": {
                  "type": "UpdateExpression",
                  "operator": "++",
                  "prefix": false,
                  "argument": {
                    "type": "Identifier",
                    "name": "i",
                    "start": 184,
                    "end": 185
                  },
                  "start": 184,
                  "end": 187
                },
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "ArrowFunctionExpression",
                          "generator": false,
                          "id": null,
                          "params": [],
                          "body": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                              "type": "ObjectPattern",
                              "properties": [
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "a",
                                    "start": 209,
                                    "end": 210
                                  },
                                  "value": {
                                    "type": "Identifier",
                                    "name": "i",
                                    "start": 211,
                                    "end": 212
                                  },
                                  "computed": false,
                                  "method": false,
                                  "shorthand": false,
                                  "kind": "init",
                                  "start": 209,
                                  "end": 212
                                }
                              ],
                              "start": 208,
                              "end": 213
                            },
                            "right": {
                              "type": "ObjectExpression",
                              "properties": [
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "a",
                                    "start": 217,
                                    "end": 218
                                  },
                                  "value": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "i",
                                      "start": 219,
                                      "end": 220
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": 1,
                                      "start": 223,
                                      "end": 224
                                    },
                                    "start": 219,
                                    "end": 224
                                  },
                                  "computed": false,
                                  "method": false,
                                  "shorthand": false,
                                  "kind": "init",
                                  "start": 217,
                                  "end": 224
                                }
                              ],
                              "start": 216,
                              "end": 225
                            },
                            "start": 208,
                            "end": 225
                          },
                          "async": false,
                          "expression": true,
                          "start": 201,
                          "end": 226
                        },
                        "arguments": [],
                        "optional": false,
                        "start": 200,
                        "end": 229
                      },
                      "start": 200,
                      "end": 230
                    }
                  ],
                  "start": 189,
                  "end": 237
                },
                "start": 161,
                "end": 237
              }
            ],
            "start": 133,
            "end": 240
          },
          "async": false,
          "expression": false,
          "start": 122,
          "end": 240
        },
        "arguments": [],
        "optional": false,
        "start": 121,
        "end": 243
      },
      "start": 121,
      "end": 244
    }
  ],
  "sourceType": "script",
  "start": 0,
  "end": 244
}