{
  "type": "Program",
  "body": [
    {
      "type": "ClassDeclaration",
      "id": {
        "type": "Identifier",
        "name": "A",
        "start": 6,
        "end": 7
      },
      "body": {
        "type": "ClassBody",
        "body": [
          {
            "type": "MethodDefinition",
            "key": {
              "type": "Identifier",
              "name": "foo",
              "start": 10,
              "end": 13
            },
            "value": {
              "type": "FunctionExpression",
              "id": null,
              "generator": false,
              "expression": false,
              "async": false,
              "body": {
                "type": "BlockStatement",
                "body": [],
                "start": 16,
                "end": 19
              },
              "params": [],
              "start": 13,
              "end": 19
            },
            "computed": false,
            "static": false,
            "kind": "method",
            "override": false,
            "start": 10,
            "end": 19
          }
        ],
        "start": 8,
        "end": 21
      },
      "superClass": null,
      "start": 0,
      "end": 21
    },
    {
      "type": "ClassDeclaration",
      "id": {
        "type": "Identifier",
        "name": "B",
        "start": 29,
        "end": 30
      },
      "body": {
        "type": "ClassBody",
        "body": [
          {
            "type": "MethodDefinition",
            "key": {
              "type": "Identifier",
              "name": "bar",
              "start": 33,
              "end": 36
            },
            "value": {
              "type": "FunctionExpression",
              "id": null,
              "generator": false,
              "expression": false,
              "async": false,
              "body": {
                "type": "BlockStatement",
                "body": [],
                "start": 39,
                "end": 42
              },
              "params": [],
              "start": 36,
              "end": 42
            },
            "computed": false,
            "static": false,
            "kind": "method",
            "override": false,
            "start": 33,
            "end": 42
          }
        ],
        "start": 31,
        "end": 43
      },
      "superClass": null,
      "start": 23,
      "end": 43
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "f",
        "start": 54,
        "end": 55
      },
      "generator": false,
      "expression": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "name": "x",
          "start": 56,
          "end": 57
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "Identifier",
              "name": "x",
              "start": 68,
              "end": 69
            },
            "start": 61,
            "end": 70
          }
        ],
        "start": 59,
        "end": 72
      },
      "start": 45,
      "end": 72
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "g",
        "start": 83,
        "end": 84
      },
      "generator": false,
      "expression": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "name": "x",
          "start": 91,
          "end": 92
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "f",
                "start": 103,
                "end": 104
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "x",
                  "start": 105,
                  "end": 106
                }
              ],
              "optional": false,
              "start": 103,
              "end": 107
            },
            "start": 96,
            "end": 108
          }
        ],
        "start": 94,
        "end": 110
      },
      "typeParameters": {
        "type": "TSTypeParameterDeclaration",
        "params": [
          {
            "type": "TSTypeParameter",
            "name": {
              "type": "Identifier",
              "name": "T",
              "start": 85,
              "end": 86
            },
            "start": 85,
            "end": 86
          },
          {
            "type": "TSTypeParameter",
            "name": {
              "type": "Identifier",
              "name": "U",
              "start": 88,
              "end": 89
            },
            "start": 88,
            "end": 89
          }
        ],
        "start": 84,
        "end": 90
      },
      "start": 74,
      "end": 110
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "g",
          "start": 112,
          "end": 113
        },
        "arguments": [
          {
            "type": "Literal",
            "value": 7,
            "start": 120,
            "end": 121
          }
        ],
        "optional": false,
        "typeParameters": {
          "type": "TSTypeParameterInstantiation",
          "params": [
            {
              "type": "TSTypeReference",
              "typeName": {
                "type": "Identifier",
                "name": "A",
                "start": 114,
                "end": 115
              },
              "start": 114,
              "end": 115
            },
            {
              "type": "TSTypeReference",
              "typeName": {
                "type": "Identifier",
                "name": "B",
                "start": 117,
                "end": 118
              },
              "start": 117,
              "end": 118
            }
          ],
          "start": 113,
          "end": 119
        },
        "start": 112,
        "end": 122
      },
      "start": 112,
      "end": 122
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "f",
          "start": 126,
          "end": 127
        },
        "arguments": [
          {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "g",
              "start": 128,
              "end": 129
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 7,
                "start": 136,
                "end": 137
              }
            ],
            "optional": false,
            "typeParameters": {
              "type": "TSTypeParameterInstantiation",
              "params": [
                {
                  "type": "TSTypeReference",
                  "typeName": {
                    "type": "Identifier",
                    "name": "A",
                    "start": 130,
                    "end": 131
                  },
                  "start": 130,
                  "end": 131
                },
                {
                  "type": "TSTypeReference",
                  "typeName": {
                    "type": "Identifier",
                    "name": "B",
                    "start": 133,
                    "end": 134
                  },
                  "start": 133,
                  "end": 134
                }
              ],
              "start": 129,
              "end": 135
            },
            "start": 128,
            "end": 138
          }
        ],
        "optional": false,
        "start": 126,
        "end": 139
      },
      "start": 126,
      "end": 140
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "f",
          "start": 142,
          "end": 143
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "operator": "<",
            "left": {
              "type": "Identifier",
              "name": "g",
              "start": 144,
              "end": 145
            },
            "right": {
              "type": "Identifier",
              "name": "A",
              "start": 148,
              "end": 149
            },
            "start": 144,
            "end": 149
          },
          {
            "type": "BinaryExpression",
            "operator": ">",
            "left": {
              "type": "Identifier",
              "name": "B",
              "start": 151,
              "end": 152
            },
            "right": {
              "type": "Literal",
              "value": 7,
              "start": 155,
              "end": 156
            },
            "start": 151,
            "end": 156
          }
        ],
        "optional": false,
        "start": 142,
        "end": 157
      },
      "start": 142,
      "end": 158
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "f",
          "start": 160,
          "end": 161
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "operator": "<",
            "left": {
              "type": "Identifier",
              "name": "g",
              "start": 162,
              "end": 163
            },
            "right": {
              "type": "Identifier",
              "name": "A",
              "start": 166,
              "end": 167
            },
            "start": 162,
            "end": 167
          },
          {
            "type": "BinaryExpression",
            "operator": ">",
            "left": {
              "type": "Identifier",
              "name": "B",
              "start": 169,
              "end": 170
            },
            "right": {
              "type": "UnaryExpression",
              "operator": "+",
              "prefix": true,
              "argument": {
                "type": "Literal",
                "value": 7,
                "start": 175,
                "end": 176
              },
              "start": 173,
              "end": 177
            },
            "start": 169,
            "end": 177
          }
        ],
        "optional": false,
        "start": 160,
        "end": 178
      },
      "start": 160,
      "end": 179
    }
  ],
  "sourceType": "module",
  "start": 0,
  "end": 181
}