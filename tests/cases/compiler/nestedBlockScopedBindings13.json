{
  "type": "Program",
  "body": [
    {
      "type": "ForStatement",
      "init": null,
      "test": {
        "type": "Literal",
        "value": false,
        "start": 7,
        "end": 12
      },
      "update": null,
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "x",
                  "start": 26,
                  "end": 27
                },
                "init": null,
                "start": 26,
                "end": 27
              }
            ],
            "kind": "let",
            "start": 22,
            "end": 28
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "ArrowFunctionExpression",
              "generator": false,
              "id": null,
              "params": [],
              "body": {
                "type": "Identifier",
                "name": "x",
                "start": 40,
                "end": 41
              },
              "async": false,
              "expression": true,
              "start": 34,
              "end": 41
            },
            "start": 34,
            "end": 42
          }
        ],
        "start": 15,
        "end": 45
      },
      "start": 0,
      "end": 45
    },
    {
      "type": "ForStatement",
      "init": null,
      "test": {
        "type": "Literal",
        "value": false,
        "start": 56,
        "end": 61
      },
      "update": null,
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "y",
                  "start": 75,
                  "end": 76
                },
                "init": null,
                "start": 75,
                "end": 76
              }
            ],
            "kind": "let",
            "start": 71,
            "end": 77
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "Identifier",
                "name": "y",
                "start": 83,
                "end": 84
              },
              "right": {
                "type": "Literal",
                "value": 1,
                "start": 87,
                "end": 88
              },
              "start": 83,
              "end": 88
            },
            "start": 83,
            "end": 89
          }
        ],
        "start": 64,
        "end": 92
      },
      "start": 49,
      "end": 92
    }
  ],
  "sourceType": "module",
  "start": 0,
  "end": 92
}