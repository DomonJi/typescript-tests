{
  "type": "Program",
  "body": [
    {
      "type": "TSTypeAliasDeclaration",
      "id": {
        "type": "Identifier",
        "name": "Kind",
        "start": 30,
        "end": 34
      },
      "typeAnnotation": {
        "type": "TSUnionType",
        "types": [
          {
            "type": "TSLiteralType",
            "literal": {
              "type": "Literal",
              "value": "A",
              "start": 37,
              "end": 40
            },
            "start": 37,
            "end": 40
          },
          {
            "type": "TSLiteralType",
            "literal": {
              "type": "Literal",
              "value": "B",
              "start": 43,
              "end": 46
            },
            "start": 43,
            "end": 46
          }
        ],
        "start": 37,
        "end": 46
      },
      "start": 25,
      "end": 46
    },
    {
      "type": "TSDeclareFunction",
      "id": {
        "type": "Identifier",
        "name": "kindIs",
        "start": 59,
        "end": 65
      },
      "generator": false,
      "expression": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "name": "kind",
          "typeAnnotation": {
            "type": "TSTypeAnnotation",
            "typeAnnotation": {
              "type": "TSTypeReference",
              "typeName": {
                "type": "Identifier",
                "name": "Kind",
                "start": 72,
                "end": 76
              },
              "start": 72,
              "end": 76
            },
            "start": 70,
            "end": 76
          },
          "start": 66,
          "end": 76
        },
        {
          "type": "Identifier",
          "name": "is",
          "typeAnnotation": {
            "type": "TSTypeAnnotation",
            "typeAnnotation": {
              "type": "TSLiteralType",
              "literal": {
                "type": "Literal",
                "value": "A",
                "start": 82,
                "end": 85
              },
              "start": 82,
              "end": 85
            },
            "start": 80,
            "end": 85
          },
          "start": 78,
          "end": 85
        }
      ],
      "returnType": {
        "type": "TSTypeAnnotation",
        "typeAnnotation": {
          "type": "TSTypePredicate",
          "asserts": false,
          "parameterName": {
            "type": "Identifier",
            "name": "kind",
            "start": 88,
            "end": 92
          },
          "typeAnnotation": {
            "type": "TSTypeAnnotation",
            "typeAnnotation": {
              "type": "TSLiteralType",
              "literal": {
                "type": "Literal",
                "value": "A",
                "start": 96,
                "end": 99
              },
              "start": 96,
              "end": 99
            },
            "start": 96,
            "end": 99
          },
          "start": 88,
          "end": 99
        },
        "start": 86,
        "end": 99
      },
      "start": 50,
      "end": 100
    },
    {
      "type": "TSDeclareFunction",
      "id": {
        "type": "Identifier",
        "name": "kindIs",
        "start": 111,
        "end": 117
      },
      "generator": false,
      "expression": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "name": "kind",
          "typeAnnotation": {
            "type": "TSTypeAnnotation",
            "typeAnnotation": {
              "type": "TSTypeReference",
              "typeName": {
                "type": "Identifier",
                "name": "Kind",
                "start": 124,
                "end": 128
              },
              "start": 124,
              "end": 128
            },
            "start": 122,
            "end": 128
          },
          "start": 118,
          "end": 128
        },
        {
          "type": "Identifier",
          "name": "is",
          "typeAnnotation": {
            "type": "TSTypeAnnotation",
            "typeAnnotation": {
              "type": "TSLiteralType",
              "literal": {
                "type": "Literal",
                "value": "B",
                "start": 134,
                "end": 137
              },
              "start": 134,
              "end": 137
            },
            "start": 132,
            "end": 137
          },
          "start": 130,
          "end": 137
        }
      ],
      "returnType": {
        "type": "TSTypeAnnotation",
        "typeAnnotation": {
          "type": "TSTypePredicate",
          "asserts": false,
          "parameterName": {
            "type": "Identifier",
            "name": "kind",
            "start": 140,
            "end": 144
          },
          "typeAnnotation": {
            "type": "TSTypeAnnotation",
            "typeAnnotation": {
              "type": "TSLiteralType",
              "literal": {
                "type": "Literal",
                "value": "B",
                "start": 148,
                "end": 151
              },
              "start": 148,
              "end": 151
            },
            "start": 148,
            "end": 151
          },
          "start": 140,
          "end": 151
        },
        "start": 138,
        "end": 151
      },
      "start": 102,
      "end": 152
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "kindIs",
        "start": 163,
        "end": 169
      },
      "generator": false,
      "expression": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "name": "kind",
          "typeAnnotation": {
            "type": "TSTypeAnnotation",
            "typeAnnotation": {
              "type": "TSTypeReference",
              "typeName": {
                "type": "Identifier",
                "name": "Kind",
                "start": 176,
                "end": 180
              },
              "start": 176,
              "end": 180
            },
            "start": 174,
            "end": 180
          },
          "start": 170,
          "end": 180
        },
        {
          "type": "Identifier",
          "name": "is",
          "typeAnnotation": {
            "type": "TSTypeAnnotation",
            "typeAnnotation": {
              "type": "TSTypeReference",
              "typeName": {
                "type": "Identifier",
                "name": "Kind",
                "start": 186,
                "end": 190
              },
              "start": 186,
              "end": 190
            },
            "start": 184,
            "end": 190
          },
          "start": 182,
          "end": 190
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "BinaryExpression",
              "operator": "===",
              "left": {
                "type": "Identifier",
                "name": "kind",
                "start": 215,
                "end": 219
              },
              "right": {
                "type": "Identifier",
                "name": "is",
                "start": 224,
                "end": 226
              },
              "start": 215,
              "end": 226
            },
            "start": 208,
            "end": 227
          }
        ],
        "start": 201,
        "end": 230
      },
      "returnType": {
        "type": "TSTypeAnnotation",
        "typeAnnotation": {
          "type": "TSBooleanKeyword",
          "start": 193,
          "end": 200
        },
        "start": 191,
        "end": 200
      },
      "start": 154,
      "end": 230
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "typeAnnotation": {
              "type": "TSTypeAnnotation",
              "typeAnnotation": {
                "type": "TSTypeReference",
                "typeName": {
                  "type": "Identifier",
                  "name": "Kind",
                  "start": 241,
                  "end": 245
                },
                "start": 241,
                "end": 245
              },
              "start": 239,
              "end": 245
            },
            "start": 238,
            "end": 245
          },
          "init": {
            "type": "Identifier",
            "name": "undefined",
            "start": 248,
            "end": 257
          },
          "start": 238,
          "end": 257
        }
      ],
      "kind": "var",
      "start": 234,
      "end": 258
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "kindIs",
          "start": 266,
          "end": 272
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "x",
            "start": 273,
            "end": 274
          },
          {
            "type": "Literal",
            "value": "A",
            "start": 276,
            "end": 279
          }
        ],
        "optional": false,
        "start": 266,
        "end": 280
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "a",
                  "start": 293,
                  "end": 294
                },
                "init": {
                  "type": "Identifier",
                  "name": "x",
                  "start": 297,
                  "end": 298
                },
                "start": 293,
                "end": 298
              }
            ],
            "kind": "let",
            "start": 289,
            "end": 299
          }
        ],
        "start": 282,
        "end": 302
      },
      "alternate": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "b",
                  "start": 320,
                  "end": 321
                },
                "init": {
                  "type": "Identifier",
                  "name": "x",
                  "start": 324,
                  "end": 325
                },
                "start": 320,
                "end": 325
              }
            ],
            "kind": "let",
            "start": 316,
            "end": 326
          }
        ],
        "start": 309,
        "end": 329
      },
      "start": 262,
      "end": 329
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "UnaryExpression",
        "operator": "!",
        "prefix": true,
        "argument": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "kindIs",
            "start": 338,
            "end": 344
          },
          "arguments": [
            {
              "type": "Identifier",
              "name": "x",
              "start": 345,
              "end": 346
            },
            {
              "type": "Literal",
              "value": "B",
              "start": 348,
              "end": 351
            }
          ],
          "optional": false,
          "start": 338,
          "end": 352
        },
        "start": 337,
        "end": 352
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "c",
                  "start": 365,
                  "end": 366
                },
                "init": {
                  "type": "Identifier",
                  "name": "x",
                  "start": 369,
                  "end": 370
                },
                "start": 365,
                "end": 370
              }
            ],
            "kind": "let",
            "start": 361,
            "end": 371
          }
        ],
        "start": 354,
        "end": 374
      },
      "alternate": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "d",
                  "start": 392,
                  "end": 393
                },
                "init": {
                  "type": "Identifier",
                  "name": "x",
                  "start": 396,
                  "end": 397
                },
                "start": 392,
                "end": 397
              }
            ],
            "kind": "let",
            "start": 388,
            "end": 398
          }
        ],
        "start": 381,
        "end": 401
      },
      "start": 333,
      "end": 401
    }
  ],
  "sourceType": "script",
  "start": 25,
  "end": 401
}