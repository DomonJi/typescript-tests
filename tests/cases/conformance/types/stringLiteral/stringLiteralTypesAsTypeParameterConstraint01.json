{
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "foo",
        "start": 35,
        "end": 38
      },
      "generator": false,
      "expression": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "name": "f",
          "typeAnnotation": {
            "type": "TSTypeAnnotation",
            "typeAnnotation": {
              "type": "TSFunctionType",
              "params": [
                {
                  "type": "Identifier",
                  "name": "x",
                  "typeAnnotation": {
                    "type": "TSTypeAnnotation",
                    "typeAnnotation": {
                      "type": "TSTypeReference",
                      "typeName": {
                        "type": "Identifier",
                        "name": "T",
                        "start": 63,
                        "end": 64
                      },
                      "start": 63,
                      "end": 64
                    },
                    "start": 61,
                    "end": 64
                  },
                  "start": 60,
                  "end": 64
                }
              ],
              "returnType": {
                "type": "TSTypeAnnotation",
                "typeAnnotation": {
                  "type": "TSTypeReference",
                  "typeName": {
                    "type": "Identifier",
                    "name": "T",
                    "start": 69,
                    "end": 70
                  },
                  "start": 69,
                  "end": 70
                },
                "start": 66,
                "end": 70
              },
              "start": 59,
              "end": 70
            },
            "start": 57,
            "end": 70
          },
          "start": 56,
          "end": 70
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "Identifier",
              "name": "f",
              "start": 86,
              "end": 87
            },
            "start": 79,
            "end": 88
          }
        ],
        "start": 72,
        "end": 91
      },
      "typeParameters": {
        "type": "TSTypeParameterDeclaration",
        "params": [
          {
            "type": "TSTypeParameter",
            "name": {
              "type": "Identifier",
              "name": "T",
              "start": 39,
              "end": 40
            },
            "constraint": {
              "type": "TSLiteralType",
              "literal": {
                "type": "Literal",
                "value": "foo",
                "start": 49,
                "end": 54
              },
              "start": 49,
              "end": 54
            },
            "start": 39,
            "end": 54
          }
        ],
        "start": 38,
        "end": 55
      },
      "start": 26,
      "end": 91
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "bar",
        "start": 104,
        "end": 107
      },
      "generator": false,
      "expression": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "name": "f",
          "typeAnnotation": {
            "type": "TSTypeAnnotation",
            "typeAnnotation": {
              "type": "TSFunctionType",
              "params": [
                {
                  "type": "Identifier",
                  "name": "x",
                  "typeAnnotation": {
                    "type": "TSTypeAnnotation",
                    "typeAnnotation": {
                      "type": "TSTypeReference",
                      "typeName": {
                        "type": "Identifier",
                        "name": "T",
                        "start": 140,
                        "end": 141
                      },
                      "start": 140,
                      "end": 141
                    },
                    "start": 138,
                    "end": 141
                  },
                  "start": 137,
                  "end": 141
                }
              ],
              "returnType": {
                "type": "TSTypeAnnotation",
                "typeAnnotation": {
                  "type": "TSTypeReference",
                  "typeName": {
                    "type": "Identifier",
                    "name": "T",
                    "start": 146,
                    "end": 147
                  },
                  "start": 146,
                  "end": 147
                },
                "start": 143,
                "end": 147
              },
              "start": 136,
              "end": 147
            },
            "start": 134,
            "end": 147
          },
          "start": 133,
          "end": 147
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "Identifier",
              "name": "f",
              "start": 163,
              "end": 164
            },
            "start": 156,
            "end": 165
          }
        ],
        "start": 149,
        "end": 168
      },
      "typeParameters": {
        "type": "TSTypeParameterDeclaration",
        "params": [
          {
            "type": "TSTypeParameter",
            "name": {
              "type": "Identifier",
              "name": "T",
              "start": 108,
              "end": 109
            },
            "constraint": {
              "type": "TSUnionType",
              "types": [
                {
                  "type": "TSLiteralType",
                  "literal": {
                    "type": "Literal",
                    "value": "foo",
                    "start": 118,
                    "end": 123
                  },
                  "start": 118,
                  "end": 123
                },
                {
                  "type": "TSLiteralType",
                  "literal": {
                    "type": "Literal",
                    "value": "bar",
                    "start": 126,
                    "end": 131
                  },
                  "start": 126,
                  "end": 131
                }
              ],
              "start": 118,
              "end": 131
            },
            "start": 108,
            "end": 131
          }
        ],
        "start": 107,
        "end": 132
      },
      "start": 95,
      "end": 168
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "f",
            "start": 176,
            "end": 177
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "foo",
              "start": 180,
              "end": 183
            },
            "arguments": [
              {
                "type": "ArrowFunctionExpression",
                "generator": false,
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "x",
                    "start": 184,
                    "end": 185
                  }
                ],
                "body": {
                  "type": "Identifier",
                  "name": "x",
                  "start": 189,
                  "end": 190
                },
                "async": false,
                "expression": true,
                "start": 184,
                "end": 190
              }
            ],
            "optional": false,
            "start": 180,
            "end": 191
          },
          "start": 176,
          "end": 191
        }
      ],
      "kind": "let",
      "start": 172,
      "end": 192
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "fResult",
            "start": 198,
            "end": 205
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "f",
              "start": 208,
              "end": 209
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "foo",
                "start": 210,
                "end": 215
              }
            ],
            "optional": false,
            "start": 208,
            "end": 216
          },
          "start": 198,
          "end": 216
        }
      ],
      "kind": "let",
      "start": 194,
      "end": 217
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "g",
            "start": 225,
            "end": 226
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "foo",
              "start": 229,
              "end": 232
            },
            "arguments": [
              {
                "type": "ArrowFunctionExpression",
                "generator": false,
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "x",
                    "start": 234,
                    "end": 235
                  }
                ],
                "body": {
                  "type": "Identifier",
                  "name": "x",
                  "start": 239,
                  "end": 240
                },
                "async": false,
                "expression": true,
                "start": 234,
                "end": 240
              }
            ],
            "optional": false,
            "start": 229,
            "end": 242
          },
          "start": 225,
          "end": 242
        }
      ],
      "kind": "let",
      "start": 221,
      "end": 243
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "gResult",
            "start": 249,
            "end": 256
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "g",
              "start": 259,
              "end": 260
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "foo",
                "start": 261,
                "end": 266
              }
            ],
            "optional": false,
            "start": 259,
            "end": 267
          },
          "start": 249,
          "end": 267
        }
      ],
      "kind": "let",
      "start": 245,
      "end": 268
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "h",
            "start": 276,
            "end": 277
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "bar",
              "start": 280,
              "end": 283
            },
            "arguments": [
              {
                "type": "ArrowFunctionExpression",
                "generator": false,
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "x",
                    "start": 284,
                    "end": 285
                  }
                ],
                "body": {
                  "type": "Identifier",
                  "name": "x",
                  "start": 289,
                  "end": 290
                },
                "async": false,
                "expression": true,
                "start": 284,
                "end": 290
              }
            ],
            "optional": false,
            "start": 280,
            "end": 291
          },
          "start": 276,
          "end": 291
        }
      ],
      "kind": "let",
      "start": 272,
      "end": 292
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "hResult",
            "start": 298,
            "end": 305
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "h",
              "start": 308,
              "end": 309
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "foo",
                "start": 310,
                "end": 315
              }
            ],
            "optional": false,
            "start": 308,
            "end": 316
          },
          "start": 298,
          "end": 316
        }
      ],
      "kind": "let",
      "start": 294,
      "end": 317
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "hResult",
          "start": 319,
          "end": 326
        },
        "right": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "h",
            "start": 329,
            "end": 330
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "bar",
              "start": 331,
              "end": 336
            }
          ],
          "optional": false,
          "start": 329,
          "end": 337
        },
        "start": 319,
        "end": 337
      },
      "start": 319,
      "end": 338
    }
  ],
  "sourceType": "script",
  "start": 26,
  "end": 338
}