{
  "type": "Program",
  "body": [
    {
      "type": "TSDeclareFunction",
      "id": {
        "type": "Identifier",
        "name": "getFalsyPrimitive",
        "start": 34,
        "end": 51
      },
      "generator": false,
      "expression": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "name": "x",
          "typeAnnotation": {
            "type": "TSTypeAnnotation",
            "typeAnnotation": {
              "type": "TSLiteralType",
              "literal": {
                "type": "Literal",
                "value": "string",
                "start": 55,
                "end": 63
              },
              "start": 55,
              "end": 63
            },
            "start": 53,
            "end": 63
          },
          "start": 52,
          "end": 63
        }
      ],
      "returnType": {
        "type": "TSTypeAnnotation",
        "typeAnnotation": {
          "type": "TSStringKeyword",
          "start": 66,
          "end": 72
        },
        "start": 64,
        "end": 72
      },
      "start": 25,
      "end": 73
    },
    {
      "type": "TSDeclareFunction",
      "id": {
        "type": "Identifier",
        "name": "getFalsyPrimitive",
        "start": 84,
        "end": 101
      },
      "generator": false,
      "expression": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "name": "x",
          "typeAnnotation": {
            "type": "TSTypeAnnotation",
            "typeAnnotation": {
              "type": "TSLiteralType",
              "literal": {
                "type": "Literal",
                "value": "number",
                "start": 105,
                "end": 113
              },
              "start": 105,
              "end": 113
            },
            "start": 103,
            "end": 113
          },
          "start": 102,
          "end": 113
        }
      ],
      "returnType": {
        "type": "TSTypeAnnotation",
        "typeAnnotation": {
          "type": "TSNumberKeyword",
          "start": 116,
          "end": 122
        },
        "start": 114,
        "end": 122
      },
      "start": 75,
      "end": 123
    },
    {
      "type": "TSDeclareFunction",
      "id": {
        "type": "Identifier",
        "name": "getFalsyPrimitive",
        "start": 134,
        "end": 151
      },
      "generator": false,
      "expression": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "name": "x",
          "typeAnnotation": {
            "type": "TSTypeAnnotation",
            "typeAnnotation": {
              "type": "TSLiteralType",
              "literal": {
                "type": "Literal",
                "value": "boolean",
                "start": 155,
                "end": 164
              },
              "start": 155,
              "end": 164
            },
            "start": 153,
            "end": 164
          },
          "start": 152,
          "end": 164
        }
      ],
      "returnType": {
        "type": "TSTypeAnnotation",
        "typeAnnotation": {
          "type": "TSBooleanKeyword",
          "start": 167,
          "end": 174
        },
        "start": 165,
        "end": 174
      },
      "start": 125,
      "end": 175
    },
    {
      "type": "TSDeclareFunction",
      "id": {
        "type": "Identifier",
        "name": "getFalsyPrimitive",
        "start": 186,
        "end": 203
      },
      "generator": false,
      "expression": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "name": "x",
          "typeAnnotation": {
            "type": "TSTypeAnnotation",
            "typeAnnotation": {
              "type": "TSUnionType",
              "types": [
                {
                  "type": "TSLiteralType",
                  "literal": {
                    "type": "Literal",
                    "value": "boolean",
                    "start": 207,
                    "end": 216
                  },
                  "start": 207,
                  "end": 216
                },
                {
                  "type": "TSLiteralType",
                  "literal": {
                    "type": "Literal",
                    "value": "string",
                    "start": 219,
                    "end": 227
                  },
                  "start": 219,
                  "end": 227
                }
              ],
              "start": 207,
              "end": 227
            },
            "start": 205,
            "end": 227
          },
          "start": 204,
          "end": 227
        }
      ],
      "returnType": {
        "type": "TSTypeAnnotation",
        "typeAnnotation": {
          "type": "TSUnionType",
          "types": [
            {
              "type": "TSBooleanKeyword",
              "start": 230,
              "end": 237
            },
            {
              "type": "TSStringKeyword",
              "start": 240,
              "end": 246
            }
          ],
          "start": 230,
          "end": 246
        },
        "start": 228,
        "end": 246
      },
      "start": 177,
      "end": 247
    },
    {
      "type": "TSDeclareFunction",
      "id": {
        "type": "Identifier",
        "name": "getFalsyPrimitive",
        "start": 258,
        "end": 275
      },
      "generator": false,
      "expression": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "name": "x",
          "typeAnnotation": {
            "type": "TSTypeAnnotation",
            "typeAnnotation": {
              "type": "TSUnionType",
              "types": [
                {
                  "type": "TSLiteralType",
                  "literal": {
                    "type": "Literal",
                    "value": "boolean",
                    "start": 279,
                    "end": 288
                  },
                  "start": 279,
                  "end": 288
                },
                {
                  "type": "TSLiteralType",
                  "literal": {
                    "type": "Literal",
                    "value": "number",
                    "start": 291,
                    "end": 299
                  },
                  "start": 291,
                  "end": 299
                }
              ],
              "start": 279,
              "end": 299
            },
            "start": 277,
            "end": 299
          },
          "start": 276,
          "end": 299
        }
      ],
      "returnType": {
        "type": "TSTypeAnnotation",
        "typeAnnotation": {
          "type": "TSUnionType",
          "types": [
            {
              "type": "TSBooleanKeyword",
              "start": 302,
              "end": 309
            },
            {
              "type": "TSNumberKeyword",
              "start": 312,
              "end": 318
            }
          ],
          "start": 302,
          "end": 318
        },
        "start": 300,
        "end": 318
      },
      "start": 249,
      "end": 319
    },
    {
      "type": "TSDeclareFunction",
      "id": {
        "type": "Identifier",
        "name": "getFalsyPrimitive",
        "start": 330,
        "end": 347
      },
      "generator": false,
      "expression": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "name": "x",
          "typeAnnotation": {
            "type": "TSTypeAnnotation",
            "typeAnnotation": {
              "type": "TSUnionType",
              "types": [
                {
                  "type": "TSLiteralType",
                  "literal": {
                    "type": "Literal",
                    "value": "number",
                    "start": 351,
                    "end": 359
                  },
                  "start": 351,
                  "end": 359
                },
                {
                  "type": "TSLiteralType",
                  "literal": {
                    "type": "Literal",
                    "value": "string",
                    "start": 362,
                    "end": 370
                  },
                  "start": 362,
                  "end": 370
                }
              ],
              "start": 351,
              "end": 370
            },
            "start": 349,
            "end": 370
          },
          "start": 348,
          "end": 370
        }
      ],
      "returnType": {
        "type": "TSTypeAnnotation",
        "typeAnnotation": {
          "type": "TSUnionType",
          "types": [
            {
              "type": "TSNumberKeyword",
              "start": 373,
              "end": 379
            },
            {
              "type": "TSStringKeyword",
              "start": 382,
              "end": 388
            }
          ],
          "start": 373,
          "end": 388
        },
        "start": 371,
        "end": 388
      },
      "start": 321,
      "end": 389
    },
    {
      "type": "TSDeclareFunction",
      "id": {
        "type": "Identifier",
        "name": "getFalsyPrimitive",
        "start": 400,
        "end": 417
      },
      "generator": false,
      "expression": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "name": "x",
          "typeAnnotation": {
            "type": "TSTypeAnnotation",
            "typeAnnotation": {
              "type": "TSUnionType",
              "types": [
                {
                  "type": "TSLiteralType",
                  "literal": {
                    "type": "Literal",
                    "value": "number",
                    "start": 421,
                    "end": 429
                  },
                  "start": 421,
                  "end": 429
                },
                {
                  "type": "TSLiteralType",
                  "literal": {
                    "type": "Literal",
                    "value": "string",
                    "start": 432,
                    "end": 440
                  },
                  "start": 432,
                  "end": 440
                },
                {
                  "type": "TSLiteralType",
                  "literal": {
                    "type": "Literal",
                    "value": "boolean",
                    "start": 443,
                    "end": 452
                  },
                  "start": 443,
                  "end": 452
                }
              ],
              "start": 421,
              "end": 452
            },
            "start": 419,
            "end": 452
          },
          "start": 418,
          "end": 452
        }
      ],
      "returnType": {
        "type": "TSTypeAnnotation",
        "typeAnnotation": {
          "type": "TSUnionType",
          "types": [
            {
              "type": "TSNumberKeyword",
              "start": 455,
              "end": 461
            },
            {
              "type": "TSStringKeyword",
              "start": 464,
              "end": 470
            },
            {
              "type": "TSBooleanKeyword",
              "start": 473,
              "end": 480
            }
          ],
          "start": 455,
          "end": 480
        },
        "start": 453,
        "end": 480
      },
      "start": 391,
      "end": 481
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "getFalsyPrimitive",
        "start": 492,
        "end": 509
      },
      "generator": false,
      "expression": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "name": "x",
          "typeAnnotation": {
            "type": "TSTypeAnnotation",
            "typeAnnotation": {
              "type": "TSStringKeyword",
              "start": 513,
              "end": 519
            },
            "start": 511,
            "end": 519
          },
          "start": 510,
          "end": 519
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "operator": "===",
              "left": {
                "type": "Identifier",
                "name": "x",
                "start": 559,
                "end": 560
              },
              "right": {
                "type": "Literal",
                "value": "string",
                "start": 565,
                "end": 573
              },
              "start": 559,
              "end": 573
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "Literal",
                    "value": "",
                    "start": 593,
                    "end": 595
                  },
                  "start": 586,
                  "end": 596
                }
              ],
              "start": 575,
              "end": 603
            },
            "alternate": null,
            "start": 555,
            "end": 603
          },
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "operator": "===",
              "left": {
                "type": "Identifier",
                "name": "x",
                "start": 613,
                "end": 614
              },
              "right": {
                "type": "Literal",
                "value": "number",
                "start": 619,
                "end": 627
              },
              "start": 613,
              "end": 627
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "Literal",
                    "value": 0,
                    "start": 647,
                    "end": 648
                  },
                  "start": 640,
                  "end": 649
                }
              ],
              "start": 629,
              "end": 656
            },
            "alternate": null,
            "start": 609,
            "end": 656
          },
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "operator": "===",
              "left": {
                "type": "Identifier",
                "name": "x",
                "start": 666,
                "end": 667
              },
              "right": {
                "type": "Literal",
                "value": "boolean",
                "start": 672,
                "end": 681
              },
              "start": 666,
              "end": 681
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "Literal",
                    "value": false,
                    "start": 701,
                    "end": 706
                  },
                  "start": 694,
                  "end": 707
                }
              ],
              "start": 683,
              "end": 714
            },
            "alternate": null,
            "start": 662,
            "end": 714
          },
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "Literal",
              "value": "Invalid value",
              "start": 759,
              "end": 774
            },
            "start": 753,
            "end": 775
          }
        ],
        "start": 548,
        "end": 778
      },
      "returnType": {
        "type": "TSTypeAnnotation",
        "typeAnnotation": {
          "type": "TSUnionType",
          "types": [
            {
              "type": "TSStringKeyword",
              "start": 522,
              "end": 528
            },
            {
              "type": "TSNumberKeyword",
              "start": 531,
              "end": 537
            },
            {
              "type": "TSBooleanKeyword",
              "start": 540,
              "end": 547
            }
          ],
          "start": 522,
          "end": 547
        },
        "start": 520,
        "end": 547
      },
      "start": 483,
      "end": 778
    },
    {
      "type": "TSModuleDeclaration",
      "id": {
        "type": "Identifier",
        "name": "Consts1",
        "start": 792,
        "end": 799
      },
      "body": {
        "type": "TSModuleBlock",
        "body": [
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "EMPTY_STRING",
                  "start": 813,
                  "end": 825
                },
                "init": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "getFalsyPrimitive",
                    "start": 828,
                    "end": 845
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "string",
                      "start": 846,
                      "end": 854
                    }
                  ],
                  "optional": false,
                  "start": 828,
                  "end": 855
                },
                "start": 813,
                "end": 855
              }
            ],
            "kind": "const",
            "start": 807,
            "end": 856
          },
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "ZERO",
                  "start": 868,
                  "end": 872
                },
                "init": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "getFalsyPrimitive",
                    "start": 875,
                    "end": 892
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "number",
                      "start": 893,
                      "end": 901
                    }
                  ],
                  "optional": false,
                  "start": 875,
                  "end": 902
                },
                "start": 868,
                "end": 902
              }
            ],
            "kind": "const",
            "start": 862,
            "end": 903
          },
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "FALSE",
                  "start": 915,
                  "end": 920
                },
                "init": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "getFalsyPrimitive",
                    "start": 923,
                    "end": 940
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "boolean",
                      "start": 941,
                      "end": 950
                    }
                  ],
                  "optional": false,
                  "start": 923,
                  "end": 951
                },
                "start": 915,
                "end": 951
              }
            ],
            "kind": "const",
            "start": 909,
            "end": 952
          }
        ],
        "start": 800,
        "end": 955
      },
      "start": 782,
      "end": 955
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "string",
            "start": 965,
            "end": 971
          },
          "init": {
            "type": "Literal",
            "value": "string",
            "start": 974,
            "end": 982
          },
          "start": 965,
          "end": 982
        }
      ],
      "kind": "const",
      "start": 959,
      "end": 982
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "number",
            "start": 990,
            "end": 996
          },
          "init": {
            "type": "Literal",
            "value": "number",
            "start": 999,
            "end": 1007
          },
          "start": 990,
          "end": 1007
        }
      ],
      "kind": "const",
      "start": 984,
      "end": 1007
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "boolean",
            "start": 1015,
            "end": 1022
          },
          "init": {
            "type": "Literal",
            "value": "boolean",
            "start": 1025,
            "end": 1034
          },
          "start": 1015,
          "end": 1034
        }
      ],
      "kind": "const",
      "start": 1009,
      "end": 1034
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "stringOrNumber",
            "start": 1044,
            "end": 1058
          },
          "init": {
            "type": "LogicalExpression",
            "operator": "||",
            "left": {
              "type": "Identifier",
              "name": "string",
              "start": 1061,
              "end": 1067
            },
            "right": {
              "type": "Identifier",
              "name": "number",
              "start": 1071,
              "end": 1077
            },
            "start": 1061,
            "end": 1077
          },
          "start": 1044,
          "end": 1077
        }
      ],
      "kind": "const",
      "start": 1038,
      "end": 1078
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "stringOrBoolean",
            "start": 1086,
            "end": 1101
          },
          "init": {
            "type": "LogicalExpression",
            "operator": "||",
            "left": {
              "type": "Identifier",
              "name": "string",
              "start": 1104,
              "end": 1110
            },
            "right": {
              "type": "Identifier",
              "name": "boolean",
              "start": 1114,
              "end": 1121
            },
            "start": 1104,
            "end": 1121
          },
          "start": 1086,
          "end": 1121
        }
      ],
      "kind": "const",
      "start": 1080,
      "end": 1122
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "booleanOrNumber",
            "start": 1130,
            "end": 1145
          },
          "init": {
            "type": "LogicalExpression",
            "operator": "||",
            "left": {
              "type": "Identifier",
              "name": "number",
              "start": 1148,
              "end": 1154
            },
            "right": {
              "type": "Identifier",
              "name": "boolean",
              "start": 1158,
              "end": 1165
            },
            "start": 1148,
            "end": 1165
          },
          "start": 1130,
          "end": 1165
        }
      ],
      "kind": "const",
      "start": 1124,
      "end": 1166
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "stringOrBooleanOrNumber",
            "start": 1174,
            "end": 1197
          },
          "init": {
            "type": "LogicalExpression",
            "operator": "||",
            "left": {
              "type": "Identifier",
              "name": "stringOrBoolean",
              "start": 1200,
              "end": 1215
            },
            "right": {
              "type": "Identifier",
              "name": "number",
              "start": 1219,
              "end": 1225
            },
            "start": 1200,
            "end": 1225
          },
          "start": 1174,
          "end": 1225
        }
      ],
      "kind": "const",
      "start": 1168,
      "end": 1226
    },
    {
      "type": "TSModuleDeclaration",
      "id": {
        "type": "Identifier",
        "name": "Consts2",
        "start": 1240,
        "end": 1247
      },
      "body": {
        "type": "TSModuleBlock",
        "body": [
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "EMPTY_STRING",
                  "start": 1261,
                  "end": 1273
                },
                "init": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "getFalsyPrimitive",
                    "start": 1276,
                    "end": 1293
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "string",
                      "start": 1294,
                      "end": 1300
                    }
                  ],
                  "optional": false,
                  "start": 1276,
                  "end": 1301
                },
                "start": 1261,
                "end": 1301
              }
            ],
            "kind": "const",
            "start": 1255,
            "end": 1302
          },
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "ZERO",
                  "start": 1314,
                  "end": 1318
                },
                "init": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "getFalsyPrimitive",
                    "start": 1321,
                    "end": 1338
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "number",
                      "start": 1339,
                      "end": 1345
                    }
                  ],
                  "optional": false,
                  "start": 1321,
                  "end": 1346
                },
                "start": 1314,
                "end": 1346
              }
            ],
            "kind": "const",
            "start": 1308,
            "end": 1347
          },
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "FALSE",
                  "start": 1359,
                  "end": 1364
                },
                "init": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "getFalsyPrimitive",
                    "start": 1367,
                    "end": 1384
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "boolean",
                      "start": 1385,
                      "end": 1392
                    }
                  ],
                  "optional": false,
                  "start": 1367,
                  "end": 1393
                },
                "start": 1359,
                "end": 1393
              }
            ],
            "kind": "const",
            "start": 1353,
            "end": 1394
          },
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "a",
                  "start": 1408,
                  "end": 1409
                },
                "init": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "getFalsyPrimitive",
                    "start": 1412,
                    "end": 1429
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "stringOrNumber",
                      "start": 1430,
                      "end": 1444
                    }
                  ],
                  "optional": false,
                  "start": 1412,
                  "end": 1445
                },
                "start": 1408,
                "end": 1445
              }
            ],
            "kind": "const",
            "start": 1402,
            "end": 1446
          },
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "b",
                  "start": 1458,
                  "end": 1459
                },
                "init": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "getFalsyPrimitive",
                    "start": 1462,
                    "end": 1479
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "stringOrBoolean",
                      "start": 1480,
                      "end": 1495
                    }
                  ],
                  "optional": false,
                  "start": 1462,
                  "end": 1496
                },
                "start": 1458,
                "end": 1496
              }
            ],
            "kind": "const",
            "start": 1452,
            "end": 1497
          },
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "c",
                  "start": 1509,
                  "end": 1510
                },
                "init": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "getFalsyPrimitive",
                    "start": 1513,
                    "end": 1530
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "booleanOrNumber",
                      "start": 1531,
                      "end": 1546
                    }
                  ],
                  "optional": false,
                  "start": 1513,
                  "end": 1547
                },
                "start": 1509,
                "end": 1547
              }
            ],
            "kind": "const",
            "start": 1503,
            "end": 1548
          },
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "d",
                  "start": 1560,
                  "end": 1561
                },
                "init": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "getFalsyPrimitive",
                    "start": 1564,
                    "end": 1581
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "stringOrBooleanOrNumber",
                      "start": 1582,
                      "end": 1605
                    }
                  ],
                  "optional": false,
                  "start": 1564,
                  "end": 1606
                },
                "start": 1560,
                "end": 1606
              }
            ],
            "kind": "const",
            "start": 1554,
            "end": 1607
          }
        ],
        "start": 1248,
        "end": 1610
      },
      "start": 1230,
      "end": 1610
    }
  ],
  "sourceType": "module",
  "start": 25,
  "end": 1616
}