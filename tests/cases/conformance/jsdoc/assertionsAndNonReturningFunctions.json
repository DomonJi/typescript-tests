{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "assert",
            "start": 243,
            "end": 249
          },
          "init": {
            "type": "ArrowFunctionExpression",
            "generator": false,
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "check",
                "start": 252,
                "end": 257
              }
            ],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "UnaryExpression",
                    "operator": "!",
                    "prefix": true,
                    "argument": {
                      "type": "Identifier",
                      "name": "check",
                      "start": 273,
                      "end": 278
                    },
                    "start": 272,
                    "end": 278
                  },
                  "consequent": {
                    "type": "ThrowStatement",
                    "argument": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Error",
                        "start": 290,
                        "end": 295
                      },
                      "arguments": [],
                      "start": 286,
                      "end": 297
                    },
                    "start": 280,
                    "end": 298
                  },
                  "alternate": null,
                  "start": 268,
                  "end": 298
                }
              ],
              "start": 261,
              "end": 301
            },
            "async": false,
            "expression": false,
            "start": 252,
            "end": 301
          },
          "start": 243,
          "end": 301
        }
      ],
      "kind": "const",
      "start": 237,
      "end": 301
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "assertIsString",
        "start": 367,
        "end": 381
      },
      "generator": false,
      "expression": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "name": "x",
          "start": 382,
          "end": 383
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "UnaryExpression",
              "operator": "!",
              "prefix": true,
              "argument": {
                "type": "BinaryExpression",
                "operator": "===",
                "left": {
                  "type": "UnaryExpression",
                  "operator": "typeof",
                  "prefix": true,
                  "argument": {
                    "type": "Identifier",
                    "name": "x",
                    "start": 405,
                    "end": 406
                  },
                  "start": 398,
                  "end": 406
                },
                "right": {
                  "type": "Literal",
                  "value": "string",
                  "start": 411,
                  "end": 419
                },
                "start": 398,
                "end": 419
              },
              "start": 396,
              "end": 420
            },
            "consequent": {
              "type": "ThrowStatement",
              "argument": {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "Error",
                  "start": 432,
                  "end": 437
                },
                "arguments": [],
                "start": 428,
                "end": 439
              },
              "start": 422,
              "end": 440
            },
            "alternate": null,
            "start": 392,
            "end": 440
          }
        ],
        "start": 385,
        "end": 443
      },
      "start": 358,
      "end": 443
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "assert2",
        "start": 521,
        "end": 528
      },
      "generator": false,
      "expression": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "name": "check",
          "start": 529,
          "end": 534
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "UnaryExpression",
              "operator": "!",
              "prefix": true,
              "argument": {
                "type": "Identifier",
                "name": "check",
                "start": 548,
                "end": 553
              },
              "start": 547,
              "end": 553
            },
            "consequent": {
              "type": "ThrowStatement",
              "argument": {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "Error",
                  "start": 565,
                  "end": 570
                },
                "arguments": [],
                "start": 561,
                "end": 572
              },
              "start": 555,
              "end": 573
            },
            "alternate": null,
            "start": 543,
            "end": 573
          }
        ],
        "start": 536,
        "end": 576
      },
      "start": 512,
      "end": 576
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "fail",
        "start": 620,
        "end": 624
      },
      "generator": false,
      "expression": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Error",
                "start": 644,
                "end": 649
              },
              "arguments": [],
              "start": 640,
              "end": 651
            },
            "start": 634,
            "end": 652
          }
        ],
        "start": 627,
        "end": 655
      },
      "start": 611,
      "end": 655
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "f1",
        "start": 696,
        "end": 698
      },
      "generator": false,
      "expression": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "name": "x",
          "start": 699,
          "end": 700
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "UnaryExpression",
              "operator": "!",
              "prefix": true,
              "argument": {
                "type": "UnaryExpression",
                "operator": "!",
                "prefix": true,
                "argument": {
                  "type": "Literal",
                  "value": true,
                  "start": 715,
                  "end": 719
                },
                "start": 714,
                "end": 719
              },
              "start": 713,
              "end": 719
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "assert",
                      "start": 732,
                      "end": 738
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "operator": "===",
                        "left": {
                          "type": "UnaryExpression",
                          "operator": "typeof",
                          "prefix": true,
                          "argument": {
                            "type": "Identifier",
                            "name": "x",
                            "start": 746,
                            "end": 747
                          },
                          "start": 739,
                          "end": 747
                        },
                        "right": {
                          "type": "Literal",
                          "value": "string",
                          "start": 752,
                          "end": 760
                        },
                        "start": 739,
                        "end": 760
                      }
                    ],
                    "optional": false,
                    "start": 732,
                    "end": 761
                  },
                  "start": 732,
                  "end": 762
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 772,
                      "end": 773
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "length",
                      "start": 774,
                      "end": 780
                    },
                    "computed": false,
                    "optional": false,
                    "start": 772,
                    "end": 780
                  },
                  "start": 772,
                  "end": 781
                }
              ],
              "start": 721,
              "end": 788
            },
            "alternate": null,
            "start": 709,
            "end": 788
          },
          {
            "type": "IfStatement",
            "test": {
              "type": "UnaryExpression",
              "operator": "!",
              "prefix": true,
              "argument": {
                "type": "UnaryExpression",
                "operator": "!",
                "prefix": true,
                "argument": {
                  "type": "Literal",
                  "value": true,
                  "start": 800,
                  "end": 804
                },
                "start": 799,
                "end": 804
              },
              "start": 798,
              "end": 804
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "assert2",
                      "start": 817,
                      "end": 824
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "operator": "===",
                        "left": {
                          "type": "UnaryExpression",
                          "operator": "typeof",
                          "prefix": true,
                          "argument": {
                            "type": "Identifier",
                            "name": "x",
                            "start": 832,
                            "end": 833
                          },
                          "start": 825,
                          "end": 833
                        },
                        "right": {
                          "type": "Literal",
                          "value": "string",
                          "start": 838,
                          "end": 846
                        },
                        "start": 825,
                        "end": 846
                      }
                    ],
                    "optional": false,
                    "start": 817,
                    "end": 847
                  },
                  "start": 817,
                  "end": 848
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 858,
                      "end": 859
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "length",
                      "start": 860,
                      "end": 866
                    },
                    "computed": false,
                    "optional": false,
                    "start": 858,
                    "end": 866
                  },
                  "start": 858,
                  "end": 867
                }
              ],
              "start": 806,
              "end": 874
            },
            "alternate": null,
            "start": 794,
            "end": 874
          },
          {
            "type": "IfStatement",
            "test": {
              "type": "UnaryExpression",
              "operator": "!",
              "prefix": true,
              "argument": {
                "type": "UnaryExpression",
                "operator": "!",
                "prefix": true,
                "argument": {
                  "type": "Literal",
                  "value": true,
                  "start": 886,
                  "end": 890
                },
                "start": 885,
                "end": 890
              },
              "start": 884,
              "end": 890
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "assertIsString",
                      "start": 903,
                      "end": 917
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "x",
                        "start": 918,
                        "end": 919
                      }
                    ],
                    "optional": false,
                    "start": 903,
                    "end": 920
                  },
                  "start": 903,
                  "end": 921
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "x",
                      "start": 931,
                      "end": 932
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "length",
                      "start": 933,
                      "end": 939
                    },
                    "computed": false,
                    "optional": false,
                    "start": 931,
                    "end": 939
                  },
                  "start": 931,
                  "end": 940
                }
              ],
              "start": 892,
              "end": 947
            },
            "alternate": null,
            "start": 880,
            "end": 947
          },
          {
            "type": "IfStatement",
            "test": {
              "type": "UnaryExpression",
              "operator": "!",
              "prefix": true,
              "argument": {
                "type": "UnaryExpression",
                "operator": "!",
                "prefix": true,
                "argument": {
                  "type": "Literal",
                  "value": true,
                  "start": 959,
                  "end": 963
                },
                "start": 958,
                "end": 963
              },
              "start": 957,
              "end": 963
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "fail",
                      "start": 976,
                      "end": 980
                    },
                    "arguments": [],
                    "optional": false,
                    "start": 976,
                    "end": 982
                  },
                  "start": 976,
                  "end": 983
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "Identifier",
                    "name": "x",
                    "start": 993,
                    "end": 994
                  },
                  "start": 993,
                  "end": 995
                }
              ],
              "start": 965,
              "end": 1018
            },
            "alternate": null,
            "start": 953,
            "end": 1018
          }
        ],
        "start": 702,
        "end": 1021
      },
      "start": 687,
      "end": 1021
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "f2",
        "start": 1068,
        "end": 1070
      },
      "generator": false,
      "expression": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "name": "b",
          "start": 1071,
          "end": 1072
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "SwitchStatement",
            "discriminant": {
              "type": "Identifier",
              "name": "b",
              "start": 1089,
              "end": 1090
            },
            "cases": [
              {
                "type": "SwitchCase",
                "test": {
                  "type": "Literal",
                  "value": true,
                  "start": 1108,
                  "end": 1112
                },
                "consequent": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "Literal",
                      "value": 1,
                      "start": 1121,
                      "end": 1122
                    },
                    "start": 1114,
                    "end": 1123
                  }
                ],
                "start": 1103,
                "end": 1123
              },
              {
                "type": "SwitchCase",
                "test": {
                  "type": "Literal",
                  "value": false,
                  "start": 1138,
                  "end": 1143
                },
                "consequent": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "Literal",
                      "value": 0,
                      "start": 1152,
                      "end": 1153
                    },
                    "start": 1145,
                    "end": 1154
                  }
                ],
                "start": 1133,
                "end": 1154
              }
            ],
            "start": 1081,
            "end": 1161
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "Identifier",
              "name": "b",
              "start": 1167,
              "end": 1168
            },
            "start": 1167,
            "end": 1169
          }
        ],
        "start": 1074,
        "end": 1188
      },
      "start": 1059,
      "end": 1188
    }
  ],
  "sourceType": "module",
  "start": 237,
  "end": 1190
}