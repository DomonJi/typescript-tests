{
  "type": "Program",
  "body": [
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "TSDeclareFunction",
        "id": {
          "type": "Identifier",
          "name": "art",
          "start": 125,
          "end": 128
        },
        "generator": false,
        "expression": false,
        "async": false,
        "params": [
          {
            "type": "Identifier",
            "name": "value",
            "typeAnnotation": {
              "type": "TSTypeAnnotation",
              "typeAnnotation": {
                "type": "TSAnyKeyword",
                "start": 136,
                "end": 139
              },
              "start": 134,
              "end": 139
            },
            "start": 129,
            "end": 139
          },
          {
            "type": "Identifier",
            "name": "message",
            "typeAnnotation": {
              "type": "TSTypeAnnotation",
              "typeAnnotation": {
                "type": "TSUnionType",
                "types": [
                  {
                    "type": "TSStringKeyword",
                    "start": 151,
                    "end": 157
                  },
                  {
                    "type": "TSTypeReference",
                    "typeName": {
                      "type": "Identifier",
                      "name": "Error",
                      "start": 160,
                      "end": 165
                    },
                    "start": 160,
                    "end": 165
                  }
                ],
                "start": 151,
                "end": 165
              },
              "start": 149,
              "end": 165
            },
            "optional": true,
            "start": 141,
            "end": 165
          }
        ],
        "returnType": {
          "type": "TSTypeAnnotation",
          "typeAnnotation": {
            "type": "TSTypePredicate",
            "asserts": true,
            "parameterName": {
              "type": "Identifier",
              "name": "value",
              "start": 176,
              "end": 181
            },
            "typeAnnotation": null,
            "start": 168,
            "end": 181
          },
          "start": 166,
          "end": 181
        },
        "start": 116,
        "end": 182
      },
      "specifiers": [],
      "source": null,
      "exportKind": "value",
      "assertions": [],
      "start": 109,
      "end": 182
    },
    {
      "type": "TSDeclareFunction",
      "id": {
        "type": "Identifier",
        "name": "art",
        "start": 223,
        "end": 226
      },
      "generator": false,
      "expression": false,
      "async": false,
      "params": [
        {
          "type": "Identifier",
          "name": "value",
          "typeAnnotation": {
            "type": "TSTypeAnnotation",
            "typeAnnotation": {
              "type": "TSAnyKeyword",
              "start": 234,
              "end": 237
            },
            "start": 232,
            "end": 237
          },
          "start": 227,
          "end": 237
        },
        {
          "type": "Identifier",
          "name": "message",
          "typeAnnotation": {
            "type": "TSTypeAnnotation",
            "typeAnnotation": {
              "type": "TSUnionType",
              "types": [
                {
                  "type": "TSStringKeyword",
                  "start": 249,
                  "end": 255
                },
                {
                  "type": "TSTypeReference",
                  "typeName": {
                    "type": "Identifier",
                    "name": "Error",
                    "start": 258,
                    "end": 263
                  },
                  "start": 258,
                  "end": 263
                }
              ],
              "start": 249,
              "end": 263
            },
            "start": 247,
            "end": 263
          },
          "optional": true,
          "start": 239,
          "end": 263
        }
      ],
      "returnType": {
        "type": "TSTypeAnnotation",
        "typeAnnotation": {
          "type": "TSTypePredicate",
          "asserts": true,
          "parameterName": {
            "type": "Identifier",
            "name": "value",
            "start": 274,
            "end": 279
          },
          "typeAnnotation": null,
          "start": 266,
          "end": 279
        },
        "start": 264,
        "end": 279
      },
      "declare": true,
      "start": 206,
      "end": 280
    },
    {
      "type": "TSExportAssignment",
      "expression": {
        "type": "Identifier",
        "name": "art",
        "start": 290,
        "end": 293
      },
      "start": 281,
      "end": 294
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "ObjectPattern",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "art",
                  "start": 326,
                  "end": 329
                },
                "value": {
                  "type": "Identifier",
                  "name": "art",
                  "start": 326,
                  "end": 329
                },
                "computed": false,
                "method": false,
                "shorthand": true,
                "kind": "init",
                "start": 326,
                "end": 329
              }
            ],
            "start": 324,
            "end": 331
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require",
              "start": 334,
              "end": 341
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "./ex",
                "start": 342,
                "end": 348
              }
            ],
            "optional": false,
            "start": 334,
            "end": 349
          },
          "start": 324,
          "end": 349
        }
      ],
      "kind": "const",
      "start": 318,
      "end": 349
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "artoo",
            "start": 356,
            "end": 361
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require",
              "start": 364,
              "end": 371
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "./ex2",
                "start": 372,
                "end": 379
              }
            ],
            "optional": false,
            "start": 364,
            "end": 380
          },
          "start": 356,
          "end": 380
        }
      ],
      "kind": "const",
      "start": 350,
      "end": 380
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 385,
            "end": 386
          },
          "init": {
            "type": "Literal",
            "value": 1,
            "start": 389,
            "end": 390
          },
          "start": 385,
          "end": 390
        }
      ],
      "kind": "let",
      "start": 381,
      "end": 390
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "art",
          "start": 391,
          "end": 394
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "x",
            "start": 395,
            "end": 396
          }
        ],
        "optional": false,
        "start": 391,
        "end": 397
      },
      "start": 391,
      "end": 397
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "y",
            "start": 402,
            "end": 403
          },
          "init": {
            "type": "Literal",
            "value": 1,
            "start": 406,
            "end": 407
          },
          "start": 402,
          "end": 407
        }
      ],
      "kind": "let",
      "start": 398,
      "end": 407
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "artoo",
          "start": 408,
          "end": 413
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "y",
            "start": 414,
            "end": 415
          }
        ],
        "optional": false,
        "start": 408,
        "end": 416
      },
      "start": 408,
      "end": 416
    }
  ],
  "sourceType": "module",
  "start": 109,
  "end": 417
}