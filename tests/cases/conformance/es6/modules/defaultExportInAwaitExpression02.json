{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 65,
            "end": 66
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Promise",
              "start": 73,
              "end": 80
            },
            "arguments": [
              {
                "type": "ArrowFunctionExpression",
                "generator": false,
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "resolve",
                    "start": 84,
                    "end": 91
                  },
                  {
                    "type": "Identifier",
                    "name": "reject",
                    "start": 93,
                    "end": 99
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "resolve",
                          "start": 107,
                          "end": 114
                        },
                        "arguments": [
                          {
                            "type": "ObjectExpression",
                            "properties": [],
                            "start": 116,
                            "end": 118
                          }
                        ],
                        "optional": false,
                        "start": 107,
                        "end": 120
                      },
                      "start": 107,
                      "end": 121
                    }
                  ],
                  "start": 105,
                  "end": 123
                },
                "async": false,
                "expression": false,
                "start": 82,
                "end": 123
              }
            ],
            "start": 69,
            "end": 125
          },
          "start": 65,
          "end": 125
        }
      ],
      "kind": "const",
      "start": 59,
      "end": 126
    },
    {
      "type": "ExportDefaultDeclaration",
      "declaration": {
        "type": "Identifier",
        "name": "x",
        "start": 143,
        "end": 144
      },
      "exportKind": "value",
      "start": 128,
      "end": 145
    },
    {
      "type": "ImportDeclaration",
      "source": {
        "type": "Literal",
        "value": "./a",
        "start": 183,
        "end": 188
      },
      "specifiers": [
        {
          "type": "ImportDefaultSpecifier",
          "local": {
            "type": "Identifier",
            "name": "x",
            "start": 176,
            "end": 177
          },
          "start": 176,
          "end": 177
        }
      ],
      "importKind": "value",
      "assertions": [],
      "start": 169,
      "end": 189
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "FunctionExpression",
          "id": null,
          "generator": false,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "value",
                      "start": 225,
                      "end": 230
                    },
                    "init": {
                      "type": "AwaitExpression",
                      "argument": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 239,
                        "end": 240
                      },
                      "start": 233,
                      "end": 240
                    },
                    "start": 225,
                    "end": 240
                  }
                ],
                "kind": "const",
                "start": 219,
                "end": 241
              }
            ],
            "start": 212,
            "end": 244
          },
          "async": true,
          "expression": false,
          "start": 195,
          "end": 244
        },
        "arguments": [],
        "optional": false,
        "start": 195,
        "end": 246
      },
      "start": 193,
      "end": 249
    }
  ],
  "sourceType": "module",
  "start": 59,
  "end": 251
}