{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "x",
            "start": 60,
            "end": 61
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Promise",
              "start": 68,
              "end": 75
            },
            "arguments": [
              {
                "type": "ArrowFunctionExpression",
                "generator": false,
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "resolve",
                    "start": 79,
                    "end": 86
                  },
                  {
                    "type": "Identifier",
                    "name": "reject",
                    "start": 88,
                    "end": 94
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "resolve",
                          "start": 102,
                          "end": 109
                        },
                        "arguments": [
                          {
                            "type": "ObjectExpression",
                            "properties": [],
                            "start": 111,
                            "end": 113
                          }
                        ],
                        "optional": false,
                        "start": 102,
                        "end": 115
                      },
                      "start": 102,
                      "end": 116
                    }
                  ],
                  "start": 100,
                  "end": 118
                },
                "async": false,
                "expression": false,
                "start": 77,
                "end": 118
              }
            ],
            "start": 64,
            "end": 120
          },
          "start": 60,
          "end": 120
        }
      ],
      "kind": "const",
      "start": 54,
      "end": 121
    },
    {
      "type": "ExportDefaultDeclaration",
      "declaration": {
        "type": "Identifier",
        "name": "x",
        "start": 138,
        "end": 139
      },
      "exportKind": "value",
      "start": 123,
      "end": 140
    },
    {
      "type": "ImportDeclaration",
      "source": {
        "type": "Literal",
        "value": "./a",
        "start": 178,
        "end": 183
      },
      "specifiers": [
        {
          "type": "ImportDefaultSpecifier",
          "local": {
            "type": "Identifier",
            "name": "x",
            "start": 171,
            "end": 172
          },
          "start": 171,
          "end": 172
        }
      ],
      "importKind": "value",
      "assertions": [],
      "start": 164,
      "end": 184
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "FunctionExpression",
          "id": null,
          "generator": false,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "value",
                      "start": 220,
                      "end": 225
                    },
                    "init": {
                      "type": "AwaitExpression",
                      "argument": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 234,
                        "end": 235
                      },
                      "start": 228,
                      "end": 235
                    },
                    "start": 220,
                    "end": 235
                  }
                ],
                "kind": "const",
                "start": 214,
                "end": 236
              }
            ],
            "start": 207,
            "end": 239
          },
          "async": true,
          "expression": false,
          "start": 190,
          "end": 239
        },
        "arguments": [],
        "optional": false,
        "start": 190,
        "end": 241
      },
      "start": 188,
      "end": 244
    }
  ],
  "sourceType": "module",
  "start": 54,
  "end": 246
}