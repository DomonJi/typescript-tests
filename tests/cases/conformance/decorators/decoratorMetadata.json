{
  "type": "Program",
  "body": [
    {
      "type": "ExportDefaultDeclaration",
      "declaration": {
        "type": "ClassDeclaration",
        "id": {
          "type": "Identifier",
          "name": "Service",
          "start": 153,
          "end": 160
        },
        "body": {
          "type": "ClassBody",
          "body": [],
          "start": 161,
          "end": 165
        },
        "superClass": null,
        "start": 147,
        "end": 165
      },
      "exportKind": "value",
      "start": 132,
      "end": 165
    },
    {
      "type": "ImportDeclaration",
      "source": {
        "type": "Literal",
        "value": "./service",
        "start": 215,
        "end": 226
      },
      "specifiers": [
        {
          "type": "ImportDefaultSpecifier",
          "local": {
            "type": "Identifier",
            "name": "Service",
            "start": 202,
            "end": 209
          },
          "start": 202,
          "end": 209
        }
      ],
      "importKind": "value",
      "assertions": [],
      "start": 195,
      "end": 227
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "decorator",
            "typeAnnotation": {
              "type": "TSTypeAnnotation",
              "typeAnnotation": {
                "type": "TSAnyKeyword",
                "start": 254,
                "end": 257
              },
              "start": 252,
              "end": 257
            },
            "start": 243,
            "end": 257
          },
          "init": null,
          "start": 243,
          "end": 257
        }
      ],
      "kind": "var",
      "declare": true,
      "start": 231,
      "end": 258
    },
    {
      "type": "ClassDeclaration",
      "id": {
        "type": "Identifier",
        "name": "MyComponent",
        "start": 280,
        "end": 291
      },
      "body": {
        "type": "ClassBody",
        "body": [
          {
            "type": "MethodDefinition",
            "key": {
              "type": "Identifier",
              "name": "constructor",
              "start": 299,
              "end": 310
            },
            "value": {
              "type": "FunctionExpression",
              "id": null,
              "params": [
                {
                  "type": "TSParameterProperty",
                  "accessibility": "public",
                  "parameter": {
                    "type": "Identifier",
                    "name": "Service",
                    "typeAnnotation": {
                      "type": "TSTypeAnnotation",
                      "typeAnnotation": {
                        "type": "TSTypeReference",
                        "typeName": {
                          "type": "Identifier",
                          "name": "Service",
                          "start": 327,
                          "end": 334
                        },
                        "start": 327,
                        "end": 334
                      },
                      "start": 325,
                      "end": 334
                    },
                    "start": 318,
                    "end": 334
                  },
                  "start": 311,
                  "end": 334
                }
              ],
              "generator": false,
              "expression": false,
              "async": false,
              "body": {
                "type": "BlockStatement",
                "body": [],
                "start": 336,
                "end": 344
              },
              "start": 310,
              "end": 344
            },
            "computed": false,
            "static": false,
            "kind": "constructor",
            "override": false,
            "start": 299,
            "end": 344
          },
          {
            "type": "MethodDefinition",
            "key": {
              "type": "Identifier",
              "name": "method",
              "start": 368,
              "end": 374
            },
            "value": {
              "type": "FunctionExpression",
              "id": null,
              "generator": false,
              "expression": false,
              "async": false,
              "body": {
                "type": "BlockStatement",
                "body": [],
                "start": 384,
                "end": 392
              },
              "params": [
                {
                  "type": "Identifier",
                  "name": "x",
                  "typeAnnotation": {
                    "type": "TSTypeAnnotation",
                    "typeAnnotation": {
                      "type": "TSThisType",
                      "start": 378,
                      "end": 382
                    },
                    "start": 376,
                    "end": 382
                  },
                  "start": 375,
                  "end": 382
                }
              ],
              "start": 374,
              "end": 392
            },
            "computed": false,
            "static": false,
            "kind": "method",
            "override": false,
            "decorators": [
              {
                "type": "Decorator",
                "expression": {
                  "type": "Identifier",
                  "name": "decorator",
                  "start": 353,
                  "end": 362
                },
                "start": 352,
                "end": 362
              }
            ],
            "start": 352,
            "end": 392
          }
        ],
        "start": 292,
        "end": 395
      },
      "superClass": null,
      "decorators": [
        {
          "type": "Decorator",
          "expression": {
            "type": "Identifier",
            "name": "decorator",
            "start": 263,
            "end": 272
          },
          "start": 262,
          "end": 272
        }
      ],
      "start": 262,
      "end": 395
    }
  ],
  "sourceType": "module",
  "start": 132,
  "end": 395
}