{
  "type": "Program",
  "body": [
    {
      "type": "TSDeclareFunction",
      "id": {
        "type": "Identifier",
        "name": "getStringOrNumber",
        "start": 67,
        "end": 84
      },
      "generator": false,
      "expression": false,
      "async": false,
      "params": [],
      "returnType": {
        "type": "TSTypeAnnotation",
        "typeAnnotation": {
          "type": "TSUnionType",
          "types": [
            {
              "type": "TSStringKeyword",
              "start": 88,
              "end": 94
            },
            {
              "type": "TSNumberKeyword",
              "start": 97,
              "end": 103
            }
          ],
          "start": 88,
          "end": 103
        },
        "start": 86,
        "end": 103
      },
      "declare": true,
      "start": 50,
      "end": 104
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "f1",
        "start": 117,
        "end": 119
      },
      "generator": false,
      "expression": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "x",
                  "start": 133,
                  "end": 134
                },
                "init": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "getStringOrNumber",
                    "start": 137,
                    "end": 154
                  },
                  "arguments": [],
                  "optional": false,
                  "start": 137,
                  "end": 156
                },
                "start": 133,
                "end": 156
              }
            ],
            "kind": "let",
            "start": 129,
            "end": 157
          },
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "operator": "===",
              "left": {
                "type": "UnaryExpression",
                "operator": "typeof",
                "prefix": true,
                "argument": {
                  "type": "Identifier",
                  "name": "x",
                  "start": 174,
                  "end": 175
                },
                "start": 167,
                "end": 175
              },
              "right": {
                "type": "Literal",
                "value": "string",
                "start": 180,
                "end": 188
              },
              "start": 167,
              "end": 188
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "n",
                        "start": 205,
                        "end": 206
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "FunctionExpression",
                          "id": null,
                          "generator": false,
                          "params": [],
                          "body": {
                            "type": "BlockStatement",
                            "body": [
                              {
                                "type": "ReturnStatement",
                                "argument": {
                                  "type": "MemberExpression",
                                  "object": {
                                    "type": "Identifier",
                                    "name": "x",
                                    "start": 242,
                                    "end": 243
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "length",
                                    "start": 244,
                                    "end": 250
                                  },
                                  "computed": false,
                                  "optional": false,
                                  "start": 242,
                                  "end": 250
                                },
                                "start": 235,
                                "end": 251
                              }
                            ],
                            "start": 220,
                            "end": 262
                          },
                          "async": false,
                          "expression": false,
                          "start": 209,
                          "end": 262
                        },
                        "arguments": [],
                        "optional": false,
                        "start": 209,
                        "end": 264
                      },
                      "start": 205,
                      "end": 264
                    }
                  ],
                  "kind": "let",
                  "start": 201,
                  "end": 265
                }
              ],
              "start": 190,
              "end": 272
            },
            "alternate": null,
            "start": 163,
            "end": 272
          }
        ],
        "start": 122,
        "end": 275
      },
      "start": 108,
      "end": 275
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "f2",
        "start": 288,
        "end": 290
      },
      "generator": false,
      "expression": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "x",
                  "start": 304,
                  "end": 305
                },
                "init": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "getStringOrNumber",
                    "start": 308,
                    "end": 325
                  },
                  "arguments": [],
                  "optional": false,
                  "start": 308,
                  "end": 327
                },
                "start": 304,
                "end": 327
              }
            ],
            "kind": "let",
            "start": 300,
            "end": 328
          },
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "operator": "===",
              "left": {
                "type": "UnaryExpression",
                "operator": "typeof",
                "prefix": true,
                "argument": {
                  "type": "Identifier",
                  "name": "x",
                  "start": 345,
                  "end": 346
                },
                "start": 338,
                "end": 346
              },
              "right": {
                "type": "Literal",
                "value": "string",
                "start": 351,
                "end": 359
              },
              "start": 338,
              "end": 359
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "n",
                        "start": 376,
                        "end": 377
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "FunctionExpression",
                          "id": null,
                          "generator": false,
                          "params": [],
                          "body": {
                            "type": "BlockStatement",
                            "body": [
                              {
                                "type": "ReturnStatement",
                                "argument": {
                                  "type": "MemberExpression",
                                  "object": {
                                    "type": "Identifier",
                                    "name": "x",
                                    "start": 414,
                                    "end": 415
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "length",
                                    "start": 416,
                                    "end": 422
                                  },
                                  "computed": false,
                                  "optional": false,
                                  "start": 414,
                                  "end": 422
                                },
                                "start": 407,
                                "end": 423
                              }
                            ],
                            "start": 392,
                            "end": 434
                          },
                          "async": false,
                          "expression": false,
                          "start": 381,
                          "end": 434
                        },
                        "arguments": [],
                        "optional": false,
                        "start": 380,
                        "end": 437
                      },
                      "start": 376,
                      "end": 437
                    }
                  ],
                  "kind": "let",
                  "start": 372,
                  "end": 438
                }
              ],
              "start": 361,
              "end": 445
            },
            "alternate": null,
            "start": 334,
            "end": 445
          }
        ],
        "start": 293,
        "end": 448
      },
      "start": 279,
      "end": 448
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "f3",
        "start": 461,
        "end": 463
      },
      "generator": false,
      "expression": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "x",
                  "start": 477,
                  "end": 478
                },
                "init": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "getStringOrNumber",
                    "start": 481,
                    "end": 498
                  },
                  "arguments": [],
                  "optional": false,
                  "start": 481,
                  "end": 500
                },
                "start": 477,
                "end": 500
              }
            ],
            "kind": "let",
            "start": 473,
            "end": 501
          },
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "y",
                  "typeAnnotation": {
                    "type": "TSTypeAnnotation",
                    "typeAnnotation": {
                      "type": "TSNumberKeyword",
                      "start": 514,
                      "end": 520
                    },
                    "start": 512,
                    "end": 520
                  },
                  "start": 511,
                  "end": 520
                },
                "init": null,
                "start": 511,
                "end": 520
              }
            ],
            "kind": "let",
            "start": 507,
            "end": 521
          },
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "operator": "===",
              "left": {
                "type": "UnaryExpression",
                "operator": "typeof",
                "prefix": true,
                "argument": {
                  "type": "Identifier",
                  "name": "x",
                  "start": 538,
                  "end": 539
                },
                "start": 531,
                "end": 539
              },
              "right": {
                "type": "Literal",
                "value": "string",
                "start": 544,
                "end": 552
              },
              "start": 531,
              "end": 552
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "n",
                        "start": 569,
                        "end": 570
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "ArrowFunctionExpression",
                          "generator": false,
                          "id": null,
                          "params": [
                            {
                              "type": "Identifier",
                              "name": "z",
                              "start": 574,
                              "end": 575
                            }
                          ],
                          "body": {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "MemberExpression",
                                "object": {
                                  "type": "Identifier",
                                  "name": "x",
                                  "start": 579,
                                  "end": 580
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "length",
                                  "start": 581,
                                  "end": 587
                                },
                                "computed": false,
                                "optional": false,
                                "start": 579,
                                "end": 587
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "y",
                                "start": 590,
                                "end": 591
                              },
                              "start": 579,
                              "end": 591
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "z",
                              "start": 594,
                              "end": 595
                            },
                            "start": 579,
                            "end": 595
                          },
                          "async": false,
                          "expression": true,
                          "start": 574,
                          "end": 595
                        },
                        "arguments": [
                          {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                              "type": "Identifier",
                              "name": "y",
                              "start": 597,
                              "end": 598
                            },
                            "right": {
                              "type": "Literal",
                              "value": 1,
                              "start": 601,
                              "end": 602
                            },
                            "start": 597,
                            "end": 602
                          }
                        ],
                        "optional": false,
                        "start": 573,
                        "end": 603
                      },
                      "start": 569,
                      "end": 603
                    }
                  ],
                  "kind": "let",
                  "start": 565,
                  "end": 604
                }
              ],
              "start": 554,
              "end": 611
            },
            "alternate": null,
            "start": 527,
            "end": 611
          }
        ],
        "start": 466,
        "end": 614
      },
      "start": 452,
      "end": 614
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "maybeNumber",
            "typeAnnotation": {
              "type": "TSTypeAnnotation",
              "typeAnnotation": {
                "type": "TSUnionType",
                "types": [
                  {
                    "type": "TSNumberKeyword",
                    "start": 659,
                    "end": 665
                  },
                  {
                    "type": "TSUndefinedKeyword",
                    "start": 668,
                    "end": 677
                  }
                ],
                "start": 659,
                "end": 677
              },
              "start": 657,
              "end": 677
            },
            "start": 646,
            "end": 677
          },
          "init": null,
          "start": 646,
          "end": 677
        }
      ],
      "kind": "let",
      "start": 642,
      "end": 678
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "FunctionExpression",
          "id": null,
          "generator": false,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "maybeNumber",
                    "start": 700,
                    "end": 711
                  },
                  "right": {
                    "type": "Literal",
                    "value": 1,
                    "start": 714,
                    "end": 715
                  },
                  "start": 700,
                  "end": 715
                },
                "start": 700,
                "end": 716
              }
            ],
            "start": 693,
            "end": 719
          },
          "async": false,
          "expression": false,
          "start": 681,
          "end": 719
        },
        "arguments": [],
        "optional": false,
        "start": 680,
        "end": 722
      },
      "start": 680,
      "end": 723
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "UpdateExpression",
        "operator": "++",
        "prefix": false,
        "argument": {
          "type": "Identifier",
          "name": "maybeNumber",
          "start": 725,
          "end": 736
        },
        "start": 725,
        "end": 738
      },
      "start": 725,
      "end": 739
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "operator": "!==",
        "left": {
          "type": "Identifier",
          "name": "maybeNumber",
          "start": 745,
          "end": 756
        },
        "right": {
          "type": "Identifier",
          "name": "undefined",
          "start": 761,
          "end": 770
        },
        "start": 745,
        "end": 770
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "UpdateExpression",
              "operator": "++",
              "prefix": false,
              "argument": {
                "type": "Identifier",
                "name": "maybeNumber",
                "start": 779,
                "end": 790
              },
              "start": 779,
              "end": 792
            },
            "start": 779,
            "end": 793
          }
        ],
        "start": 772,
        "end": 796
      },
      "alternate": null,
      "start": 741,
      "end": 796
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "test",
            "typeAnnotation": {
              "type": "TSTypeAnnotation",
              "typeAnnotation": {
                "type": "TSUnionType",
                "types": [
                  {
                    "type": "TSStringKeyword",
                    "start": 810,
                    "end": 816
                  },
                  {
                    "type": "TSUndefinedKeyword",
                    "start": 819,
                    "end": 828
                  }
                ],
                "start": 810,
                "end": 828
              },
              "start": 808,
              "end": 828
            },
            "start": 804,
            "end": 828
          },
          "init": null,
          "start": 804,
          "end": 828
        }
      ],
      "kind": "let",
      "start": 800,
      "end": 829
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "UnaryExpression",
        "operator": "!",
        "prefix": true,
        "argument": {
          "type": "Identifier",
          "name": "test",
          "start": 836,
          "end": 840
        },
        "start": 835,
        "end": 840
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ThrowStatement",
            "argument": {
              "type": "NewExpression",
              "callee": {
                "type": "Identifier",
                "name": "Error",
                "start": 859,
                "end": 864
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "Test is not defined",
                  "start": 865,
                  "end": 886
                }
              ],
              "start": 855,
              "end": 887
            },
            "start": 849,
            "end": 888
          }
        ],
        "start": 842,
        "end": 891
      },
      "alternate": null,
      "start": 831,
      "end": 891
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "ArrowFunctionExpression",
          "generator": false,
          "id": null,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "object": {
                      "type": "Identifier",
                      "name": "test",
                      "start": 907,
                      "end": 911
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "slice",
                      "start": 912,
                      "end": 917
                    },
                    "computed": false,
                    "optional": false,
                    "start": 907,
                    "end": 917
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": 1,
                      "start": 918,
                      "end": 919
                    }
                  ],
                  "optional": false,
                  "start": 907,
                  "end": 920
                },
                "start": 907,
                "end": 921
              }
            ],
            "start": 900,
            "end": 936
          },
          "async": false,
          "expression": false,
          "start": 894,
          "end": 936
        },
        "arguments": [],
        "optional": false,
        "start": 893,
        "end": 939
      },
      "start": 893,
      "end": 940
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "f4",
        "start": 977,
        "end": 979
      },
      "generator": false,
      "expression": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "v",
                  "typeAnnotation": {
                    "type": "TSTypeAnnotation",
                    "typeAnnotation": {
                      "type": "TSNumberKeyword",
                      "start": 996,
                      "end": 1002
                    },
                    "start": 994,
                    "end": 1002
                  },
                  "start": 993,
                  "end": 1002
                },
                "init": null,
                "start": 993,
                "end": 1002
              }
            ],
            "kind": "let",
            "start": 989,
            "end": 1003
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "v",
                          "start": 1032,
                          "end": 1033
                        },
                        "right": {
                          "type": "Literal",
                          "value": 1,
                          "start": 1036,
                          "end": 1037
                        },
                        "start": 1032,
                        "end": 1037
                      },
                      "start": 1032,
                      "end": 1038
                    }
                  ],
                  "start": 1021,
                  "end": 1045
                },
                "async": false,
                "expression": false,
                "start": 1010,
                "end": 1045
              },
              "arguments": [],
              "optional": false,
              "start": 1009,
              "end": 1048
            },
            "start": 1009,
            "end": 1049
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "Identifier",
              "name": "v",
              "start": 1055,
              "end": 1056
            },
            "start": 1055,
            "end": 1057
          }
        ],
        "start": 982,
        "end": 1060
      },
      "start": 968,
      "end": 1060
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "f5",
        "start": 1073,
        "end": 1075
      },
      "generator": false,
      "expression": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "v",
                  "typeAnnotation": {
                    "type": "TSTypeAnnotation",
                    "typeAnnotation": {
                      "type": "TSNumberKeyword",
                      "start": 1092,
                      "end": 1098
                    },
                    "start": 1090,
                    "end": 1098
                  },
                  "start": 1089,
                  "end": 1098
                },
                "init": null,
                "start": 1089,
                "end": 1098
              }
            ],
            "kind": "let",
            "start": 1085,
            "end": 1099
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "FunctionExpression",
                "id": null,
                "generator": true,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "YieldExpression",
                        "delegate": false,
                        "argument": {
                          "type": "Literal",
                          "value": 1,
                          "start": 1135,
                          "end": 1136
                        },
                        "start": 1129,
                        "end": 1136
                      },
                      "start": 1129,
                      "end": 1137
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "v",
                          "start": 1147,
                          "end": 1148
                        },
                        "right": {
                          "type": "Literal",
                          "value": 1,
                          "start": 1151,
                          "end": 1152
                        },
                        "start": 1147,
                        "end": 1152
                      },
                      "start": 1147,
                      "end": 1153
                    }
                  ],
                  "start": 1118,
                  "end": 1160
                },
                "async": false,
                "expression": false,
                "start": 1106,
                "end": 1160
              },
              "arguments": [],
              "optional": false,
              "start": 1105,
              "end": 1163
            },
            "start": 1105,
            "end": 1164
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "Identifier",
              "name": "v",
              "start": 1170,
              "end": 1171
            },
            "start": 1170,
            "end": 1172
          }
        ],
        "start": 1078,
        "end": 1194
      },
      "start": 1064,
      "end": 1194
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "f6",
        "start": 1207,
        "end": 1209
      },
      "generator": false,
      "expression": false,
      "async": false,
      "params": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "v",
                  "typeAnnotation": {
                    "type": "TSTypeAnnotation",
                    "typeAnnotation": {
                      "type": "TSNumberKeyword",
                      "start": 1226,
                      "end": 1232
                    },
                    "start": 1224,
                    "end": 1232
                  },
                  "start": 1223,
                  "end": 1232
                },
                "init": null,
                "start": 1223,
                "end": 1232
              }
            ],
            "kind": "let",
            "start": 1219,
            "end": 1233
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "v",
                          "start": 1268,
                          "end": 1269
                        },
                        "right": {
                          "type": "AwaitExpression",
                          "argument": {
                            "type": "Literal",
                            "value": 1,
                            "start": 1278,
                            "end": 1279
                          },
                          "start": 1272,
                          "end": 1279
                        },
                        "start": 1268,
                        "end": 1279
                      },
                      "start": 1268,
                      "end": 1280
                    }
                  ],
                  "start": 1257,
                  "end": 1287
                },
                "async": true,
                "expression": false,
                "start": 1240,
                "end": 1287
              },
              "arguments": [],
              "optional": false,
              "start": 1239,
              "end": 1290
            },
            "start": 1239,
            "end": 1291
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "Identifier",
              "name": "v",
              "start": 1297,
              "end": 1298
            },
            "start": 1297,
            "end": 1299
          }
        ],
        "start": 1212,
        "end": 1321
      },
      "start": 1198,
      "end": 1321
    }
  ],
  "sourceType": "module",
  "start": 50,
  "end": 1321
}