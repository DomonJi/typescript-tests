{
  "type": "Program",
  "body": [
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [],
        "start": 48,
        "end": 50
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 58,
          "end": 59
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "VariableDeclaration",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "isString",
                    "start": 73,
                    "end": 81
                  },
                  "init": {
                    "type": "BinaryExpression",
                    "operator": "===",
                    "left": {
                      "type": "UnaryExpression",
                      "operator": "typeof",
                      "prefix": true,
                      "argument": {
                        "type": "Identifier",
                        "name": "e",
                        "start": 91,
                        "end": 92
                      },
                      "start": 84,
                      "end": 92
                    },
                    "right": {
                      "type": "Literal",
                      "value": "string",
                      "start": 97,
                      "end": 105
                    },
                    "start": 84,
                    "end": 105
                  },
                  "start": 73,
                  "end": 105
                }
              ],
              "kind": "const",
              "start": 67,
              "end": 106
            },
            {
              "type": "IfStatement",
              "test": {
                "type": "Identifier",
                "name": "isString",
                "start": 115,
                "end": 123
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "e",
                          "start": 135,
                          "end": 136
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "toUpperCase",
                          "start": 137,
                          "end": 148
                        },
                        "computed": false,
                        "optional": false,
                        "start": 135,
                        "end": 148
                      },
                      "arguments": [],
                      "optional": false,
                      "start": 135,
                      "end": 150
                    },
                    "start": 135,
                    "end": 151
                  }
                ],
                "start": 125,
                "end": 169
              },
              "alternate": null,
              "start": 111,
              "end": 169
            },
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "operator": "===",
                "left": {
                  "type": "UnaryExpression",
                  "operator": "typeof",
                  "prefix": true,
                  "argument": {
                    "type": "Identifier",
                    "name": "e",
                    "start": 186,
                    "end": 187
                  },
                  "start": 179,
                  "end": 187
                },
                "right": {
                  "type": "Literal",
                  "value": "string",
                  "start": 192,
                  "end": 200
                },
                "start": 179,
                "end": 200
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "e",
                          "start": 212,
                          "end": 213
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "toUpperCase",
                          "start": 214,
                          "end": 225
                        },
                        "computed": false,
                        "optional": false,
                        "start": 212,
                        "end": 225
                      },
                      "arguments": [],
                      "optional": false,
                      "start": 212,
                      "end": 227
                    },
                    "start": 212,
                    "end": 228
                  }
                ],
                "start": 202,
                "end": 246
              },
              "alternate": null,
              "start": 175,
              "end": 246
            }
          ],
          "start": 61,
          "end": 248
        },
        "start": 51,
        "end": 248
      },
      "finalizer": null,
      "start": 44,
      "end": 248
    },
    {
      "type": "TryStatement",
      "block": {
        "type": "BlockStatement",
        "body": [],
        "start": 254,
        "end": 256
      },
      "handler": {
        "type": "CatchClause",
        "param": {
          "type": "Identifier",
          "name": "e",
          "start": 264,
          "end": 265
        },
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "VariableDeclaration",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "isString",
                    "start": 279,
                    "end": 287
                  },
                  "init": {
                    "type": "BinaryExpression",
                    "operator": "===",
                    "left": {
                      "type": "UnaryExpression",
                      "operator": "typeof",
                      "prefix": true,
                      "argument": {
                        "type": "Identifier",
                        "name": "e",
                        "start": 297,
                        "end": 298
                      },
                      "start": 290,
                      "end": 298
                    },
                    "right": {
                      "type": "Literal",
                      "value": "string",
                      "start": 303,
                      "end": 311
                    },
                    "start": 290,
                    "end": 311
                  },
                  "start": 279,
                  "end": 311
                }
              ],
              "kind": "const",
              "start": 273,
              "end": 312
            },
            {
              "type": "ExpressionStatement",
              "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                  "type": "Identifier",
                  "name": "e",
                  "start": 318,
                  "end": 319
                },
                "right": {
                  "type": "Literal",
                  "value": 1,
                  "start": 322,
                  "end": 323
                },
                "start": 318,
                "end": 323
              },
              "start": 318,
              "end": 324
            },
            {
              "type": "IfStatement",
              "test": {
                "type": "Identifier",
                "name": "isString",
                "start": 334,
                "end": 342
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "e",
                          "start": 354,
                          "end": 355
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "toUpperCase",
                          "start": 356,
                          "end": 367
                        },
                        "computed": false,
                        "optional": false,
                        "start": 354,
                        "end": 367
                      },
                      "arguments": [],
                      "optional": false,
                      "start": 354,
                      "end": 369
                    },
                    "start": 354,
                    "end": 370
                  }
                ],
                "start": 344,
                "end": 393
              },
              "alternate": null,
              "start": 330,
              "end": 393
            },
            {
              "type": "IfStatement",
              "test": {
                "type": "BinaryExpression",
                "operator": "===",
                "left": {
                  "type": "UnaryExpression",
                  "operator": "typeof",
                  "prefix": true,
                  "argument": {
                    "type": "Identifier",
                    "name": "e",
                    "start": 410,
                    "end": 411
                  },
                  "start": 403,
                  "end": 411
                },
                "right": {
                  "type": "Literal",
                  "value": "string",
                  "start": 416,
                  "end": 424
                },
                "start": 403,
                "end": 424
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "e",
                          "start": 436,
                          "end": 437
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "toUpperCase",
                          "start": 438,
                          "end": 449
                        },
                        "computed": false,
                        "optional": false,
                        "start": 436,
                        "end": 449
                      },
                      "arguments": [],
                      "optional": false,
                      "start": 436,
                      "end": 451
                    },
                    "start": 436,
                    "end": 452
                  }
                ],
                "start": 426,
                "end": 470
              },
              "alternate": null,
              "start": 399,
              "end": 470
            }
          ],
          "start": 267,
          "end": 472
        },
        "start": 257,
        "end": 472
      },
      "finalizer": null,
      "start": 250,
      "end": 472
    }
  ],
  "sourceType": "module",
  "start": 44,
  "end": 473
}