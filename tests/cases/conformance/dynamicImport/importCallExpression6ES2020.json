{
  "type": "Program",
  "body": [
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "ClassDeclaration",
        "id": {
          "type": "Identifier",
          "name": "B",
          "start": 74,
          "end": 75
        },
        "body": {
          "type": "ClassBody",
          "body": [
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "print",
                "start": 83,
                "end": 88
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "expression": false,
                "async": false,
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "Literal",
                        "value": "I am B",
                        "start": 100,
                        "end": 108
                      },
                      "start": 93,
                      "end": 108
                    }
                  ],
                  "start": 91,
                  "end": 109
                },
                "params": [],
                "start": 88,
                "end": 109
              },
              "computed": false,
              "static": false,
              "kind": "method",
              "override": false,
              "start": 83,
              "end": 109
            }
          ],
          "start": 76,
          "end": 112
        },
        "superClass": null,
        "start": 68,
        "end": 112
      },
      "specifiers": [],
      "source": null,
      "exportKind": "value",
      "assertions": [],
      "start": 61,
      "end": 112
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "foo",
          "start": 132,
          "end": 135
        },
        "generator": false,
        "expression": false,
        "async": false,
        "params": [],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "Literal",
                "value": "foo",
                "start": 147,
                "end": 152
              },
              "start": 140,
              "end": 152
            }
          ],
          "start": 138,
          "end": 154
        },
        "start": 123,
        "end": 154
      },
      "specifiers": [],
      "source": null,
      "exportKind": "value",
      "assertions": [],
      "start": 116,
      "end": 154
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "backup",
          "start": 194,
          "end": 200
        },
        "generator": false,
        "expression": false,
        "async": false,
        "params": [],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "Literal",
                "value": "backup",
                "start": 212,
                "end": 220
              },
              "start": 205,
              "end": 221
            }
          ],
          "start": 203,
          "end": 223
        },
        "start": 185,
        "end": 223
      },
      "specifiers": [],
      "source": null,
      "exportKind": "value",
      "assertions": [],
      "start": 178,
      "end": 223
    },
    {
      "type": "TSDeclareFunction",
      "id": {
        "type": "Identifier",
        "name": "bar",
        "start": 264,
        "end": 267
      },
      "generator": false,
      "expression": false,
      "async": false,
      "params": [],
      "returnType": {
        "type": "TSTypeAnnotation",
        "typeAnnotation": {
          "type": "TSBooleanKeyword",
          "start": 271,
          "end": 278
        },
        "start": 269,
        "end": 278
      },
      "declare": true,
      "start": 247,
      "end": 279
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "specify",
            "start": 287,
            "end": 294
          },
          "init": {
            "type": "ConditionalExpression",
            "test": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "bar",
                "start": 297,
                "end": 300
              },
              "arguments": [],
              "optional": false,
              "start": 297,
              "end": 302
            },
            "consequent": {
              "type": "Literal",
              "value": "./0",
              "start": 305,
              "end": 310
            },
            "alternate": {
              "type": "Identifier",
              "name": "undefined",
              "start": 313,
              "end": 322
            },
            "start": 297,
            "end": 322
          },
          "start": 287,
          "end": 322
        }
      ],
      "kind": "const",
      "start": 281,
      "end": 323
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "myModule",
            "start": 329,
            "end": 337
          },
          "init": {
            "type": "ImportExpression",
            "source": {
              "type": "Identifier",
              "name": "specify",
              "start": 347,
              "end": 354
            },
            "attributes": null,
            "start": 340,
            "end": 355
          },
          "start": 329,
          "end": 355
        }
      ],
      "kind": "let",
      "start": 325,
      "end": 356
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "myModule1",
            "start": 362,
            "end": 371
          },
          "init": {
            "type": "ImportExpression",
            "source": {
              "type": "Identifier",
              "name": "undefined",
              "start": 381,
              "end": 390
            },
            "attributes": null,
            "start": 374,
            "end": 391
          },
          "start": 362,
          "end": 391
        }
      ],
      "kind": "let",
      "start": 358,
      "end": 392
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "myModule2",
            "start": 398,
            "end": 407
          },
          "init": {
            "type": "ImportExpression",
            "source": {
              "type": "ConditionalExpression",
              "test": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "bar",
                  "start": 417,
                  "end": 420
                },
                "arguments": [],
                "optional": false,
                "start": 417,
                "end": 422
              },
              "consequent": {
                "type": "Literal",
                "value": "./1",
                "start": 425,
                "end": 430
              },
              "alternate": {
                "type": "Literal",
                "value": null,
                "start": 433,
                "end": 437
              },
              "start": 417,
              "end": 437
            },
            "attributes": null,
            "start": 410,
            "end": 438
          },
          "start": 398,
          "end": 438
        }
      ],
      "kind": "let",
      "start": 394,
      "end": 439
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "myModule3",
            "start": 445,
            "end": 454
          },
          "init": {
            "type": "ImportExpression",
            "source": {
              "type": "Literal",
              "value": null,
              "start": 464,
              "end": 468
            },
            "attributes": null,
            "start": 457,
            "end": 469
          },
          "start": 445,
          "end": 469
        }
      ],
      "kind": "let",
      "start": 441,
      "end": 470
    }
  ],
  "sourceType": "module",
  "start": 61,
  "end": 472
}