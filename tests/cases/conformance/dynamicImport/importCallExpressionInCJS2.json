{
  "type": "Program",
  "body": [
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "foo",
          "start": 79,
          "end": 82
        },
        "generator": false,
        "expression": false,
        "async": false,
        "params": [],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "Literal",
                "value": "foo",
                "start": 94,
                "end": 99
              },
              "start": 87,
              "end": 100
            }
          ],
          "start": 85,
          "end": 102
        },
        "start": 70,
        "end": 102
      },
      "specifiers": [],
      "source": null,
      "exportKind": "value",
      "assertions": [],
      "start": 63,
      "end": 102
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "backup",
          "start": 142,
          "end": 148
        },
        "generator": false,
        "expression": false,
        "async": false,
        "params": [],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "Literal",
                "value": "backup",
                "start": 160,
                "end": 168
              },
              "start": 153,
              "end": 169
            }
          ],
          "start": 151,
          "end": 171
        },
        "start": 133,
        "end": 171
      },
      "specifiers": [],
      "source": null,
      "exportKind": "value",
      "assertions": [],
      "start": 126,
      "end": 171
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "compute",
        "start": 210,
        "end": 217
      },
      "generator": false,
      "expression": false,
      "async": true,
      "params": [
        {
          "type": "Identifier",
          "name": "promise",
          "typeAnnotation": {
            "type": "TSTypeAnnotation",
            "typeAnnotation": {
              "type": "TSTypeReference",
              "typeName": {
                "type": "Identifier",
                "name": "Promise",
                "start": 227,
                "end": 234
              },
              "typeParameters": {
                "type": "TSTypeParameterInstantiation",
                "params": [
                  {
                    "type": "TSAnyKeyword",
                    "start": 235,
                    "end": 238
                  }
                ],
                "start": 234,
                "end": 239
              },
              "start": 227,
              "end": 239
            },
            "start": 225,
            "end": 239
          },
          "start": 218,
          "end": 239
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "j",
                  "start": 252,
                  "end": 253
                },
                "init": {
                  "type": "AwaitExpression",
                  "argument": {
                    "type": "Identifier",
                    "name": "promise",
                    "start": 262,
                    "end": 269
                  },
                  "start": 256,
                  "end": 269
                },
                "start": 252,
                "end": 269
              }
            ],
            "kind": "let",
            "start": 248,
            "end": 270
          },
          {
            "type": "IfStatement",
            "test": {
              "type": "UnaryExpression",
              "operator": "!",
              "prefix": true,
              "argument": {
                "type": "Identifier",
                "name": "j",
                "start": 281,
                "end": 282
              },
              "start": 280,
              "end": 282
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "j",
                      "start": 295,
                      "end": 296
                    },
                    "right": {
                      "type": "AwaitExpression",
                      "argument": {
                        "type": "ImportExpression",
                        "source": {
                          "type": "Literal",
                          "value": "./1",
                          "start": 312,
                          "end": 317
                        },
                        "attributes": null,
                        "start": 305,
                        "end": 318
                      },
                      "start": 299,
                      "end": 318
                    },
                    "start": 295,
                    "end": 318
                  },
                  "start": 295,
                  "end": 319
                },
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "j",
                        "start": 336,
                        "end": 337
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "backup",
                        "start": 338,
                        "end": 344
                      },
                      "computed": false,
                      "optional": false,
                      "start": 336,
                      "end": 344
                    },
                    "arguments": [],
                    "optional": false,
                    "start": 336,
                    "end": 346
                  },
                  "start": 329,
                  "end": 347
                }
              ],
              "start": 284,
              "end": 354
            },
            "alternate": null,
            "start": 276,
            "end": 354
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "object": {
                  "type": "Identifier",
                  "name": "j",
                  "start": 367,
                  "end": 368
                },
                "property": {
                  "type": "Identifier",
                  "name": "foo",
                  "start": 369,
                  "end": 372
                },
                "computed": false,
                "optional": false,
                "start": 367,
                "end": 372
              },
              "arguments": [],
              "optional": false,
              "start": 367,
              "end": 374
            },
            "start": 360,
            "end": 375
          }
        ],
        "start": 241,
        "end": 378
      },
      "start": 195,
      "end": 378
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "compute",
          "start": 382,
          "end": 389
        },
        "arguments": [
          {
            "type": "ImportExpression",
            "source": {
              "type": "Literal",
              "value": "./0",
              "start": 397,
              "end": 402
            },
            "attributes": null,
            "start": 390,
            "end": 403
          }
        ],
        "optional": false,
        "start": 382,
        "end": 404
      },
      "start": 382,
      "end": 405
    }
  ],
  "sourceType": "module",
  "start": 63,
  "end": 405
}