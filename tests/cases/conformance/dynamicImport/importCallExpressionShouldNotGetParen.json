{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "localeName",
            "start": 68,
            "end": 78
          },
          "init": {
            "type": "Literal",
            "value": "zh-CN",
            "start": 81,
            "end": 88
          },
          "start": 68,
          "end": 88
        }
      ],
      "kind": "const",
      "start": 62,
      "end": 89
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "ImportExpression",
            "source": {
              "type": "TemplateLiteral",
              "quasis": [
                {
                  "type": "TemplateElement",
                  "value": {
                    "raw": "./locales/",
                    "cooked": "./locales/"
                  },
                  "tail": false,
                  "start": 98,
                  "end": 111
                },
                {
                  "type": "TemplateElement",
                  "value": {
                    "raw": ".js",
                    "cooked": ".js"
                  },
                  "tail": true,
                  "start": 121,
                  "end": 126
                }
              ],
              "expressions": [
                {
                  "type": "Identifier",
                  "name": "localeName",
                  "start": 111,
                  "end": 121
                }
              ],
              "start": 98,
              "end": 126
            },
            "attributes": null,
            "start": 91,
            "end": 127
          },
          "property": {
            "type": "Identifier",
            "name": "then",
            "start": 128,
            "end": 132
          },
          "computed": false,
          "optional": false,
          "start": 91,
          "end": 132
        },
        "arguments": [
          {
            "type": "ArrowFunctionExpression",
            "generator": false,
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "bar",
                "start": 133,
                "end": 136
              }
            ],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 151,
                        "end": 152
                      },
                      "init": {
                        "type": "Identifier",
                        "name": "bar",
                        "start": 155,
                        "end": 158
                      },
                      "start": 151,
                      "end": 158
                    }
                  ],
                  "kind": "let",
                  "start": 147,
                  "end": 159
                }
              ],
              "start": 140,
              "end": 162
            },
            "async": false,
            "expression": false,
            "start": 133,
            "end": 162
          }
        ],
        "optional": false,
        "start": 91,
        "end": 163
      },
      "start": 91,
      "end": 164
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "object": {
            "type": "ImportExpression",
            "source": {
              "type": "BinaryExpression",
              "operator": "+",
              "left": {
                "type": "BinaryExpression",
                "operator": "+",
                "left": {
                  "type": "Literal",
                  "value": "./locales/",
                  "start": 175,
                  "end": 187
                },
                "right": {
                  "type": "Identifier",
                  "name": "localeName",
                  "start": 190,
                  "end": 200
                },
                "start": 175,
                "end": 200
              },
              "right": {
                "type": "Literal",
                "value": ".js",
                "start": 203,
                "end": 208
              },
              "start": 175,
              "end": 208
            },
            "attributes": null,
            "start": 168,
            "end": 209
          },
          "property": {
            "type": "Identifier",
            "name": "then",
            "start": 210,
            "end": 214
          },
          "computed": false,
          "optional": false,
          "start": 168,
          "end": 214
        },
        "arguments": [
          {
            "type": "ArrowFunctionExpression",
            "generator": false,
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "bar",
                "start": 215,
                "end": 218
              }
            ],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "x",
                        "start": 233,
                        "end": 234
                      },
                      "init": {
                        "type": "Identifier",
                        "name": "bar",
                        "start": 237,
                        "end": 240
                      },
                      "start": 233,
                      "end": 240
                    }
                  ],
                  "kind": "let",
                  "start": 229,
                  "end": 241
                }
              ],
              "start": 222,
              "end": 244
            },
            "async": false,
            "expression": false,
            "start": 215,
            "end": 244
          }
        ],
        "optional": false,
        "start": 168,
        "end": 245
      },
      "start": 168,
      "end": 246
    }
  ],
  "sourceType": "module",
  "start": 62,
  "end": 248
}