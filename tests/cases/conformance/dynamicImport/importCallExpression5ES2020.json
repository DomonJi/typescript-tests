{
  "type": "Program",
  "body": [
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "ClassDeclaration",
        "id": {
          "type": "Identifier",
          "name": "B",
          "start": 102,
          "end": 103
        },
        "body": {
          "type": "ClassBody",
          "body": [
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "print",
                "start": 111,
                "end": 116
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "generator": false,
                "expression": false,
                "async": false,
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "Literal",
                        "value": "I am B",
                        "start": 128,
                        "end": 136
                      },
                      "start": 121,
                      "end": 136
                    }
                  ],
                  "start": 119,
                  "end": 137
                },
                "params": [],
                "start": 116,
                "end": 137
              },
              "computed": false,
              "static": false,
              "kind": "method",
              "override": false,
              "start": 111,
              "end": 137
            }
          ],
          "start": 104,
          "end": 140
        },
        "superClass": null,
        "start": 96,
        "end": 140
      },
      "specifiers": [],
      "source": null,
      "exportKind": "value",
      "assertions": [],
      "start": 89,
      "end": 140
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "foo",
          "start": 160,
          "end": 163
        },
        "generator": false,
        "expression": false,
        "async": false,
        "params": [],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "Literal",
                "value": "foo",
                "start": 175,
                "end": 180
              },
              "start": 168,
              "end": 180
            }
          ],
          "start": 166,
          "end": 182
        },
        "start": 151,
        "end": 182
      },
      "specifiers": [],
      "source": null,
      "exportKind": "value",
      "assertions": [],
      "start": 144,
      "end": 182
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "backup",
          "start": 222,
          "end": 228
        },
        "generator": false,
        "expression": false,
        "async": false,
        "params": [],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "Literal",
                "value": "backup",
                "start": 240,
                "end": 248
              },
              "start": 233,
              "end": 249
            }
          ],
          "start": 231,
          "end": 251
        },
        "start": 213,
        "end": 251
      },
      "specifiers": [],
      "source": null,
      "exportKind": "value",
      "assertions": [],
      "start": 206,
      "end": 251
    },
    {
      "type": "TSDeclareFunction",
      "id": {
        "type": "Identifier",
        "name": "bar",
        "start": 292,
        "end": 295
      },
      "generator": false,
      "expression": false,
      "async": false,
      "params": [],
      "returnType": {
        "type": "TSTypeAnnotation",
        "typeAnnotation": {
          "type": "TSBooleanKeyword",
          "start": 299,
          "end": 306
        },
        "start": 297,
        "end": 306
      },
      "declare": true,
      "start": 275,
      "end": 307
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "specify",
            "start": 315,
            "end": 322
          },
          "init": {
            "type": "ConditionalExpression",
            "test": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "bar",
                "start": 325,
                "end": 328
              },
              "arguments": [],
              "optional": false,
              "start": 325,
              "end": 330
            },
            "consequent": {
              "type": "Literal",
              "value": "./0",
              "start": 333,
              "end": 338
            },
            "alternate": {
              "type": "Identifier",
              "name": "undefined",
              "start": 341,
              "end": 350
            },
            "start": 325,
            "end": 350
          },
          "start": 315,
          "end": 350
        }
      ],
      "kind": "const",
      "start": 309,
      "end": 351
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "myModule",
            "start": 357,
            "end": 365
          },
          "init": {
            "type": "ImportExpression",
            "source": {
              "type": "Identifier",
              "name": "specify",
              "start": 375,
              "end": 382
            },
            "attributes": null,
            "start": 368,
            "end": 383
          },
          "start": 357,
          "end": 383
        }
      ],
      "kind": "let",
      "start": 353,
      "end": 384
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "myModule1",
            "start": 390,
            "end": 399
          },
          "init": {
            "type": "ImportExpression",
            "source": {
              "type": "Identifier",
              "name": "undefined",
              "start": 409,
              "end": 418
            },
            "attributes": null,
            "start": 402,
            "end": 419
          },
          "start": 390,
          "end": 419
        }
      ],
      "kind": "let",
      "start": 386,
      "end": 420
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "myModule2",
            "start": 426,
            "end": 435
          },
          "init": {
            "type": "ImportExpression",
            "source": {
              "type": "ConditionalExpression",
              "test": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "bar",
                  "start": 445,
                  "end": 448
                },
                "arguments": [],
                "optional": false,
                "start": 445,
                "end": 450
              },
              "consequent": {
                "type": "Literal",
                "value": "./1",
                "start": 453,
                "end": 458
              },
              "alternate": {
                "type": "Literal",
                "value": null,
                "start": 461,
                "end": 465
              },
              "start": 445,
              "end": 465
            },
            "attributes": null,
            "start": 438,
            "end": 466
          },
          "start": 426,
          "end": 466
        }
      ],
      "kind": "let",
      "start": 422,
      "end": 467
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "myModule3",
            "start": 473,
            "end": 482
          },
          "init": {
            "type": "ImportExpression",
            "source": {
              "type": "Literal",
              "value": null,
              "start": 492,
              "end": 496
            },
            "attributes": null,
            "start": 485,
            "end": 497
          },
          "start": 473,
          "end": 497
        }
      ],
      "kind": "let",
      "start": 469,
      "end": 498
    }
  ],
  "sourceType": "module",
  "start": 89,
  "end": 500
}